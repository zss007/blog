<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青松的博客</title>
  
  <subtitle>天行健，君子以自强不息；地势坤，君子以厚德载物。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.master-ss.cn/"/>
  <updated>2020-03-10T01:59:20.699Z</updated>
  <id>http://blog.master-ss.cn/</id>
  
  <author>
    <name>张松松</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python 数据类型</title>
    <link href="http://blog.master-ss.cn/note/python/type/"/>
    <id>http://blog.master-ss.cn/note/python/type/</id>
    <published>2020-03-10T01:04:59.237Z</published>
    <updated>2020-03-10T01:59:20.699Z</updated>
    
    <content type="html"><![CDATA[<p>python 数据类型</p><h3 id="一、基本数据类型"><a href="#一、基本数据类型" class="headerlink" title="一、基本数据类型"></a>一、基本数据类型</h3><ul><li>Python 中的变量不需要声明。每个变量在使用前都必须赋值，变量赋值以后该变量才会被创建</li><li>在 Python 中，变量就是变量，它没有类型，我们所说的”类型”是变量所指的内存中对象的类型</li><li>等号（=）用来给变量赋值</li><li>等号（=）运算符左边是一个变量名,等号（=）运算符右边是存储在变量中的值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 允许同时为多个变量赋值</span><br><span class="line">a = b = c = 1</span><br><span class="line"></span><br><span class="line"># 可以为多个对象指定多个变量</span><br><span class="line">a, b, c = 1, 2, &quot;runoob&quot;</span><br></pre></td></tr></table></figure><ul><li>标准数据类型<ul><li>六个标准的数据类型<ul><li>Number</li><li>String</li><li>List</li><li>Dictionary</li><li>Tuple</li><li>Set</li></ul></li><li>是否可变<ul><li>不可变数据：Number（数字）、String（字符串）、Tuple（元组）</li><li>可变数据：List（列表）、Dictionary（字典）、Set（集合）</li></ul></li></ul></li></ul><h3 id="二、Number"><a href="#二、Number" class="headerlink" title="二、Number"></a>二、Number</h3><ul><li>整数(int)</li><li>浮点型(float)</li><li>布尔型(bool)，值是 1（True） 和 0（False），它们可以和数字相加</li><li>复数(complex)，复数是一个数学概念，包含实部和虚部，如 1 + 2j、 1.1 + 2.2j，其中 1、1.1 为实部，2、2.2 为虚部</li><li>常用函数<ul><li>abs 绝对值</li><li>max(x1, x2,…)</li><li>min(x1, x2,…)</li><li>pow(x, y)</li><li>round(x, [n]) 返回浮点数 x 的四舍五入值，如给出 n 值，则代表舍入到小数点后的位数</li><li>sqrt(x) 数字 x 的平方根</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">a, b, c, d = 20, 5.5, True, 4+3j</span><br><span class="line"># &lt;class &apos;int&apos;&gt; &lt;class &apos;float&apos;&gt; &lt;class &apos;bool&apos;&gt; &lt;class &apos;complex&apos;&gt;</span><br><span class="line">print(type(a), type(b), type(c), type(d))</span><br><span class="line"></span><br><span class="line">a = 111</span><br><span class="line">isinstance(a, int)</span><br><span class="line"></span><br><span class="line"># isinstance 和 type 的区别：type() 不会认为子类是一种父类类型；isinstance() 会认为子类是一种父类类型</span><br><span class="line">class A:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">class B(A):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line">isinstance(A(), A)  # True</span><br><span class="line">type(A()) == A  # True</span><br><span class="line">isinstance(B(), A)  # True</span><br><span class="line">type(B()) == A  # False</span><br><span class="line"></span><br><span class="line"># 1234.57 str</span><br><span class="line">format(1234.567, &apos;0.2f&apos;)</span><br><span class="line"></span><br><span class="line"># 1,234.567 str</span><br><span class="line">format(1234.567, &apos;,&apos;)</span><br><span class="line"></span><br><span class="line"># 123,456,789.00 str</span><br><span class="line">format(123456789, &apos;0,.2f&apos;)</span><br><span class="line"></span><br><span class="line"># 请您向8810381账户转账￥12,334.100 如遇格式化输出数字，则在 &#123;&#125; 增加 : 前缀，之后写上数字格式化语句</span><br><span class="line">&apos;请您向&#123;&#125;账户转账￥&#123;:0,.3f&#125;&apos;.format(&apos;8810381&apos;, 12334.1)</span><br></pre></td></tr></table></figure><h3 id="三、String"><a href="#三、String" class="headerlink" title="三、String"></a>三、String</h3><ul><li>拼接</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># MF123</span><br><span class="line">&apos;MF&apos; + &apos;123&apos;</span><br><span class="line">&apos;MF&apos; + str(123)</span><br></pre></td></tr></table></figure><ul><li>反斜杠</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 使用反斜杠(\)转义特殊字符</span><br><span class="line">print(&apos;Ru\noob&apos;)</span><br><span class="line"># Ru</span><br><span class="line"># oob</span><br><span class="line"></span><br><span class="line"># 如果不想让反斜杠发生转义，可以在字符串前面添加一个 r，表示原始字符串</span><br><span class="line">print(r&apos;Ru\noob&apos;)</span><br><span class="line"># Ru\noob</span><br><span class="line"></span><br><span class="line"># 反斜杠(\)可以作为续行符，表示下一行是上一行的延续。也可以使用 &quot;&quot;&quot;...&quot;&quot;&quot; 或者 &apos;&apos;&apos;...&apos;&apos;&apos; 跨越多行</span><br></pre></td></tr></table></figure><ul><li><p>大小写转换</p><ul><li>str.lower() 转换为小写</li><li>str.upper() 转换为大写</li><li>str.capitalize() 字符串首字母大写</li><li>str.title() 每个单词首字母大写</li><li>str.swapcase() 大小写互换</li></ul></li><li><p>格式化</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># I love you</span><br><span class="line">&apos;&#123;&#125; &#123;&#125; you&apos;.format(&apos;I&apos;, &apos;love&apos;)</span><br><span class="line"></span><br><span class="line"># www.imooc.com</span><br><span class="line">&apos;&#123;2&#125;.&#123;1&#125;.&#123;0&#125;&apos;.format(&apos;com&apos;, &apos;imooc&apos;, &apos;www&apos;)</span><br><span class="line"></span><br><span class="line"># 我叫小明,我在3-2</span><br><span class="line">print(&apos;我叫&#123;p1&#125;,我在&#123;p2&#125;&apos;.format(p1=&apos;小明&apos;, p2=&apos;3-2&apos;))</span><br><span class="line"></span><br><span class="line"># 在 : 后传入一个整数, 可以保证该域至少有这么多的宽度，用于美化表格时很有用</span><br><span class="line">table = &#123;&apos;Google&apos;: 1, &apos;Runoob&apos;: 2, &apos;Taobao&apos;: 3&#125;</span><br><span class="line">for name, number in table.items():</span><br><span class="line">    print(&apos;&#123;0:10&#125; ==&gt; &#123;1:10&#125;&apos;.format(name, number))</span><br><span class="line"># Google     ==&gt;          1</span><br><span class="line"># Runoob     ==&gt;          2</span><br><span class="line"># Taobao     ==&gt;          3</span><br><span class="line"></span><br><span class="line"># 字典输出格式化</span><br><span class="line">table = &#123;&apos;Google&apos;: 1, &apos;Runoob&apos;: 2, &apos;Taobao&apos;: 3&#125;</span><br><span class="line">print(&apos;Runoob: &#123;Runoob:d&#125;; Google: &#123;Google:d&#125;; Taobao: &#123;Taobao:d&#125;&apos;.format(**table))</span><br></pre></td></tr></table></figure><ul><li>早期的格式化输出<br>早期的字符串格式化使用 %s、%d、%f 来格式化字符串</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 我叫ben,今年25岁,体重70.30公斤</span><br><span class="line">&apos;我叫%s,今年%d岁,体重%.2f公斤&apos;%(&apos;ben&apos;, 25, 70.3)</span><br></pre></td></tr></table></figure><ul><li>截取，语法：变量[头下标:尾下标:步长]</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">mystr = &apos;Runoob&apos;</span><br><span class="line"></span><br><span class="line"># 输出字符串第一个字符，R</span><br><span class="line">print(mystr[0])</span><br><span class="line"></span><br><span class="line"># 输出从第三个开始到第五个的字符，noo</span><br><span class="line">print(mystr[2:5])</span><br><span class="line"></span><br><span class="line"># 输出第一个到倒数第二个的字符，步长为 2，Rno</span><br><span class="line">print(mystr[0:-1:2])</span><br><span class="line"></span><br><span class="line"># 输出第三个到最后一个，noob</span><br><span class="line">print(mystr[2:])</span><br><span class="line"></span><br><span class="line"># 输出字符串两次，也可以写成 print(2 * str)，RunoobRunoob</span><br><span class="line">print(mystr * 2)</span><br><span class="line"></span><br><span class="line"># Python 字符串不能被改变。向一个索引位置赋值，比如 mystr[0] = &apos;m&apos;会导致错误</span><br></pre></td></tr></table></figure><ul><li>str.find(目标串, [开始位置], [结束位置])</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 9</span><br><span class="line">&apos;Nice to meet you&apos;.find(&apos;ee&apos;)</span><br><span class="line"></span><br><span class="line"># 21</span><br><span class="line">&apos;Nice to meet you, i need you help!&apos;.find(&apos;ee&apos;, 17)</span><br><span class="line"></span><br><span class="line"># -1</span><br><span class="line">&apos;Nice to meet you, i need you help!&apos;.find(&apos;ee&apos;, 17, 22)</span><br></pre></td></tr></table></figure><ul><li><p>rfind<br>类似于 find，只不过是从右面开始查找，返回的是第一个字符的索引，如果查询不到同样返回 -1</p></li><li><p>index<br>跟 find() 方法一样，只不过如果 str 不在 mystr 中会报错，会报一个异常</p></li><li><p>rindex<br>类似 index，只不过是从右面开始查找，返回的是开始查询的索引，如果查询不到则报错</p></li><li><p>str.count(mystr, start=0, end=len(str))<br>返回 mystr 在 start 和 end 之间在 mystr 中出现的次数；如果找到需要的数据，返回出现的次数，如果没有找到，则返回 0</p></li><li><p>endswith(suffix, beg=0, end=len(string))<br>检查字符串是否以 obj 结束，如果 beg 或者 end 指定则检查指定的范围内是否以 obj 结束，如果是，返回 True,否则返回 False</p></li><li><p>startswith(substr, beg=0,end=len(string))<br>检查字符串是否是以指定子字符串 substr 开头，是则返回 True，否则返回 False。如果 beg 和 end 指定值，则在指定范围内检查</p></li><li><p>isdigit()<br>如果字符串只包含数字则返回 True 否则返回 False</p></li><li><p>isnumeric()<br>如果字符串中只包含数字字符，则返回 True，否则返回 False</p></li><li><p>split(str=””, num=string.count(str))</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">str = &quot;this is string example....wow!!!&quot;</span><br><span class="line"># [&apos;this&apos;, &apos;is&apos;, &apos;string&apos;, &apos;example....wow!!!&apos;]</span><br><span class="line">print (str.split( ))       # 以空格为分隔符</span><br><span class="line"></span><br><span class="line"># [&apos;th&apos;, &apos;s is string example....wow!!!&apos;]</span><br><span class="line">print (str.split(&apos;i&apos;,1))   # 以 i 为分隔符，num 为分割次数，默认为 -1, 即分隔所有</span><br><span class="line"></span><br><span class="line"># [&apos;this is string example....&apos;, &apos;o&apos;, &apos;!!!&apos;]</span><br><span class="line">print (str.split(&apos;w&apos;))     # 以 w 为分隔符</span><br></pre></td></tr></table></figure><ul><li>join(seq)<br>以指定字符串作为分隔符，将 seq 中所有的元素(的字符串表示)合并为一个新的字符串</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># r,u,n,o,o,b</span><br><span class="line">&apos;,&apos;.join([&quot;r&quot;, &quot;u&quot;, &quot;n&quot;, &quot;o&quot;, &quot;o&quot;, &quot;b&quot;])</span><br></pre></td></tr></table></figure><ul><li>in</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># True</span><br><span class="line">&apos;ee&apos; in &apos;Nice to meet you&apos;</span><br></pre></td></tr></table></figure><ul><li>str.replace(原始串, 目标串, [替换次数])</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># aaaddbccc</span><br><span class="line">&apos;aaabbbccc&apos;.replace(&apos;b&apos;, &apos;d&apos;, 2)</span><br><span class="line"></span><br><span class="line"># aaadddccc</span><br><span class="line">&apos;aaabbbccc&apos;.replace(&apos;b&apos;, &apos;d&apos;)</span><br></pre></td></tr></table></figure><ul><li>删除空白<ul><li>str.lstrip() 删除左侧空白</li><li>str.rstrip() 删除右侧空白</li><li>str.strip() 删除两端空白</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Marry</span><br><span class="line">&apos;    Marry    &apos;.strip(&apos; &apos;)</span><br><span class="line">&apos;####Marry####&apos;.strip(&apos;#&apos;)</span><br></pre></td></tr></table></figure><ul><li>字符长度 len(str)</li><li>行分割，返回一个包含各个元素的列表<ul><li>mystr.splitlines()</li></ul></li></ul><h3 id="四、列表-List"><a href="#四、列表-List" class="headerlink" title="四、列表 List"></a>四、列表 List</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"># 创建</span><br><span class="line">list1 = [&apos;Google&apos;, &apos;Runoob&apos;, 1997, 2000]</span><br><span class="line">list2 = [12, 3, 14]</span><br><span class="line"></span><br><span class="line"># 访问 [&apos;Runoob&apos;, 2000]</span><br><span class="line">list1[1:4:2]</span><br><span class="line"></span><br><span class="line"># 列表截取</span><br><span class="line">inputWords = &apos;I like runoob&apos;.split(&quot; &quot;)</span><br><span class="line">inputWords=inputWords[-1::-1] # 三个参数分别为：最后一个元素；移动到列表末尾；逆向</span><br><span class="line">&apos; &apos;.join(inputWords) # runoob like I</span><br><span class="line"></span><br><span class="line"># [&apos;Google&apos;, &apos;Runoob&apos;, 2001, 2000]</span><br><span class="line">list1[2] = 2001</span><br><span class="line"></span><br><span class="line"># [&apos;Google&apos;, &apos;Runoob&apos;, 2000]</span><br><span class="line">del list1[2]</span><br><span class="line"></span><br><span class="line"># 3</span><br><span class="line">len(list1)</span><br><span class="line"></span><br><span class="line"># [1, 2, 3, 4, 5, 6]</span><br><span class="line">[1, 2, 3] + [4, 5, 6]</span><br><span class="line"></span><br><span class="line"># [&apos;Hi!&apos;, &apos;Hi!&apos;, &apos;Hi!&apos;, &apos;Hi!&apos;]</span><br><span class="line">[&apos;Hi!&apos;] * 4</span><br><span class="line"></span><br><span class="line"># True</span><br><span class="line">3 in [1, 2, 3]</span><br><span class="line"></span><br><span class="line"># 1 2 3</span><br><span class="line">for x in [1, 2, 3]: print(x, end=&quot; &quot;)</span><br><span class="line"></span><br><span class="line"># 14</span><br><span class="line">max(list2)</span><br><span class="line"></span><br><span class="line"># 3</span><br><span class="line">min(list2)</span><br><span class="line"></span><br><span class="line"># 将元组转换为列表</span><br><span class="line">list(seq)</span><br><span class="line"></span><br><span class="line"># 在列表末尾添加新的对象 [12, 3, 14, 13]</span><br><span class="line">list2.append(13)</span><br><span class="line"></span><br><span class="line"># 统计某个元素在列表中出现的次数 1</span><br><span class="line">list2.count(3)</span><br><span class="line"></span><br><span class="line"># 在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表），可以是列表、元组、集合、字典</span><br><span class="line">list.extend(seq)</span><br><span class="line"></span><br><span class="line"># 从列表中找出某个值第一个匹配项的索引位置</span><br><span class="line">list.index(obj)</span><br><span class="line"></span><br><span class="line"># 将对象插入列表</span><br><span class="line">list.insert(index, obj)</span><br><span class="line"></span><br><span class="line"># 移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</span><br><span class="line">list.pop([index=-1])</span><br><span class="line"></span><br><span class="line"># 移除列表中某个值的第一个匹配项</span><br><span class="line">list.remove(obj)</span><br><span class="line"></span><br><span class="line"># 反向列表中元素</span><br><span class="line">list.reverse()</span><br><span class="line"></span><br><span class="line"># 对原列表进行排序，key 指定可迭代对象中的一个元素来进行排序</span><br><span class="line">list.sort( key=None, reverse=False)</span><br><span class="line"># 降序 [&apos;u&apos;, &apos;o&apos;, &apos;i&apos;, &apos;e&apos;, &apos;a&apos;]</span><br><span class="line">vowels = [&apos;e&apos;, &apos;a&apos;, &apos;u&apos;, &apos;o&apos;, &apos;i&apos;]</span><br><span class="line">vowels.sort(reverse=True)</span><br><span class="line"># 指定列表中的元素排序 [(4, 1), (2, 2), (1, 3), (3, 4)]</span><br><span class="line">def takeSecond(elem):</span><br><span class="line">    return elem[1]</span><br><span class="line">random = [(2, 2), (3, 4), (4, 1), (1, 3)]</span><br><span class="line">random.sort(key=takeSecond)</span><br><span class="line"></span><br><span class="line"># 清空列表</span><br><span class="line">list.clear()</span><br><span class="line"></span><br><span class="line"># 复制列表，浅拷贝</span><br><span class="line">list.copy()</span><br><span class="line"></span><br><span class="line"># 推导式，语法：[被追加的数据 循环语句 循环或判断]</span><br><span class="line">[i * 10 for i in range(10, 20)] # [100, 110, 120, 130, 140, 150, 160, 170, 180, 190]</span><br><span class="line">[i * 10 for i in range(10, 20) if i % 2 == 0] # [100, 120, 140, 160, 180]</span><br><span class="line"></span><br><span class="line"># 索引位置和对应值可以使用 enumerate() 函数同时得到</span><br><span class="line">for i, v in enumerate([&apos;tic&apos;, &apos;tac&apos;, &apos;toe&apos;]):</span><br><span class="line">    print(i, v)</span><br><span class="line"></span><br><span class="line"># 同时遍历两个或更多的序列，可以使用 zip() 组合</span><br><span class="line">questions = [&apos;name&apos;, &apos;quest&apos;, &apos;favorite color&apos;]</span><br><span class="line">answers = [&apos;lancelot&apos;, &apos;the holy grail&apos;, &apos;blue&apos;]</span><br><span class="line">for q, a in zip(questions, answers):</span><br><span class="line">    print(&apos;What is your &#123;0&#125;?  It is &#123;1&#125;.&apos;.format(q, a))</span><br><span class="line"></span><br><span class="line"># 反向遍历一个序列，首先指定这个序列，然后调用 reversed() 函数</span><br><span class="line">for i in reversed(range(1, 10, 2)):</span><br><span class="line">    print(i) # 9 7 5 3 1</span><br><span class="line"></span><br><span class="line"># 按顺序遍历一个序列，使用 sorted() 函数返回一个已排序的序列，并不修改原值</span><br><span class="line">basket = [&apos;apple&apos;, &apos;orange&apos;, &apos;apple&apos;, &apos;pear&apos;, &apos;orange&apos;, &apos;banana&apos;]</span><br><span class="line">for f in sorted(set(basket)):</span><br><span class="line">    print(f) # apple banana orange pear</span><br></pre></td></tr></table></figure><h3 id="五、字典-Dict"><a href="#五、字典-Dict" class="headerlink" title="五、字典 Dict"></a>五、字典 Dict</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"># 创建 键必须是不可变的，如字符串，数字或元组；不允许同一个键出现两次，创建时如果同一个键被赋值两次，后一个值会被记住</span><br><span class="line">dict1 = &#123;&apos;Name&apos;: &apos;Runoob&apos;, &apos;Age&apos;: 7, &apos;Class&apos;: &apos;First&apos;&#125;</span><br><span class="line">dict2 = &#123;&apos;Alice&apos;: &apos;2341&apos;, &apos;Beth&apos;: &apos;9102&apos;, &apos;Cecil&apos;: 3258, , 98.6: 37&#125;</span><br><span class="line"># &#123;&apos;name&apos;: &apos;ben&apos;, &apos;age&apos;: 12&#125;</span><br><span class="line">dict2(name=&apos;ben&apos;, age=12)</span><br><span class="line"># &#123;&apos;name&apos;: 10, &apos;age&apos;: 10, &apos;sex&apos;: 10&#125;</span><br><span class="line">dict4 = dict.fromkeys((&apos;name&apos;, &apos;age&apos;, &apos;sex&apos;), 10)</span><br><span class="line"></span><br><span class="line"># 修改字典 &#123;&apos;Alice&apos;: &apos;2341&apos;, &apos;Beth&apos;: &apos;9102&apos;, &apos;Cecil&apos;: 8, 98.6: 37&#125;</span><br><span class="line">dict2[&apos;Cecil&apos;] = 8</span><br><span class="line">dict2[98.6] = 8</span><br><span class="line"></span><br><span class="line"># 删除 &#123;&apos;Age&apos;: 7, &apos;Class&apos;: &apos;First&apos;&#125;</span><br><span class="line">del dict1[&apos;Name&apos;]</span><br><span class="line"># &#123;&#125;</span><br><span class="line">dict1.clear()</span><br><span class="line"></span><br><span class="line"># 计算字典元素个数，即键的总数</span><br><span class="line">len(dict2)</span><br><span class="line"></span><br><span class="line"># 输出字典，以可打印的字符串表示</span><br><span class="line">str(dict2)</span><br><span class="line"></span><br><span class="line"># 返回输入的变量类型，如果变量是字典就返回字典类型</span><br><span class="line">type(dict2)</span><br><span class="line"></span><br><span class="line"># 返回一个字典的浅复制</span><br><span class="line">radiansdict.copy()</span><br><span class="line"></span><br><span class="line"># 创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</span><br><span class="line">radiansdict.fromkeys()</span><br><span class="line">seq = (&apos;name&apos;, &apos;age&apos;, &apos;sex&apos;)</span><br><span class="line"># &#123;&apos;age&apos;: 10, &apos;name&apos;: 10, &apos;sex&apos;: 10&#125;, 第二个参数可选，默认为 None</span><br><span class="line">dict3 = dict.fromkeys(seq, 10)</span><br><span class="line"></span><br><span class="line"># 返回指定键的值，如果值不在字典中返回 default 值</span><br><span class="line">radiansdict.get(key, default=None)</span><br><span class="line"></span><br><span class="line"># 如果键在字典 dict 里返回 true，否则返回 false</span><br><span class="line">key in dict</span><br><span class="line"></span><br><span class="line"># 以列表返回可遍历的(键, 值) 元组数组</span><br><span class="line">radiansdict.items()</span><br><span class="line"># dict_items([(&apos;Name&apos;, &apos;Runoob&apos;), (&apos;Age&apos;, 7)])</span><br><span class="line">&#123;&apos;Name&apos;: &apos;Runoob&apos;, &apos;Age&apos;: 7&#125;.items()</span><br><span class="line"></span><br><span class="line"># 返回一个迭代器，可以使用 list() 来转换为列表</span><br><span class="line">radiansdict.keys()</span><br><span class="line"></span><br><span class="line"># 返回一个迭代器，可以使用 list() 来转换为列表</span><br><span class="line">radiansdict.values()</span><br><span class="line"></span><br><span class="line"># 和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default，并返回 default</span><br><span class="line">radiansdict.setdefault(key, default=None)</span><br><span class="line"></span><br><span class="line"># 返回并删除字典中的最后一对键和值，如果字典已经为空，则报 KeyError 异常</span><br><span class="line">popitem()</span><br><span class="line"></span><br><span class="line"># 删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。否则，返回default值。</span><br><span class="line">pop(key[,default])</span><br><span class="line"></span><br><span class="line"># 把字典dict2的键/值对更新到dict里</span><br><span class="line">radiansdict.update(dict2)</span><br><span class="line"></span><br><span class="line"># 生成散列值，多次运行时，每次结果不同</span><br><span class="line">hash(&apos;ben&apos;) # 2712347711650408443</span><br><span class="line">hash(&apos;ben&apos;) == hash(&apos;ben&apos;) # True，每次生成的结果都相同</span><br><span class="line">hash(8838183) # 8838183，数字相同</span><br><span class="line"></span><br><span class="line"># 字典生成式，语法：&#123;key: value 循环语句 循环或判断&#125;</span><br><span class="line">&#123;i: i * 10 for i in range(10, 20)&#125; # &#123;10: 100, 11: 110, 12: 120, 13: 130, 14: 140, 15: 150, 16: 160, 17: 170, 18: 180, 19: 190&#125;</span><br><span class="line"></span><br><span class="line"># 直接从键值对序列中构建字典</span><br><span class="line">dict([(&apos;Runoob&apos;, 1), (&apos;Google&apos;, 2), (&apos;Taobao&apos;, 3)]) # &#123;&apos;Taobao&apos;: 3, &apos;Runoob&apos;: 1, &apos;Google&apos;: 2&#125;</span><br><span class="line"></span><br><span class="line"># 使用关键字参数指定键值对</span><br><span class="line">dict(Runoob=1, Google=2, Taobao=3) # &#123;&apos;Runoob&apos;: 1, &apos;Google&apos;: 2, &apos;Taobao&apos;: 3&#125;</span><br></pre></td></tr></table></figure><h3 id="六、元组-Tuple"><a href="#六、元组-Tuple" class="headerlink" title="六、元组 Tuple"></a>六、元组 Tuple</h3><ul><li>元组与列表类似，不同之处在于元组的元素不能修改；</li><li>元组使用小括号，列表使用方括号；</li><li>元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"># 创建</span><br><span class="line">tup1 = (&apos;Google&apos;, &apos;Runoob&apos;, 1997, 2000)</span><br><span class="line">tup2 = () # 空元组</span><br><span class="line">tup3 = &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;   # 不需要括号也可以</span><br><span class="line"></span><br><span class="line"># 访问</span><br><span class="line">tup1[1:3] # (&apos;Runoob&apos;, 1997)</span><br><span class="line">tup1[-2] # 1997</span><br><span class="line">tup1[1:] # (&apos;Runoob&apos;, 1997, 2000)</span><br><span class="line"></span><br><span class="line"># (&apos;Google&apos;, &apos;Runoob&apos;, 1997, 2000, &apos;a&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;) 修改元组（元组中的元素值是不允许修改的，但我们可以对元组进行连接组合）</span><br><span class="line">tup1 + tup3</span><br><span class="line"></span><br><span class="line"># 删除元组（元组被删除后，输出变量会有异常信息）</span><br><span class="line">tup4 = (&apos;Google&apos;, &apos;Runoob&apos;, 1997, 2000)</span><br><span class="line">del tup4</span><br><span class="line"></span><br><span class="line"># 元组运算符</span><br><span class="line">(1, 2, 3) + (4, 5, 6) # (1, 2, 3, 4, 5, 6)，连接</span><br><span class="line">(&apos;Hi!&apos;,) * 4 # (&apos;Hi!&apos;, &apos;Hi!&apos;, &apos;Hi!&apos;, &apos;Hi!&apos;)，复制</span><br><span class="line">3 in (1, 2, 3) # True，元素是否存在</span><br><span class="line">for x in (1, 2, 3): print (x,) # 1 2 3，迭代</span><br><span class="line"></span><br><span class="line"># 内置函数</span><br><span class="line">len(tuple) # 计算元素个数</span><br><span class="line">max(tuple) # 返回元组中元素最大值</span><br><span class="line">min(tuple) # 返回元组中元素最小值</span><br><span class="line">tuple(iterable) # 将可迭代系列转换为元组</span><br><span class="line"></span><br><span class="line"># 不可变，指向的内存中的内容不可变</span><br><span class="line">tup5 = (&apos;r&apos;, &apos;u&apos;, &apos;n&apos;, &apos;o&apos;, &apos;o&apos;, &apos;b&apos;)</span><br><span class="line">id(tup5) # 4461192104</span><br><span class="line">tup5 = (1, 2, 3)</span><br><span class="line">id(tup5) # 4461390080</span><br><span class="line"></span><br><span class="line"># 如果元组内持有列表，那么列表的内容是允许被修改的</span><br><span class="line">tup6 = ([1, 2, 3], [6, 8, 10])</span><br><span class="line">item = tup6[0]</span><br><span class="line">item[1] = 12</span><br><span class="line">tup6 # ([1, 12, 3], [6, 8, 10])</span><br><span class="line"></span><br><span class="line"># 如果元组只有一个元素时，必须后加 ,</span><br><span class="line">(10) * 5 # 50</span><br><span class="line">(10,) * 5 # (10, 10, 10, 10, 10)</span><br><span class="line"></span><br><span class="line"># 序列类型相互转换（序列包含常用的数据结构：字符串 str、列表 list、元组 tuple、数字序列 Range）</span><br><span class="line">- list() 转换为列表</span><br><span class="line">- tuple() 转换为元组</span><br><span class="line">- str() 用于将单个数据转为字符串</span><br><span class="line">- join() 对列表进行拼接，要求列表中所有元素都是字符串</span><br></pre></td></tr></table></figure><h3 id="七、集合-Set"><a href="#七、集合-Set" class="headerlink" title="七、集合 Set"></a>七、集合 Set</h3><p>集合（set）是一个无序的不重复元素序列，可以使用大括号 { } 或者 set() 函数创建集合，注意：创建一个空集合必须用 set() 而不是 { }，因为 { } 是用来创建一个空字典。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"># 创建，参数可以是字典、列表、元素、字符串、集合</span><br><span class="line">set([&apos;a&apos;, &apos;b&apos;]) # 从列表中转变</span><br><span class="line">set(&apos;dajksd&apos;) # 从字符串中转变</span><br><span class="line"></span><br><span class="line"># 去重</span><br><span class="line">basket = &#123;&apos;apple&apos;, &apos;orange&apos;, &apos;apple&apos;, &apos;pear&apos;, &apos;orange&apos;, &apos;banana&apos;&#125; # &#123;&apos;orange&apos;, &apos;banana&apos;, &apos;pear&apos;, &apos;apple&apos;&#125;</span><br><span class="line"></span><br><span class="line"># 快速判断元素是否在集合内</span><br><span class="line">&apos;orange&apos; in basket # false</span><br><span class="line"></span><br><span class="line"># 添加元素</span><br><span class="line">basket.add(&apos;xxx&apos;) # 将 xxx 添加到集合中</span><br><span class="line">basket.update(x) # 参数可以是列表，元组，字典</span><br><span class="line">thisset = set((&quot;Google&quot;, &quot;Runoob&quot;, &quot;Taobao&quot;))</span><br><span class="line">thisset.update(&#123;1,3&#125;) # &#123;1, 3, &apos;Google&apos;, &apos;Taobao&apos;, &apos;Runoob&apos;&#125;</span><br><span class="line">thisset.update([1,4],[5,6], &#123;&apos;a&apos;: &apos;c&apos;&#125;, (&apos;e&apos;, &apos;f&apos;)) # &#123;1, 3, 4, 5, 6, &apos;a&apos;, &apos;e&apos;, &apos;f&apos;, &apos;Google&apos;, &apos;Taobao&apos;, &apos;Runoob&apos;&#125;</span><br><span class="line"></span><br><span class="line"># 移除元素</span><br><span class="line">s.remove(x) # 不存在会发生错误</span><br><span class="line">s.discard(x) # 元素不存在，不会发生错误</span><br><span class="line">s.pop() # 随机删除集合中的一个元素</span><br><span class="line"></span><br><span class="line"># 计算集合元素个数</span><br><span class="line">len(s)</span><br><span class="line"></span><br><span class="line"># 清空集合</span><br><span class="line">s.clear()</span><br><span class="line"></span><br><span class="line"># 集合间的运算</span><br><span class="line">a = set(&apos;abracadabra&apos;) # &#123;&apos;a&apos;, &apos;r&apos;, &apos;b&apos;, &apos;c&apos;, &apos;d&apos;&#125;</span><br><span class="line">b = set(&apos;alacazam&apos;) # &#123;&apos;m&apos;, &apos;z&apos;, &apos;a&apos;, &apos;l&apos;, &apos;c&apos;&#125;</span><br><span class="line"># 集合a中包含而集合b中不包含的元素</span><br><span class="line">a - b # &#123;&apos;r&apos;, &apos;d&apos;, &apos;b&apos;&#125;</span><br><span class="line"># 集合a或b中包含的所有元素</span><br><span class="line">a | b # &#123;&apos;a&apos;, &apos;c&apos;, &apos;r&apos;, &apos;d&apos;, &apos;b&apos;, &apos;m&apos;, &apos;z&apos;, &apos;l&apos;&#125;</span><br><span class="line"># 集合a和b中都包含了的元素</span><br><span class="line">a &amp; b # &#123;&apos;a&apos;, &apos;c&apos;&#125;</span><br><span class="line"># 不同时包含于a和b的元素</span><br><span class="line">a ^ b # &#123;&apos;r&apos;, &apos;d&apos;, &apos;b&apos;, &apos;m&apos;, &apos;z&apos;, &apos;l&apos;&#125;</span><br><span class="line"># 判断两个集合的元素是否完全相同</span><br><span class="line">a = b</span><br><span class="line"></span><br><span class="line"># 常用方法</span><br><span class="line">- copy() 拷贝一个集合</span><br><span class="line">- isdisjoint() 判断两个集合是否包含相同的元素，如果没有返回 True，否则返回 False</span><br><span class="line">- issubset() 判断指定集合是否为该方法参数集合的子集</span><br><span class="line">- issuperset() 判断该方法的参数集合是否为指定集合的子集</span><br><span class="line">- difference() 返回多个集合的差集</span><br><span class="line">- difference_update() 移除集合中的元素，该元素在指定的集合也存在，更新原有集合</span><br><span class="line">- intersection() 返回集合的交集</span><br><span class="line">- intersection_update() 返回集合的交集，更新原有集合</span><br><span class="line">- symmetric_difference 返回两个集合中不重复的元素集合</span><br><span class="line">- symmetric_difference_update() 移除当前集合中在另外一个指定集合相同的元素，并将另外一个指定集合中不同的元素插入到当前集合中</span><br><span class="line">- union() 返回两个集合的并集</span><br><span class="line"></span><br><span class="line"># 集合生成式，语法：&#123;被追加的数据 循环语句 循环或判断&#125;</span><br><span class="line">&#123;i * 10 for i in range(10, 20) if i % 2 == 0&#125; # &#123;160, 100, 140, 180, 120&#125;</span><br></pre></td></tr></table></figure><h3 id="八、类型转换"><a href="#八、类型转换" class="headerlink" title="八、类型转换"></a>八、类型转换</h3><ul><li>字符串转数字：int(字符串) float(字符串) complex(x, y)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 报错</span><br><span class="line">int(&apos;101.5&apos;)</span><br><span class="line"></span><br><span class="line"># 101</span><br><span class="line">int(float(&apos;101.5&apos;))</span><br><span class="line"></span><br><span class="line"># complex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。</span><br></pre></td></tr></table></figure><ul><li>数字转字符串：str(数字)</li><li>数字与布尔：数字 0 代表 False，非 0 代表 True</li><li>常用方法<ul><li>int(x [,base]) 将 x 转换为一个整数</li><li>float(x) 将 x 转换到一个浮点数</li><li>complex(real [,imag]) 创建一个复数</li><li>str(x) 将对象 x 转换为字符串</li><li>tuple(s) 将序列 s 转换为一个元组</li><li>list(s) 将序列 s 转换为一个列表</li><li>set(s) 转换为可变集合</li><li>dict(d) 创建一个字典。d 必须是一个 (key, value)元组序列</li><li>frozenset(s) 转换为不可变集合</li><li>hex(x) 将一个整数转换为一个十六进制字符串</li><li>oct(x) 将一个整数转换为一个八进制字符串</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;python 数据类型&lt;/p&gt;
&lt;h3 id=&quot;一、基本数据类型&quot;&gt;&lt;a href=&quot;#一、基本数据类型&quot; class=&quot;headerlink&quot; title=&quot;一、基本数据类型&quot;&gt;&lt;/a&gt;一、基本数据类型&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Python 中的变量不需要声明。每个变量
      
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>python 基础</title>
    <link href="http://blog.master-ss.cn/note/python/base/"/>
    <id>http://blog.master-ss.cn/note/python/base/</id>
    <published>2020-03-10T00:42:17.341Z</published>
    <updated>2020-03-10T01:16:00.760Z</updated>
    
    <content type="html"><![CDATA[<p>python 基础知识</p><a id="more"></a><h3 id="一、环境安装"><a href="#一、环境安装" class="headerlink" title="一、环境安装"></a>一、环境安装</h3><ul><li>brew install python3</li><li>设置别名（~/.bash_profile）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alias python=&quot;/usr/local/Cellar/python/3.7.0/bin/python3.7&quot;</span><br><span class="line">alias pip=&quot;/usr/local/Cellar/python/3.7.0/bin/pip3.7&quot;</span><br></pre></td></tr></table></figure><ul><li>安装 vscode python 插件</li><li>指定 vscode 环境变量 python.pythonPath</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 输入 interpreter，查看解释器路径 --&gt;</span><br><span class="line">commond + shift + p</span><br><span class="line">&lt;!-- 设置环境变量值 --&gt;</span><br><span class="line">/usr/local/bin/python3</span><br></pre></td></tr></table></figure><ul><li>安装设置 virtualenv</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 安装 --&gt;</span><br><span class="line">pip3 install virtualenv</span><br><span class="line">&lt;!-- 设置 --&gt;</span><br><span class="line">cd ~</span><br><span class="line">virtualenv .pyenv</span><br><span class="line">&lt;!-- 设置环境变量 python.venvPath --&gt;</span><br><span class="line">~/.pyenv</span><br></pre></td></tr></table></figure><h3 id="二、基础知识"><a href="#二、基础知识" class="headerlink" title="二、基础知识"></a>二、基础知识</h3><h4 id="2-1、注释"><a href="#2-1、注释" class="headerlink" title="2.1、注释"></a>2.1、注释</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 单行注释 --&gt;</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">&lt;!-- 多行注释 --&gt;</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">&lt;!-- 或 --&gt;</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h4 id="2-2、保留字"><a href="#2-2、保留字" class="headerlink" title="2.2、保留字"></a>2.2、保留字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Python 的标准库提供了一个 keyword 模块，可以输出当前版本的所有关键字 --&gt;</span><br><span class="line">&gt;&gt;&gt; import keyword</span><br><span class="line">&gt;&gt;&gt; keyword.kwlist</span><br><span class="line">&lt;!-- 保留字列表 --&gt;</span><br><span class="line">[&apos;False&apos;, &apos;None&apos;, &apos;True&apos;, &apos;and&apos;, &apos;as&apos;, &apos;assert&apos;, &apos;async&apos;, &apos;await&apos;, &apos;break&apos;, &apos;class&apos;,</span><br><span class="line"> &apos;continue&apos;, &apos;def&apos;, &apos;del&apos;, &apos;elif&apos;, &apos;else&apos;, &apos;except&apos;, &apos;finally&apos;, &apos;for&apos;, &apos;from&apos;,</span><br><span class="line"> &apos;global&apos;, &apos;if&apos;, &apos;import&apos;, &apos;in&apos;, &apos;is&apos;, &apos;lambda&apos;, &apos;nonlocal&apos;, &apos;not&apos;, &apos;or&apos;, &apos;pass&apos;,</span><br><span class="line"> &apos;raise&apos;, &apos;return&apos;, &apos;try&apos;, &apos;while&apos;, &apos;with&apos;, &apos;yield&apos;]</span><br></pre></td></tr></table></figure><h4 id="2-3、行与缩进"><a href="#2-3、行与缩进" class="headerlink" title="2.3、行与缩进"></a>2.3、行与缩进</h4><p>缩进的空格数是可变的，但是同一个代码块的语句必须包含相同的缩进空格数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">if True:</span><br><span class="line">    print (&quot;Answer&quot;)</span><br><span class="line">    print (&quot;True&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;Answer&quot;)</span><br><span class="line">  print (&quot;False&quot;)    # 缩进不一致，会导致运行错误</span><br></pre></td></tr></table></figure><h4 id="2-4、语句、输出、输入、del、换行"><a href="#2-4、语句、输出、输入、del、换行" class="headerlink" title="2.4、语句、输出、输入、del、换行"></a>2.4、语句、输出、输入、del、换行</h4><ul><li>如果语句很长，我们可以使用反斜杠(\)来实现多行语句</li><li>print 默认输出是换行的，如果要实现不换行需要在变量末尾加上 end=’’</li><li>input 用户等待用户输入</li><li>del 用于删除单个或多个对象的引用</li><li>可以在同一行中使用多条语句，语句之间使用分号(;)分割</li><li>制表符，增加字符缩进 \t</li><li>换行符，换行输出 \n</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 多条语句同行显示 --&gt;</span><br><span class="line">import sys; x = &apos;runoob&apos;; sys.stdout.write(x + &apos;\n&apos;)</span><br><span class="line">&lt;!-- input 输入 --&gt;</span><br><span class="line">input(&quot;\n\n按下 enter 键后退出。&quot;)</span><br></pre></td></tr></table></figure><h4 id="2-5、基本运算符"><a href="#2-5、基本运算符" class="headerlink" title="2.5、基本运算符"></a>2.5、基本运算符</h4><ul><li>算术运算符<ul><li>+</li><li>-</li><li>*</li><li>/ 浮点数除法，比如 10 / 2 = 5.0</li><li>// 除法取整，向下取接近除数的整数，比如 9 // 2 = 4，-9 // 2 = -5，7 // 2.0 = 3.0</li><li>** N 次方，也可以用 pow() 方法</li><li>% 取模</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 计算公式：r = a - n * (a // n) --&gt;</span><br><span class="line">print(-123 % 10) # 7</span><br><span class="line">print(123 % -10) # -7</span><br><span class="line">print(-123 % -10) # -3</span><br></pre></td></tr></table></figure><ul><li><p>比较运算符</p><ul><li>比较运算符返回 1 表示真，返回 0 表示假，与特殊的变量 True 和 False 等价，注意变量名的大写</li><li>==</li><li>!=</li><li>></li><li>&lt;</li><li>>=</li><li>&lt;=</li></ul></li><li><p>赋值运算符</p><ul><li>=</li><li>+=</li><li>-=</li><li>*=</li><li>/=</li><li>%=</li><li>**=</li><li>//=</li></ul></li><li><p>位运算符</p><ul><li>&amp; 与</li><li>| 或</li><li>^ 异或</li><li>~ 取反</li><li>&lt;&lt; 左移动</li><li>>&gt; 右移动</li></ul></li><li><p>逻辑运算符</p><ul><li>假设变量 a 为 10, b 为 20:</li><li>and (a and b) 返回 20</li><li>or (a or b) 返回 10</li><li>not not(a and b) 返回 False</li></ul></li><li><p>成员运算符</p><ul><li>比如：’a’ in ‘abc’，1 in [1, 2, 3]</li><li>in</li><li>not in</li></ul></li><li><p>身份运算符</p><ul><li>id() 函数用于获取对象内存地址，比如：a = 20; b = 20; print(a is b);</li><li>is 判断两个标识符是不是引用自一个对象，类似 id(x) == id(y)</li><li>is not 判断两个标识符是不是引用自不同对象，类似 id(a) != id(b)</li></ul></li><li><p>运算符优先级</p><ul><li>以下列出了从最高到最低优先级的所有运算符：</li><li>** 指数 (最高优先级)</li><li>~ + - 按位翻转, 一元加号和减号 (最后两个的方法名为 +@ 和 -@)</li><li>* / % // 乘，除，求余数和取整除</li><li>+ - 加法减法</li><li>>&gt; &lt;&lt; 右移，左移运算符</li><li>&amp; 位 ‘AND’</li><li>^ | 位运算符</li><li>&lt;= &lt; &gt; &gt;= 比较运算符</li><li>== != 等于运算符</li><li>= %= /= //= -= += *= **= 赋值运算符</li><li>is is not 身份运算符</li><li>in not in 成员运算符</li><li>not and or 逻辑运算符</li></ul></li></ul><h4 id="2-6、流程控制"><a href="#2-6、流程控制" class="headerlink" title="2.6、流程控制"></a>2.6、流程控制</h4><ul><li>条件：if elif else</li><li>循环：<ul><li>while … else …</li><li>for … in … else …</li><li>break：跳出 for 和 while 的循环体，任何对应的循环 else 块将不执行</li><li>continue：跳过当前循环块中的剩余语句，然后继续进行下一轮循环</li></ul></li><li>pass：空语句，不做任何事情，一般用做占位语句，保持程序结构的完整性</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python 基础知识&lt;/p&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>微信公众号开发</title>
    <link href="http://blog.master-ss.cn/project/wx/"/>
    <id>http://blog.master-ss.cn/project/wx/</id>
    <published>2019-11-10T01:40:30.453Z</published>
    <updated>2019-11-10T12:37:18.633Z</updated>
    
    <content type="html"><![CDATA[<p>总结一波微信公众号开发的流程。<br><a id="more"></a> </p><h3 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h3><h4 id="1-1、企业号"><a href="#1-1、企业号" class="headerlink" title="1.1、企业号"></a>1.1、企业号</h4><p>为企业或组织提供移动应用入口，帮助企业建立与员工、上下游供应链及企业应用间的连接（管理全学校所有学院，团委，学生处各个部门上班人员的考勤，活动进程等，目前钉钉是更好的选择）</p><h4 id="1-2、订阅号"><a href="#1-2、订阅号" class="headerlink" title="1.2、订阅号"></a>1.2、订阅号</h4><p>适合于个人、小团队，主要是用于信息传播，帮助管理用户以及用户互动。比如撰写文章，咨询传播，消息定制等等（比如管理一个班级，一个学院的信息订阅，通知和互动）</p><h4 id="1-3、服务号"><a href="#1-3、服务号" class="headerlink" title="1.3、服务号"></a>1.3、服务号</h4><p>企业和组织，提供更强大的业务服务与用户管理能力。比如支付，智能接口（管理全学校的水果商店或者打印店，可以直接支付送货上门，及时推送一些特价水果）</p><h4 id="1-4、认证"><a href="#1-4、认证" class="headerlink" title="1.4、认证"></a>1.4、认证</h4><p>一般是需要你有一个开户过的企业，可以以法人身份折腾下开一个小公司，建议是认证一下</p><h4 id="1-5、订阅号和服务号区别"><a href="#1-5、订阅号和服务号区别" class="headerlink" title="1.5、订阅号和服务号区别"></a>1.5、订阅号和服务号区别</h4><ul><li>出现位置不同；</li><li>单月发送消息数量不同，订阅号可以一天一篇，服务号一个月最多4篇；</li><li>订阅号没有一些接口和功能</li></ul><h3 id="二、公众号开发"><a href="#二、公众号开发" class="headerlink" title="二、公众号开发"></a>二、公众号开发</h3><h4 id="2-1、配置微信公众号后台"><a href="#2-1、配置微信公众号后台" class="headerlink" title="2.1、配置微信公众号后台"></a>2.1、配置微信公众号后台</h4><ul><li>URL 用来接收微信消息和事件；</li><li>Token 任意填写，用作生成签名；</li><li>EncodingAESKey 手动填写或随机生成，用作消息体加解密密钥</li></ul><h4 id="2-2、公众号验证"><a href="#2-2、公众号验证" class="headerlink" title="2.2、公众号验证"></a>2.2、公众号验证</h4><p>在公众号平台上设置服务器配置后，微信会用 GET 请求配置中的服务器地址，含以下参数：</p><ul><li>signature 微信加密签名</li><li>timestamp 时间戳</li><li>nonce 随机数</li><li>echostr 随机字符串</li></ul><p>验证流程如下：</p><ul><li>将token、timestamp、nonce三个参数进行字典序排序</li><li>将三个参数字符串拼接成一个字符串进行sha1加密</li><li>开发者获得加密后的字符串可与signature对比，标识该请求来源于微信，若确认此次GET请求来自微信服务器，则返回echostr参数内容</li><li>服务器配置启用大概需要10分钟的缓存时间，停用大概5分钟的反应时间</li></ul><h4 id="2-3、被动回复消息"><a href="#2-3、被动回复消息" class="headerlink" title="2.3、被动回复消息"></a>2.3、被动回复消息</h4><ul><li>处理POST类型的控制逻辑，接收这个XML的数据包</li><li>解析这个数据包（获得数据包的消息类型或者事件类型）</li><li>拼装好我们定义好的消息</li><li>包装成XML的格式</li><li>在5秒内返回回去</li></ul><h4 id="2-4、access-token"><a href="#2-4、access-token" class="headerlink" title="2.4、access_token"></a>2.4、access_token</h4><ul><li>access_token是公众号的全局唯一接口调用凭据，公众号调用各接口时都需使用access_token。开发者需要进行妥善保存。access_token的存储至少要保留512个字符空间</li><li>access_token的有效期目前为2个小时，需定时刷新，重复获取将导致上次获取的access_token失效</li><li>服务器需要根据有效时间提前去刷新新access_token。在刷新过程后的5分钟内，新老access_token都可用</li><li>建议统一获取和刷新access_token，其他服务器所使用的access_token均来自于该中控服务器，不应该各自去刷新，否则容易造成冲突，导致access_token覆盖而影响业务</li></ul><h4 id="2-5、jssdk"><a href="#2-5、jssdk" class="headerlink" title="2.5、jssdk"></a>2.5、jssdk</h4><ul><li>jsapi_ticket是公众号用于调用微信JS接口的临时票据，有效期为2小时</li><li>jsapi_ticket通过access_token来获取，获取的api调用次数非常有限，须在服务全局缓存</li><li>绑定域名</li><li>引入JS文件</li><li>通过config接口注入权限验证配置</li><li>通过ready接口处理成功验证</li><li>通过error接口处理失败验证</li></ul><h3 id="三、vue-单页调用-JSSDK"><a href="#三、vue-单页调用-JSSDK" class="headerlink" title="三、vue 单页调用 JSSDK"></a>三、vue 单页调用 JSSDK</h3><h4 id="3-1、定义-vuex-缓存"><a href="#3-1、定义-vuex-缓存" class="headerlink" title="3.1、定义 vuex 缓存"></a>3.1、定义 vuex 缓存</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">export default new Vuex.Store(&#123;</span><br><span class="line">  state: &#123;</span><br><span class="line">    wxSignUrl: &apos;&apos;,</span><br><span class="line">  &#125;,</span><br><span class="line">  mutations: &#123;</span><br><span class="line">    // IOS仅记录第一次进入页面时的URL，IOS微信切换路由实际URL不变，只能使用第一进入页面的URL进行签名</span><br><span class="line">    setWechatSignUrl(state, value) &#123;</span><br><span class="line">      if (tools.isIos() &amp;&amp; state.wxSignUrl !== &apos;&apos;) &#123;</span><br><span class="line">        return</span><br><span class="line">      &#125;</span><br><span class="line">      state.wxSignUrl = value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  getters: &#123;</span><br><span class="line">    getWechatSignUrl: state =&gt; state.wxSignUrl</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="3-2、路由守卫内触发更新签名"><a href="#3-2、路由守卫内触发更新签名" class="headerlink" title="3.2、路由守卫内触发更新签名"></a>3.2、路由守卫内触发更新签名</h4><p>在IOS上，无论路由切换到哪个页面，实际真正有效的的签名URL是【第一次进入应用时的URL】。这里保证IOS是使用当前页面URL，Android是使用目标路由完整地址再加上域名<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 获取真实有效微信签名URL</span><br><span class="line">function getWechatSignUrl(to) &#123;</span><br><span class="line">  if (tools.isIos()) &#123;</span><br><span class="line">    return window.location.href</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    return process.env.VUE_APP_DOMAIN + to.fullPath</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">router.beforeEach((to, from, next) =&gt; &#123;</span><br><span class="line">  store.commit(&apos;setWechatSignUrl&apos;, getWechatSignUrl(to))</span><br><span class="line">  next()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h4 id="3-3、定义全局-mixin"><a href="#3-3、定义全局-mixin" class="headerlink" title="3.3、定义全局 mixin"></a>3.3、定义全局 mixin</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      firstIn: true,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.initWechatShareConfig()</span><br><span class="line">  &#125;,</span><br><span class="line">  activated() &#123;</span><br><span class="line">    if (!this.firstIn) &#123;</span><br><span class="line">      this.initWechatShareConfig()</span><br><span class="line">    &#125;</span><br><span class="line">    this.firstIn = false</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    initWechatShareConfig() &#123;</span><br><span class="line">      const u = navigator.userAgent.toLowerCase()</span><br><span class="line">      if (u.match(/MicroMessenger/i) != &apos;micromessenger&apos;) return</span><br><span class="line">      // 获取服务端签名配置信息</span><br><span class="line">      this.$service(&#123;</span><br><span class="line">        host: &apos;coupon&apos;,</span><br><span class="line">        api: &apos;getWxConfig&apos;,</span><br><span class="line">        option: &#123;</span><br><span class="line">          data: &#123;</span><br><span class="line">            url: this.$store.getters[&apos;getWechatSignUrl&apos;]</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;).then(res =&gt; &#123;</span><br><span class="line">        if (res.code === 200) &#123;</span><br><span class="line">          this.$tools.initWx(res.data, this.$route.meta.title, this.$route.fullPath)</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          this.$toast(&#123;</span><br><span class="line">            position: &apos;top&apos;,</span><br><span class="line">            message: res.message || &apos;请求失败&apos;,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;).catch(() =&gt; &#123;</span><br><span class="line">        this.$toast.clear()</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4、定义初始化工具方法"><a href="#3-4、定义初始化工具方法" class="headerlink" title="3.4、定义初始化工具方法"></a>3.4、定义初始化工具方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">initWx: function (wxConfig, title, path) &#123;</span><br><span class="line">  window.wx.config(&#123;</span><br><span class="line">    debug: process.env.NODE_ENV === &apos;production&apos; ? false : true, // 调试模式,</span><br><span class="line">    appId: process.env.VUE_APP_APPID, // 必填，服务号的唯一标识</span><br><span class="line">    timestamp: parseInt(wxConfig.timestamp), // 必填，生成签名的时间戳</span><br><span class="line">    nonceStr: wxConfig.noncestr, // 必填，生成签名的随机串</span><br><span class="line">    signature: wxConfig.signature,// 必填，签名，见附录1</span><br><span class="line">    jsApiList: [&apos;updateAppMessageShareData&apos;, &apos;updateTimelineShareData&apos;] // 必填，需要使用的JS接口列表</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  window.wx.ready(function () &#123;</span><br><span class="line">    // 调用jssdk方法</span><br><span class="line">    ...</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">  window.wx.error(function (err) &#123;</span><br><span class="line">    console.log(&apos;wx error: &apos;, err)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-5、页面继承-mixin"><a href="#3-5、页面继承-mixin" class="headerlink" title="3.5、页面继承 mixin"></a>3.5、页面继承 mixin</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export default &#123;</span><br><span class="line">  mixins: [mixins],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;总结一波微信公众号开发的流程。&lt;br&gt;
    
    </summary>
    
      <category term="project" scheme="http://blog.master-ss.cn/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>jenkins 之构建部署</title>
    <link href="http://blog.master-ss.cn/tools/jenkins/"/>
    <id>http://blog.master-ss.cn/tools/jenkins/</id>
    <published>2019-11-09T01:24:59.565Z</published>
    <updated>2019-11-09T02:26:50.883Z</updated>
    
    <content type="html"><![CDATA[<p>最近刚刚搞定 jenkins 构建部署前端项目，现在总结一波。<br><a id="more"></a> </p><h3 id="一、需求"><a href="#一、需求" class="headerlink" title="一、需求"></a>一、需求</h3><p>自己业余时间搭建的项目让前后端杂糅在一起，然后共同在服务端构建部署。但是由于服务器配置有限，每次构建都会触发监控报警，所以考虑把前端构建工作放在本地 mac 机上，构建成功后再部署到服务器。</p><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><h4 id="2-1、下载-java"><a href="#2-1、下载-java" class="headerlink" title="2.1、下载 java"></a>2.1、下载 java</h4><ul><li>从官网下载并安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install java</span><br></pre></td></tr></table></figure><ul><li>查看版本信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask info java</span><br></pre></td></tr></table></figure><ul><li>检查 java 环境</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><h4 id="2-2、安装-jenkins"><a href="#2-2、安装-jenkins" class="headerlink" title="2.2、安装 jenkins"></a>2.2、安装 jenkins</h4><ul><li>安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install jenkins</span><br></pre></td></tr></table></figure><ul><li>卸载</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew uninstall jenkins</span><br></pre></td></tr></table></figure><ul><li>启用</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jenkins</span><br></pre></td></tr></table></figure><ul><li>登录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080</span><br></pre></td></tr></table></figure><h3 id="三、初始化"><a href="#三、初始化" class="headerlink" title="三、初始化"></a>三、初始化</h3><p>首次设置项目：unlock Jenkins（administrator password）-&gt; Customize Jenkins（install suggested plugins）—&gt; Create First Admin User（用户名、密码、确认密码、全名、电子邮件地址）—&gt; Jenkins is ready</p><h4 id="3-1、安装时查看解锁密码"><a href="#3-1、安装时查看解锁密码" class="headerlink" title="3.1、安装时查看解锁密码"></a>3.1、安装时查看解锁密码</h4><p><img src="/assets/tools/jenkins/install.png"></p><p>由于安装时没有截图，这里使用网上的截图，也可以使用命令行查看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /Users/zhangshaoyu/.jenkins/secrets/installAdminPassword</span><br></pre></td></tr></table></figure></p><h4 id="3-2、解锁"><a href="#3-2、解锁" class="headerlink" title="3.2、解锁"></a>3.2、解锁</h4><p><img src="/assets/tools/jenkins/unlock.png"></p><h4 id="3-3、插件安装"><a href="#3-3、插件安装" class="headerlink" title="3.3、插件安装"></a>3.3、插件安装</h4><p><img src="/assets/tools/jenkins/plugin.png"></p><p><img src="/assets/tools/jenkins/failure.png"></p><p>这里插件安装时可能有部分插件会安装失败，可以进行下一步，到最后再重新安装回来</p><h4 id="3-4、推荐插件"><a href="#3-4、推荐插件" class="headerlink" title="3.4、推荐插件"></a>3.4、推荐插件</h4><p>除了默认推荐插件以外，还有一些比较好的插件：</p><ul><li>Role-based Authorization Strategy 角色管理插件</li><li>Extended Choice Parameter 项目参数选择插件</li><li>Git Parameter 可用于获取 git 项目分支等信息作为参数</li><li>Email Extension Plugin 构建成功后进行邮件推送</li><li>Publish Over SSH 用于推送静态资源包到服务器</li></ul><h3 id="四、构建"><a href="#四、构建" class="headerlink" title="四、构建"></a>四、构建</h3><h4 id="4-1、基本信息"><a href="#4-1、基本信息" class="headerlink" title="4.1、基本信息"></a>4.1、基本信息</h4><p><img src="/assets/tools/jenkins/general.png"></p><h4 id="4-2、源码信息"><a href="#4-2、源码信息" class="headerlink" title="4.2、源码信息"></a>4.2、源码信息</h4><p><img src="/assets/tools/jenkins/source.png"></p><h4 id="4-3、构建脚本"><a href="#4-3、构建脚本" class="headerlink" title="4.3、构建脚本"></a>4.3、构建脚本</h4><p><img src="/assets/tools/jenkins/build.png"></p><h3 id="五、部署"><a href="#五、部署" class="headerlink" title="五、部署"></a>五、部署</h3><h4 id="5-1、全局-ssh-配置"><a href="#5-1、全局-ssh-配置" class="headerlink" title="5.1、全局 ssh 配置"></a>5.1、全局 ssh 配置</h4><p><img src="/assets/tools/jenkins/global.png"></p><h4 id="5-2、部署配置"><a href="#5-2、部署配置" class="headerlink" title="5.2、部署配置"></a>5.2、部署配置</h4><p><img src="/assets/tools/jenkins/deploy.png"></p><h3 id="六、服务器配置"><a href="#六、服务器配置" class="headerlink" title="六、服务器配置"></a>六、服务器配置</h3><h4 id="6-1、nginx-配置"><a href="#6-1、nginx-配置" class="headerlink" title="6.1、nginx 配置"></a>6.1、nginx 配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name admin-coupon.master-ss.cn;</span><br><span class="line">  rewrite ^(.*) https://$host$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 443;</span><br><span class="line">  server_name admin-coupon.master-ss.cn;</span><br><span class="line">  ssl on;</span><br><span class="line">  ssl_certificate /etc/nginx/conf.d/ssl/1_admin-coupon.master-ss.cn_bundle.crt;</span><br><span class="line">  ssl_certificate_key /etc/nginx/conf.d/ssl/2_admin-coupon.master-ss.cn.key;</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Nginx-Proxy true;</span><br><span class="line">   </span><br><span class="line">    root /usr/share/nginx/coupon_admin_dist;</span><br><span class="line">    index index.html;</span><br><span class="line">    try_files $uri /index.html;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近刚刚搞定 jenkins 构建部署前端项目，现在总结一波。&lt;br&gt;
    
    </summary>
    
      <category term="tools" scheme="http://blog.master-ss.cn/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>nginx 简介</title>
    <link href="http://blog.master-ss.cn/note/nginx/index/"/>
    <id>http://blog.master-ss.cn/note/nginx/index/</id>
    <published>2019-11-05T06:50:13.367Z</published>
    <updated>2019-11-05T08:53:50.134Z</updated>
    
    <content type="html"><![CDATA[<p>Nginx 是一个高性能的 HTTP 和反向代理 web 服务器，这次来系统总结下 nginx。<br><a id="more"></a></p><h3 id="一、优点"><a href="#一、优点" class="headerlink" title="一、优点"></a>一、优点</h3><ul><li>支持海量高并发</li><li>内存消耗少</li><li>免费使用可以商业化</li><li>配置文件简单</li></ul><h3 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h3><h4 id="2-1、版本说明"><a href="#2-1、版本说明" class="headerlink" title="2.1、版本说明"></a>2.1、版本说明</h4><ul><li>Mainline version：开发版，主要是给广大 Nginx 爱好者，测试、研究和学习的，但是不建议使用于生产环境</li><li>Stable version：稳定版,也就是我们说的长期更新版本。这种版本一般比较成熟，经过长时间的更新测试，所以这种版本也是主流版本</li><li>Legacy version：历史版本，如果你需要以前的版本，Nginx 也是有提供的</li></ul><h4 id="2-2、安装"><a href="#2-2、安装" class="headerlink" title="2.2、安装"></a>2.2、安装</h4><ul><li>mac</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用 homebrew 快捷安装 --&gt;</span><br><span class="line">brew install nginx</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看软件包信息，可浏览到配置文件信息 --&gt;</span><br><span class="line">brew info nginx</span><br><span class="line"></span><br><span class="line">&lt;!-- 启动 nginx，注意需要加 sudo，不然会出现命令行提示启动成功实际上进程没有执行的情况 --&gt;</span><br><span class="line">sudo brew services start nginx</span><br></pre></td></tr></table></figure><ul><li>centos</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 安装 nginx 安装包 --&gt;</span><br><span class="line">yum install nginx</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看软件包信息 --&gt;</span><br><span class="line">yum info nginx</span><br><span class="line"></span><br><span class="line">&lt;!-- 启动 nginx --&gt;</span><br><span class="line">systemctl start nginx.service</span><br></pre></td></tr></table></figure><h3 id="三、常用命令"><a href="#三、常用命令" class="headerlink" title="三、常用命令"></a>三、常用命令</h3><ul><li><p>nginx -v<br>检测版本</p></li><li><p>rpm -ql nginx<br>查看安装目录，rpm 是 linux 的 rpm 包管理工具，-q 代表询问模式，-l 代表返回列表，这样我们就可以找到 nginx 的所有安装位置了</p></li><li><p>nginx -t<br>测试配置是否有语法错误</p></li><li><p>nginx<br>启动 nginx</p></li><li><p>nginx -s reload<br>重新载入配置文件，不用重启</p></li><li><p>nginx -s stop<br>立即停止服务，无论进程是否在工作，都直接停止进程</p></li><li><p>nginx -s quit<br>从容停止服务，需要进程完成当前工作后再停止</p></li><li><p>ps aux | grep nginx<br>查看服务运行状态</p></li><li><p>systemctl start nginx.service<br>启动 nginx</p></li><li><p>systemctl stop nginx.service<br>systemctl 停止</p></li><li><p>systemctl restart nginx.service<br>重启服务</p></li><li><p>killall nginx<br>直接杀死进程，用于上面方法没有效果时</p></li><li><p>netstat -tlnp<br>查看端口号的占用情况。默认情况下，nginx启动后会监听 80 端口，从而提供 HTTP 访问，如果 80 端口已经被占用则会启动失败</p></li></ul><h3 id="四、配置解读"><a href="#四、配置解读" class="headerlink" title="四、配置解读"></a>四、配置解读</h3><h4 id="4-1、初始配置（-etc-nginx-nginx-conf）"><a href="#4-1、初始配置（-etc-nginx-nginx-conf）" class="headerlink" title="4.1、初始配置（/etc/nginx/nginx.conf）"></a>4.1、初始配置（/etc/nginx/nginx.conf）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#运行用户，默认即是nginx，可以不进行设置</span><br><span class="line">user  nginx;</span><br><span class="line">#Nginx进程，一般设置为和CPU核数一样</span><br><span class="line">worker_processes  1;   </span><br><span class="line">#错误日志存放目录</span><br><span class="line">error_log  /var/log/nginx/error.log warn;</span><br><span class="line">#进程pid存放位置</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024; # 单个后台进程的最大并发数</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    include       /etc/nginx/mime.types;   #文件扩展名与类型映射表</span><br><span class="line">    default_type  application/octet-stream;  #默认文件类型</span><br><span class="line">    #设置日志模式</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;   #nginx访问日志存放位置</span><br><span class="line">    sendfile        on;   #开启高效传输模式</span><br><span class="line">    #tcp_nopush     on;    #减少网络报文段的数量</span><br><span class="line">    keepalive_timeout  65;  #保持连接的时间，也叫超时时间</span><br><span class="line">    #gzip  on;  #开启gzip压缩</span><br><span class="line">    include /etc/nginx/conf.d/*.conf; #包含的子配置项位置和文件</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-2、默认配置（-etc-nginx-conf-d-default-conf）"><a href="#4-2、默认配置（-etc-nginx-conf-d-default-conf）" class="headerlink" title="4.2、默认配置（/etc/nginx/conf.d/default.conf）"></a>4.2、默认配置（/etc/nginx/conf.d/default.conf）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen       80;   #配置监听端口</span><br><span class="line">    server_name  localhost;  //配置域名</span><br><span class="line">    #charset koi8-r;     </span><br><span class="line">    #access_log  /var/log/nginx/host.access.log  main;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /usr/share/nginx/html;     #服务默认启动目录</span><br><span class="line">        index  index.html index.htm;    #默认访问文件</span><br><span class="line">    &#125;</span><br><span class="line">    #error_page  404              /404.html;   # 配置404页面，还可以使用外部地址，如 http://abc.com</span><br><span class="line">    # redirect server error pages to the static page /50x.html</span><br><span class="line">    #</span><br><span class="line">    error_page   500 502 503 504  /50x.html;   #错误状态码的显示页面，配置后需要重启</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    proxy_pass   http://127.0.0.1;</span><br><span class="line">    #&#125;</span><br><span class="line">    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class="line">    #</span><br><span class="line">    #location ~ \.php$ &#123;</span><br><span class="line">    #    root           html;</span><br><span class="line">    #    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    #    fastcgi_index  index.php;</span><br><span class="line">    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class="line">    #    include        fastcgi_params;</span><br><span class="line">    #&#125;</span><br><span class="line">    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class="line">    # concurs with nginx&apos;s one</span><br><span class="line">    #</span><br><span class="line">    #location ~ /\.ht &#123;</span><br><span class="line">    #    deny  all;</span><br><span class="line">    #&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="五、常用功能"><a href="#五、常用功能" class="headerlink" title="五、常用功能"></a>五、常用功能</h3><h4 id="5-1、访问控制"><a href="#5-1、访问控制" class="headerlink" title="5.1、访问控制"></a>5.1、访问控制</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 简单访问控制</span><br><span class="line">location / &#123;</span><br><span class="line">    # allow 是允许访问，在同一个块下的两个权限指令，先出现的设置会覆盖后出现的设置</span><br><span class="line">    allow  45.76.202.231;</span><br><span class="line">    # deny 是禁止访问，如果 123.9.51.42/200 表示 42-200 都被禁止，all 表示禁止所有 IP</span><br><span class="line">    deny   123.9.51.42;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 复杂访问控制权限匹配</span><br><span class="line">location =/img&#123;</span><br><span class="line">    # = 号代表精确匹配，使用了 = 后是根据其后的模式进行精确匹配</span><br><span class="line">    allow all;</span><br><span class="line">&#125;</span><br><span class="line">location =/admin&#123;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 使用正则表达式设置访问权限，以 ~ 开头</span><br><span class="line">location ~\.php$ &#123;</span><br><span class="line">    deny all;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-2、配置虚拟主机"><a href="#5-2、配置虚拟主机" class="headerlink" title="5.2、配置虚拟主机"></a>5.2、配置虚拟主机</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"># 基于端口号：原理就是Nginx监听多个端口，根据不同的端口号，来区分不同的网站</span><br><span class="line"># 可以直接配置在主文件里 etc/nginx/nginx.conf 文件里</span><br><span class="line"># 也可以配置在子配置文件里 etc/nginx/conf.d/default.conf</span><br><span class="line"># 还可以再新建一个文件，只要在 conf.d 文件夹下就可以了</span><br><span class="line">server&#123;</span><br><span class="line">    listen 8001;</span><br><span class="line">    server_name localhost;</span><br><span class="line">    root /usr/share/nginx/html/html8001;</span><br><span class="line">    index index.html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 基于 IP</span><br><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name 112.74.164.244;</span><br><span class="line">    root /usr/share/nginx/html/html8001;</span><br><span class="line">    index index.html;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 基于域名</span><br><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name nginx2.abc.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /usr/share/nginx/html/html8001;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-3、反向代理"><a href="#5-3、反向代理" class="headerlink" title="5.3、反向代理"></a>5.3、反向代理</h4><p>正向代理：把不让访问的服务器的网页请求，代理到一个可以访问该网站的代理服务器上来，一般叫做 proxy 服务器，再转发给客户<br>反向代理：向外部客户端提供了一个统一的代理入口，客户端的请求都要先经过这个 proxy 服务器。使用反向代理客户端用户只能通过外来网来访问代理服务器，并且用户并不知道自己访问的真实服务器是那一台，可以很好的提供安全保护；主要用途是为多个服务器提供负债均衡、缓存等功能<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># proxy_set_header :在将客户端请求发送给后端服务器之前，更改来自客户端的请求头信息</span><br><span class="line"># proxy_connect_timeout:配置Nginx与后端代理服务器尝试建立连接的超时时间</span><br><span class="line"># proxy_read_timeout : 配置Nginx向后端服务器组发出read请求后，等待相应的超时时间</span><br><span class="line"># proxy_send_timeout：配置Nginx向后端服务器组发出write请求后，等待相应的超时时间</span><br><span class="line"># proxy_redirect :用于修改后端服务器返回的响应头中的Location和Refresh</span><br><span class="line">server&#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name nginx2.abc.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://abc.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="5-4、适配-PC-或移动设备"><a href="#5-4、适配-PC-或移动设备" class="headerlink" title="5.4、适配 PC 或移动设备"></a>5.4、适配 PC 或移动设备</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^/gzact/copyright/(.*)$ &#123;  </span><br><span class="line">    proxy_set_header Host   $host;</span><br><span class="line">    proxy_set_header X-Real-IP      $remote_addr;</span><br><span class="line">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    if ($http_user_agent ~* &quot;(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino&quot;) &#123;</span><br><span class="line">        set $mobile_rewrite &quot;wap&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($mobile_rewrite != &quot;wap&quot;) &#123; </span><br><span class="line">        rewrite ^(/gzact/copyright)/(.*)  /gzact/copyright/pc/$2 break; </span><br><span class="line">        proxy_pass http://localhost:9091;</span><br><span class="line">    &#125;</span><br><span class="line">    if ($mobile_rewrite = &quot;wap&quot;) &#123; </span><br><span class="line">        rewrite ^(/gzact/copyright)/(.*)  /gzact/copyright/wap/$2 break;</span><br><span class="line">        proxy_pass http://localhost:9091;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-5、Gzip-压缩配置"><a href="#5-5、Gzip-压缩配置" class="headerlink" title="5.5、Gzip 压缩配置"></a>5.5、Gzip 压缩配置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// gzip: 该指令用于开启或 关闭 gzip 模块</span><br><span class="line">// gzip_buffers: 设置系统获取几个单位的缓存用于存储 gzip 的压缩结果数据流</span><br><span class="line">// gzip_comp_level: gzip 压缩比，压缩级别是 1-9，1 的压缩级别最低，9 的压缩级别最高。压缩级别越高压缩率越大，压缩时间越长</span><br><span class="line">// gzip_disable: 可以通过该指令对一些特定的 User-Agent 不使用压缩功能</span><br><span class="line">// gzip_min_length: 设置允许压缩的页面最小字节数，页面字节数从相应消息头的 Content-length 中进行获取</span><br><span class="line">// gzip_http_version：识别 HTTP 协议版本，其值可以是 1.1. 或 1.0.</span><br><span class="line">// gzip_proxied: 用于设置启用或禁用从代理服务器上收到相应内容 gzip 压缩</span><br><span class="line">// gzip_vary: 用于在响应消息头中添加 Vary：Accept-Encoding，使代理服务器根据请求头中的 Accept-Encoding 识别是否启用 gzip 压缩</span><br><span class="line">// 配置成功后，HTTP 响应头 Content-Encoding 为 gzip 类型，或使用 gzip 在线检测网页查看。</span><br><span class="line">http &#123;</span><br><span class="line">    .....</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_types text/plain application/javascript text/css;</span><br><span class="line">    .....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-6、负载均衡"><a href="#5-6、负载均衡" class="headerlink" title="5.6、负载均衡"></a>5.6、负载均衡</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">upstream webservers &#123;</span><br><span class="line">    server 172.18.144.23:4789 weight=10;</span><br><span class="line">    server 172.18.144.23:5789 weight=10;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 8000;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://myapp1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-7、获取真实-IP"><a href="#5-7、获取真实-IP" class="headerlink" title="5.7、获取真实 IP"></a>5.7、获取真实 IP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name bbs.expressjiaocheng.com;</span><br><span class="line">  #charset koi8-r;</span><br><span class="line">  #access_log /var/log/nginx/host.access.log main;</span><br><span class="line">  location / &#123;</span><br><span class="line">    #设置主机头和客户端真实地址，以便服务器获取客户端真实 IP</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Nginx-Proxy true;</span><br><span class="line">    #禁用缓存</span><br><span class="line">    proxy_buffering off;</span><br><span class="line">    proxy_pass http://bakeaaa;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-8、spa-刷新设置及二级目录"><a href="#5-8、spa-刷新设置及二级目录" class="headerlink" title="5.8、spa 刷新设置及二级目录"></a>5.8、spa 刷新设置及二级目录</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 8000;</span><br><span class="line">  server_name localhost;</span><br><span class="line"> </span><br><span class="line">  location /dianping &#123;</span><br><span class="line">    root /usr/local/var/web;</span><br><span class="line">    index index.html;</span><br><span class="line">    try_files $uri /dianping/index.html;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location /mock &#123;</span><br><span class="line">    root /usr/local/var/web/dianping;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-9、https-设置"><a href="#5-9、https-设置" class="headerlink" title="5.9、https 设置"></a>5.9、https 设置</h4><p>相应 https 配置信息及文件需要去云服务器商去配置获取，具体信息见 <a href="/note/net/https/">网络之 https 协议</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name coupon.master-ss.cn;</span><br><span class="line">  rewrite ^(.*) https://$host$1 permanent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">  listen 443;</span><br><span class="line">  server_name coupon.master-ss.cn;</span><br><span class="line">  ssl on;</span><br><span class="line">  ssl_certificate /etc/nginx/conf.d/ssl/1_coupon.master-ss.cn_bundle.crt;</span><br><span class="line">  ssl_certificate_key /etc/nginx/conf.d/ssl/2_coupon.master-ss.cn.key;</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置</span><br><span class="line">  ssl_prefer_server_ciphers on;</span><br><span class="line">  </span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_set_header X-Nginx-Proxy true;</span><br><span class="line">   </span><br><span class="line">    proxy_pass http://127.0.0.1:3001; </span><br><span class="line">    proxy_redirect off;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="5-10、案例"><a href="#5-10、案例" class="headerlink" title="5.10、案例"></a>5.10、案例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">upstream contentact_proxy &#123;</span><br><span class="line">  server 192.168.31.88:5697 max_fails=3 fail_timeout=5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ ^/gzact/copyright/(.*)$ &#123;  </span><br><span class="line">  if ($http_user_agent ~* &quot;(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino&quot;) &#123;</span><br><span class="line">    set $mobile_rewrite &quot;wap&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  if ($mobile_rewrite != &quot;wap&quot;) &#123; </span><br><span class="line">    rewrite ^(/gzact/copyright)/(.*)  /gzact/copyright/pc/$2 break; </span><br><span class="line">    proxy_pass http://contentact_proxy;</span><br><span class="line">  &#125;</span><br><span class="line">  if ($mobile_rewrite = &quot;wap&quot;) &#123; </span><br><span class="line">    rewrite ^(/gzact/copyright)/(.*)  /gzact/copyright/wap/$2 break; </span><br><span class="line">    proxy_pass http://contentact_proxy;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">location ~ ^/gzact/(.*)\.(gif|jpg|jpeg|png|bmp|swf|ico)$ &#123;</span><br><span class="line">  access_log off;</span><br><span class="line">  proxy_pass http://contentact_proxy;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location ~ ^/gzact/(.*)\.(js|css)$ &#123;</span><br><span class="line">  access_log off;</span><br><span class="line">  proxy_pass http://contentact_proxy;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Nginx 是一个高性能的 HTTP 和反向代理 web 服务器，这次来系统总结下 nginx。&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>redis 简介</title>
    <link href="http://blog.master-ss.cn/note/redis/index/"/>
    <id>http://blog.master-ss.cn/note/redis/index/</id>
    <published>2019-11-04T03:45:41.738Z</published>
    <updated>2019-11-05T06:40:31.033Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 是使用 C 语言开发的一个高性能键值数据库。Redis 可以通过一些键值类型来存储数据，键值类型： String字符类型、Map散列类型、 List列表类型、Set集合类型、Sortedset有序集合类型<br><a id="more"></a></p><h3 id="一、应用场景"><a href="#一、应用场景" class="headerlink" title="一、应用场景"></a>一、应用场景</h3><ul><li>缓存，如数据查询、短连接、新闻内容、商品内容等等</li><li>分布式集群架构中的 session 分离</li><li>任务队列，如秒杀、抢购、12306等等</li><li>数据过期处理（可以精确到毫秒）</li></ul><h3 id="二、使用"><a href="#二、使用" class="headerlink" title="二、使用"></a>二、使用</h3><h4 id="2-1、安装"><a href="#2-1、安装" class="headerlink" title="2.1、安装"></a>2.1、安装</h4><ul><li>mac</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用 homebrew 快捷安装 --&gt;</span><br><span class="line">brew install redis</span><br><span class="line">brew services start/stop redis</span><br></pre></td></tr></table></figure><ul><li>windows<br>windows 中下载安装就不介绍了，下载链接如下：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/MicrosoftArchive/redis/releases</span><br></pre></td></tr></table></figure><ul><li>centos</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 查看软件包信息 --&gt;</span><br><span class="line">yum info redis</span><br><span class="line"></span><br><span class="line">&lt;!-- 安装redis安装包 --&gt;</span><br><span class="line">yum install redis</span><br><span class="line"></span><br><span class="line">&lt;!-- 启动redis --&gt;</span><br><span class="line">systemctl start redis</span><br><span class="line"></span><br><span class="line">&lt;!-- 重启redis --&gt;</span><br><span class="line">systemctl restart redis</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置redis开机启动 --&gt;</span><br><span class="line">systemctl enable redis</span><br></pre></td></tr></table></figure><h4 id="2-2、进入命令行"><a href="#2-2、进入命令行" class="headerlink" title="2.2、进入命令行"></a>2.2、进入命令行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 输入后回车即进入redis客户端 --&gt;</span><br><span class="line">redis-cli</span><br></pre></td></tr></table></figure><h3 id="三、类型"><a href="#三、类型" class="headerlink" title="三、类型"></a>三、类型</h3><h4 id="3-1、字符串"><a href="#3-1、字符串" class="headerlink" title="3.1、字符串"></a>3.1、字符串</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 查看所有的 key --&gt;</span><br><span class="line">keys *</span><br><span class="line"></span><br><span class="line">&lt;!-- 普通设置 --&gt;</span><br><span class="line">set key value</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置并加过期时间，表示 30 秒后过期 --&gt;</span><br><span class="line">set key value EX 30</span><br><span class="line"></span><br><span class="line">&lt;!-- 获取数据 --&gt;</span><br><span class="line">get key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除指定数据 --&gt;</span><br><span class="line">del key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除全部数据 --&gt;</span><br><span class="line">flushall</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看类型 --&gt;</span><br><span class="line">type key</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置过期时间，表示指定的 key 20 秒后过期 --&gt;</span><br><span class="line">expire key 20</span><br></pre></td></tr></table></figure><h4 id="3-2、列表"><a href="#3-2、列表" class="headerlink" title="3.2、列表"></a>3.2、列表</h4><p>Redis 列表是简单的字符串列表，按照插入顺序排序，你可以添加一个元素到列表的头部(左边)或者尾部(右边)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 列表右侧增加值 --&gt;</span><br><span class="line">rpush key value</span><br><span class="line"></span><br><span class="line">&lt;!-- 列表左侧增加值 --&gt;</span><br><span class="line">lpush key value</span><br><span class="line"></span><br><span class="line">&lt;!-- 右侧删除值 --&gt;</span><br><span class="line">rpop key</span><br><span class="line"></span><br><span class="line">&lt;!-- 左侧删除值 --&gt;</span><br><span class="line">lpop key</span><br><span class="line"></span><br><span class="line">&lt;!-- 获取数据，索引可以是负数，如：“-1”代表最后边的一个元素 --&gt;</span><br><span class="line">lrange key start stop</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除指定数据 --&gt;</span><br><span class="line">del key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除全部数据 --&gt;</span><br><span class="line">flushall</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看类型 --&gt;</span><br><span class="line">type key</span><br></pre></td></tr></table></figure></p><h4 id="3-3、集合"><a href="#3-3、集合" class="headerlink" title="3.3、集合"></a>3.3、集合</h4><p>Redis 的 Set 是 String 类型的无序集合。集合成员是唯一的，这就意味着集合中不能出现重复的数据，它和列表的最主要区别就是没法增加重复值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 给集合增数据 --&gt;</span><br><span class="line">sadd key value</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除集合中的一个值 --&gt;</span><br><span class="line">srem key value</span><br><span class="line"></span><br><span class="line">&lt;!-- 获取数据 --&gt;</span><br><span class="line">smembers key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除指定数据 --&gt;</span><br><span class="line">del key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除全部数据 --&gt;</span><br><span class="line">flushall</span><br></pre></td></tr></table></figure></p><h4 id="3-4、哈希"><a href="#3-4、哈希" class="headerlink" title="3.4、哈希"></a>3.4、哈希</h4><p>hash 是一个 string 类型的 field 和 value 的映射表，hash 特别适合用于存储对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 设置值 hmset --&gt;</span><br><span class="line">hmset zhangsan name &quot;张三&quot; age 20 sex &quot;男&quot;</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置值 hset --&gt;</span><br><span class="line">hset zhangsan name &quot;张三&quot;</span><br><span class="line"></span><br><span class="line">&lt;!-- 获取数据 --&gt;</span><br><span class="line">hgetall key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除指定数据 --&gt;</span><br><span class="line">del key</span><br><span class="line"></span><br><span class="line">&lt;!-- 删除全部数据 --&gt;</span><br><span class="line">flushall</span><br></pre></td></tr></table></figure></p><h3 id="四、订阅发布"><a href="#四、订阅发布" class="headerlink" title="四、订阅发布"></a>四、订阅发布</h3><p>Redis 发布订阅（pub/sub）是一种消息通信模式：发送者（pub）发送消息，订阅者（sub）接收消息。 Redis 客户端可以订阅任意数量的频道。<br>下图展示了频道 channel1 ， 以及订阅这个频道的三个客户端 —— client2 、 client5 和 client1 之间的关系：<br><img src="/assets/note/redis/subscribe.png"><br>当有新消息通过 PUBLISH 命令发送给频道 channel1 时， 这个消息就会被发送给订阅它的三个客户端：<br><img src="/assets/note/redis/publish.png"></p><p>代码示例如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 发布 --&gt;</span><br><span class="line">var redis = require(&apos;redis&apos;);</span><br><span class="line">var client = redis.createClient(6379, &apos;localhost&apos;);</span><br><span class="line">client.publish(&apos;testPublish&apos;, &apos;message from publish.js&apos;);</span><br><span class="line"></span><br><span class="line">&lt;!-- 订阅 --&gt;</span><br><span class="line">client.subscribe(&apos;testPublish&apos;);</span><br><span class="line">client.on(&apos;message&apos;, function(channel, msg) &#123;</span><br><span class="line">  console.log(&apos;client.on message, channel:&apos;, channel, &apos; message:&apos;, msg);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><h3 id="五、设置密码"><a href="#五、设置密码" class="headerlink" title="五、设置密码"></a>五、设置密码</h3><h4 id="5-1、临时设置"><a href="#5-1、临时设置" class="headerlink" title="5.1、临时设置"></a>5.1、临时设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 进入命令行 --&gt;</span><br><span class="line">redis-cli</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看当前是否设置密码 --&gt;</span><br><span class="line">config get requirepass</span><br><span class="line">&lt;!-- 返回，第二行为密码 --&gt;</span><br><span class="line">1) &quot;requirepass&quot;</span><br><span class="line">2) &quot;&quot;</span><br><span class="line"></span><br><span class="line">&lt;!-- 设置密码 --&gt;</span><br><span class="line">config set requirepass xxx</span><br></pre></td></tr></table></figure><h4 id="5-2、永久设置"><a href="#5-2、永久设置" class="headerlink" title="5.2、永久设置"></a>5.2、永久设置</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- max 上查看配置文件路径，为 /usr/local/etc/redis.conf --&gt;</span><br><span class="line">brew info redis</span><br><span class="line"></span><br><span class="line">&lt;!-- centos 上查看配置文件路径，为 /etc/redis.conf --&gt;</span><br><span class="line">whereis redis</span><br><span class="line"></span><br><span class="line">&lt;!-- 修改配置文件 --&gt;</span><br><span class="line"># requirepass foobared</span><br><span class="line">requirepass xxx</span><br></pre></td></tr></table></figure><p>保存后重启 redis 即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis 是使用 C 语言开发的一个高性能键值数据库。Redis 可以通过一些键值类型来存储数据，键值类型： String字符类型、Map散列类型、 List列表类型、Set集合类型、Sortedset有序集合类型&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 之软件安装</title>
    <link href="http://blog.master-ss.cn/note/linux/install/"/>
    <id>http://blog.master-ss.cn/note/linux/install/</id>
    <published>2019-11-03T09:03:22.361Z</published>
    <updated>2019-11-04T02:23:48.858Z</updated>
    
    <content type="html"><![CDATA[<p>以 Centos 为标准，这章说软件安装。<br><a id="more"></a></p><h3 id="一、软件管理器"><a href="#一、软件管理器" class="headerlink" title="一、软件管理器"></a>一、软件管理器</h3><ul><li>rpm<br>全名“RedHat Package Manager”，简称 RPM，以数据库记录的方式将所需要的软件安装到 Linux 系统。最大特点是将要安装的软件先编译过，并且打包成 RPM 机制的安装包，通过软件里头默认的数据库记录要安装的时候必须具备的依赖属性软件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">rpm -ivh package_name</span><br><span class="line">-i：install 的意思</span><br><span class="line">-v：查看更详细的安装信息画面</span><br><span class="line">-h：以安装信息栏显示安装进度</span><br><span class="line"></span><br><span class="line">&lt;!--安装 rp-pppoe-3.5-32.1.i386.rpm--&gt;</span><br><span class="line">rpm -ivh rp-pppoe-3.5-32.1.i386.rpm</span><br><span class="line"></span><br><span class="line">&lt;!--直接由网络上面的某个档案安装，以网址来安装--&gt;</span><br><span class="line">rpm -ivh http://website.name/path/pkgname.rpm</span><br><span class="line"></span><br><span class="line">&lt;!--列出所有的，已经安装在本机 Linux 系统上面的所有软件名称--&gt;</span><br><span class="line">rpm -qa</span><br><span class="line"></span><br><span class="line">&lt;!--仅查询，后面接的软件名称是否有安装--&gt;</span><br><span class="line">rpm -q 软件名称</span><br><span class="line"></span><br><span class="line">&lt;!--httpd 表示要卸载的软件包--&gt;</span><br><span class="line">rpm -e httpd</span><br></pre></td></tr></table></figure><ul><li>yum：rpm 属性依赖解决方式<br>依赖属性的软件列表，在有要安装软件需求的时候先到列表去找，同时与系统内已安装的软件相比较，没安装到的依赖软件就一口气同时安装起来，这就是 YUM 机制的由来。<br>想要使用 yum 功能，必须先找到适合的 yum server 才行，而每个 yum server 可能都会提供不同的软件功能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--yum 搜索 rpm 包--&gt;</span><br><span class="line">yum search 名称</span><br><span class="line"></span><br><span class="line">&lt;!--yum 显示 rpm 包信息--&gt;</span><br><span class="line">yum info package1</span><br><span class="line"></span><br><span class="line">&lt;!--yum 查看 rpm 包--&gt;</span><br><span class="line">yum list</span><br><span class="line">yum list | grep httpd</span><br><span class="line">&lt;!--列出所有可更新的软件包--&gt;</span><br><span class="line">yum list updates</span><br><span class="line">&lt;!--列出所有已安装的软件包--&gt;</span><br><span class="line">yum list installed</span><br><span class="line"></span><br><span class="line">&lt;!--yum 卸载 rpm 包--&gt;</span><br><span class="line">yum [-y] remove wget</span><br><span class="line">-y：当 yum 要等用户输入时，自动提供 yes 的响应</span><br><span class="line"></span><br><span class="line">&lt;!--yum 安装 rpm 包--&gt;</span><br><span class="line">yum [-y] install unzip zip</span><br><span class="line"></span><br><span class="line">&lt;!--后面接要升级的软件，若要整个系统都升级，直接 update 即可--&gt;</span><br><span class="line">yum [-y] update [软件名]</span><br></pre></td></tr></table></figure><ul><li>yum 的设置文件</li></ul><p><code>ll /etc/yum.repos.d/</code>返回相关文件信息，然后动态设置部分软件的 yum 的镜像站点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">total 44</span><br><span class="line">-rw-r--r--. 1 root root  614 Oct 25  2018 CentOS-Base.repo</span><br><span class="line">-rw-r--r--  1 root root 1309 Oct  8  2018 CentOS-CR.repo</span><br><span class="line">-rw-r--r--  1 root root  649 Oct  8  2018 CentOS-Debuginfo.repo</span><br><span class="line">-rw-r--r--  1 root root  230 Oct 25  2018 CentOS-Epel.repo</span><br><span class="line">-rw-r--r--  1 root root  314 Oct  8  2018 CentOS-fasttrack.repo</span><br><span class="line">-rw-r--r--  1 root root  630 Oct  8  2018 CentOS-Media.repo</span><br><span class="line">-rw-r--r--  1 root root 1331 Oct  8  2018 CentOS-Sources.repo</span><br><span class="line">-rw-r--r--  1 root root 4768 Oct  8  2018 CentOS-Vault.repo</span><br><span class="line">-rw-r--r--  1 root root  196 Oct 31  2018 mongodb.repo</span><br><span class="line">-rw-r--r--  1 root root   99 Jan  4  2019 nginx.repo</span><br></pre></td></tr></table></figure></p><h3 id="二、源码与-Tarball"><a href="#二、源码与-Tarball" class="headerlink" title="二、源码与 Tarball"></a>二、源码与 Tarball</h3><ul><li><p>make<br>执行时在当前目录下搜索 Makefile 文本文件，这个文件记录了源码如何编译，make 自动判别源码是否经过变动而自动更新执行文件</p></li><li><p>源代码（C语言）如何编译安装</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--先安装源代码编译的软件 gcc，make，openssl--&gt;</span><br><span class="line">yum install -y gcc make gcc-c++ openssl-devel</span><br><span class="line"></span><br><span class="line">&lt;!--检查系统中是否已经安装 gcc--&gt;</span><br><span class="line">rpm -qa | grep gcc / rpm -ql gcc</span><br><span class="line"></span><br><span class="line">&lt;!--1.生成编译配置文件(Makefile)--&gt;</span><br><span class="line">&lt;!--2.开始编译(make)--&gt;</span><br><span class="line">&lt;!--3.开始安装(make install)--&gt;</span><br><span class="line">安装 httpd-2.2.9.tar.gz 源代码:</span><br><span class="line">1) 减压并 cd 到对应目录</span><br><span class="line">2) ./configure --prefix=/usr/local/apache（安装路径设置为/usr/local/apache）</span><br><span class="line">3) make / make -j4</span><br><span class="line">4) make install</span><br></pre></td></tr></table></figure><ul><li>卸载源代码安装的软件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 1、结束进程，pkill 与 killall 差不多 --&gt;</span><br><span class="line">pstree | grep httpd</span><br><span class="line">pkill httpd</span><br><span class="line">&lt;!-- 2、删除源代码 --&gt;</span><br><span class="line">cd /usr/local/</span><br><span class="line">直接删除源代码</span><br><span class="line">rm -rf apache/</span><br></pre></td></tr></table></figure><ul><li>源代码安装 nodejs</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、 下载 nodejs 源码包</span><br><span class="line">2、 减压到 usr/local/nodejs 目录</span><br><span class="line">3、 ./configure</span><br><span class="line">4、 make / make -j4</span><br><span class="line">5、 make install</span><br></pre></td></tr></table></figure><ul><li>源代码安装 Apache</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1.减压 httpd-2.2.9.tar.gz 到对应目录</span><br><span class="line">2、 ./configure 编译</span><br><span class="line">./configure --prefix=/usr/local/apache2/ --sysconfdir=/usr/local/apache2/etc/ --with-included-apr --enable-dav --enable-so --enable-deflate=shared --enable-expires=shared</span><br><span class="line">--enable-rewrite=shared</span><br><span class="line">3、make</span><br><span class="line">4、make install</span><br><span class="line">&lt;!--启动 Apache 测试:--&gt;</span><br><span class="line">/usr/local/apache2/bin/apachectl restart</span><br><span class="line">&lt;!--查看进程:--&gt;</span><br><span class="line">ps -le | grep httpd</span><br></pre></td></tr></table></figure><ul><li>二进制安装配置 nodejs<br>二进制包里面包括了已经经过编译，可以马上运行的程序，所以二进制包的安装只需要丢到一个目录里面</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">wget https://nodejs.org/dist/v8.9.3/node-v8.9.3-linux-x64.tar.xz</span><br><span class="line"></span><br><span class="line">xz -d node-v8.9.3-linux-x64.tar.xz</span><br><span class="line">tar -xvf node-v8.9.3-linux-x64.tar</span><br><span class="line"></span><br><span class="line">mv node-v8.9.3-linux-x64 /usr/local/nodejs</span><br><span class="line"></span><br><span class="line">&lt;!--配置环境变量--&gt;</span><br><span class="line">vi /etc/profile</span><br><span class="line"></span><br><span class="line">&lt;!--最后面添加:--&gt;</span><br><span class="line">export NODE_HOME=/usr/local/nodejs/bin</span><br><span class="line">export PATH=$NODE_HOME:$PATH</span><br><span class="line"></span><br><span class="line">&lt;!--:wq 保存，然后运行--&gt;</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">&lt;!--用 node -v 和 npm -v 来检查下:--&gt;</span><br><span class="line">node -v</span><br><span class="line"></span><br><span class="line">&lt;!--查看环境变量是否生效--&gt;</span><br><span class="line">echo $PATH</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以 Centos 为标准，这章说软件安装。&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 之进程管理</title>
    <link href="http://blog.master-ss.cn/note/linux/process/"/>
    <id>http://blog.master-ss.cn/note/linux/process/</id>
    <published>2019-11-03T08:42:38.285Z</published>
    <updated>2019-11-04T02:16:55.720Z</updated>
    
    <content type="html"><![CDATA[<p>以 Centos 为标准，这章说进程管理。<br><a id="more"></a></p><h3 id="一、基础"><a href="#一、基础" class="headerlink" title="一、基础"></a>一、基础</h3><h4 id="1-1、概念"><a href="#1-1、概念" class="headerlink" title="1.1、概念"></a>1.1、概念</h4><ul><li>程序：通常为二进制程序放置存储媒介中，以物理文件的形式存在</li><li>进程：程序被触发后，执行者的权限与属性、程序的代码与所需数据等都会被加载到内存中，可以说进程就是一个正在进行中的程序</li><li>系统服务：常驻内存的进程，被称为服务</li></ul><h4 id="1-2、命令执行的判断依据"><a href="#1-2、命令执行的判断依据" class="headerlink" title="1.2、命令执行的判断依据"></a>1.2、命令执行的判断依据</h4><ul><li><code>;</code> 不考虑命令相关性的连续命令执行</li><li><code>&amp;&amp;</code> 前面执行正确才继续执行</li><li><code>||</code> 前面执行错误才继续执行</li></ul><h3 id="二、工作管理"><a href="#二、工作管理" class="headerlink" title="二、工作管理"></a>二、工作管理</h3><ul><li>&amp;：直接将命令丢到后台中“执行”</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--由于没有加上数据流重定向，所以会影响界面，不会影响前台的操作--&gt;</span><br><span class="line">tar -zpcf /tmp/etc.tar.gz /etc &amp;</span><br><span class="line"></span><br><span class="line">&lt;!--利用数据流重定向，将输出数据传送至某个文件中，2&gt;&amp;1 表示将错误重定向到标准输出上--&gt;</span><br><span class="line">tar -zpcvf /tmp/etc.tar.gz /etc &gt; /tmp/log.txt 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><ul><li>kill：管理后台当中的工作</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--列出目前kill能够使用的信号--&gt;</span><br><span class="line">kill -l</span><br><span class="line"></span><br><span class="line">kill -signal %jobnumber</span><br><span class="line">-1：重新读取一次参数的配置文件</span><br><span class="line">-9：立刻强制删除一个工作</span><br><span class="line">-15：以正常的程序方式终止一项工作，与 -9 是不一样的</span><br></pre></td></tr></table></figure><ul><li>killAll：删除某个服务，基本同 pkill</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--将系统中以某个命令名称启动的进程全部删除--&gt;</span><br><span class="line">killAll -signal 命令名称</span><br></pre></td></tr></table></figure><ul><li>nohup 脱机管理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--终端机前台中工作--&gt;</span><br><span class="line">nohup [命令与参数]</span><br><span class="line"></span><br><span class="line">&lt;!--终端机后台中工作--&gt;</span><br><span class="line">nohup [命令与参数] &amp;</span><br></pre></td></tr></table></figure><h3 id="三、进程管理"><a href="#三、进程管理" class="headerlink" title="三、进程管理"></a>三、进程管理</h3><ul><li>ps 将某个时间点的进程运行情况选取下来</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--查看系统所有的进程数据，以 PID 顺序排列--&gt;</span><br><span class="line">ps aux</span><br><span class="line">-a：显示现行终端机下的所有程序，包括其他用户的程序</span><br><span class="line">-u：显示所有程序，不以终端机区分</span><br><span class="line">-x：以用户为主的格式显示程序状况，通常与 a 参数一起使用，可列出较完整信息</span><br><span class="line"></span><br><span class="line"> ps -aux | grep nginx</span><br><span class="line"> &lt;!--各字段意义分别为：进程用户账号、进程标识符PID、使用CPU百分比、物理内存百分比、虚拟内存使用量KB、占用固定内存量KB、哪个终端机运行，与终端机无关则显示？、进程目前状态、进程被触发启动时间、使用CPU运行时间、进程实际命令--&gt;</span><br><span class="line"> nginx     2778  0.0  0.4  50208  4196 ?        S    Oct15   0:10 nginx: worker process</span><br></pre></td></tr></table></figure><ul><li>pstree 查看进程树</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--显示所有信息--&gt;</span><br><span class="line">pstree -ap</span><br><span class="line">-a：各进程树之间的连接以 ASCII 字符来连接</span><br><span class="line">-p：列出每个进行的PID</span><br><span class="line"></span><br><span class="line">pstree | grep httpd</span><br><span class="line">pstree -ap | grep httpd</span><br></pre></td></tr></table></figure><ul><li>top 动态查看进程的变化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--相对于 ps 选取一个时间点的进程状态，top 可以持续监测进程运行的状态--&gt;</span><br><span class="line">top [-d 数字] | [-p pid]</span><br><span class="line">-d：后面可以接秒数，就是进程界面更新的秒数，默认是5秒</span><br><span class="line">-p：指定某个PID来进行查看检测</span><br><span class="line"></span><br><span class="line">&lt;!--第一行依次对应:系统当前时间 up 系统到目前为止 i 运行的时间， 当前登陆系统的用户数量， load average 后 面的三个数字分别表示距离现在一分钟，五分钟，十五分钟的负载情况--&gt;</span><br><span class="line">&lt;!--这三个负载即分别表示系统在过去1分钟、5分钟、15分钟内运行进程队列中的平均进程数量--&gt;</span><br><span class="line">top - 14:29:34 up 372 days,  3:54,  1 user,  load average: 0.04, 0.07, 0.06</span><br><span class="line"></span><br><span class="line">&lt;!--第二行依次对应:tasks 表示任务(进程)，78 total 则表示现在有 78 个进程，其中处于运行中 的有 1 个，77 个在休眠(挂起)，stopped 状态即停止的进程数为 0，zombie 状态即僵尸 的进程数为 0 个。--&gt;</span><br><span class="line">Tasks:  78 total,   1 running,  77 sleeping,   0 stopped,   0 zombie</span><br><span class="line"></span><br><span class="line">&lt;!--第三行只看空闲就可以了:cpu 空闲率为 99.0%--&gt;</span><br><span class="line">%Cpu(s):  0.7 us,  0.3 sy,  0.0 ni, 99.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st</span><br><span class="line"></span><br><span class="line">&lt;!--第四行依次对应：总内存:0.969g 空闲:82348/1024/1024=0.0785g，已经使用0.5g，缓存区0.39g--&gt;</span><br><span class="line">&lt;!--缓冲区是从主内存中特地预留出的内存，用来存放特定的一些信息，例如从磁盘中取得的文件表，程序正在读取的内容等等--&gt;</span><br><span class="line">KiB Mem :  1016380 total,    82348 free,   523948 used,   410084 buff/cache</span><br><span class="line"></span><br><span class="line">&lt;!--第七行依次对应：进程 id、进程所有者、进程优先级、nice 值，负值表示高优先级，正值表示低优先级、进程使用的虚拟内存总量，单位 kb，VIRT=SWAP+RES、进程使用的、未被换出的物理内存大小，单位 kb，RES=CODE+DATA、共享内存大小，单位 kb、进程状态，D=不可中断的睡眠状态 R=运行 S=睡眠 T=跟踪/停止 Z=僵尸进程、上次更新到现在的 CPU 时间占用百分比、进程使用的物理内存百分比、进程使用的 CPU 时间总计，单位 1/100 秒、进程名称(命令名/命令行)--&gt;</span><br><span class="line">PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND</span><br></pre></td></tr></table></figure><h3 id="四、查看系统资源"><a href="#四、查看系统资源" class="headerlink" title="四、查看系统资源"></a>四、查看系统资源</h3><ul><li>free 查看内存使用情况</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--显示目前系统的内存总量--&gt;</span><br><span class="line">free [-b|-k|-m|-g]</span><br><span class="line"></span><br><span class="line">free -m</span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            992         509          86           0         396         292</span><br><span class="line">Swap:             0           0           0</span><br><span class="line">total 系统总的可用物理内存大小</span><br><span class="line">used 已被使用的物理内存大小</span><br><span class="line">free 还有多少物理内存可用</span><br><span class="line">shared 被共享使用的物理内存大小</span><br><span class="line">buff/cache 被 buffer 和 cache 使用的物理内存大小</span><br><span class="line">available 还可以被&quot;应用程序&quot;使用的物理内存大小，程序认为的</span><br><span class="line">系统很有效率地将所有内存用光，目的是为了让系统的访问性能加速</span><br></pre></td></tr></table></figure><ul><li>netstat 跟踪网络</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--常用在网络监控--&gt;</span><br><span class="line">netstat -tunpl | grep httpd</span><br><span class="line">-a：将目前系统上所有的连接、监听、Socket 数据都列出来</span><br><span class="line">-t：显示 TCP 传输协议的连线状况</span><br><span class="line">-u：显示 UDP 传输协议的连线状况</span><br><span class="line">-n：直接使用 IP 地址，而不通过域名服务器</span><br><span class="line">-p：显示正在使用 Socket 的程序识别码和程序名称</span><br><span class="line">-l：显示监控中的服务器的 Socket</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以 Centos 为标准，这章说进程管理。&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 之文件压缩、编辑与别名管理</title>
    <link href="http://blog.master-ss.cn/note/linux/pack/"/>
    <id>http://blog.master-ss.cn/note/linux/pack/</id>
    <published>2019-11-03T08:21:46.178Z</published>
    <updated>2019-11-10T01:49:47.028Z</updated>
    
    <content type="html"><![CDATA[<p>以 Centos 为标准，这章说文件压缩、编辑与别名管理。<br><a id="more"></a></p><h3 id="一、文件系统的压缩打包"><a href="#一、文件系统的压缩打包" class="headerlink" title="一、文件系统的压缩打包"></a>一、文件系统的压缩打包</h3><ul><li>zip &amp; unzip</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--安装 zip 减压软件--&gt;</span><br><span class="line">yum install -y unzip zip</span><br><span class="line"></span><br><span class="line">&lt;!---r：递归，表示将指定的目录下的所有子目录以及文件一起处理--&gt;</span><br><span class="line">zip -r public.zip(压缩包名称) ./public(压缩目录路径)</span><br><span class="line"></span><br><span class="line">unzip ./public.zip(压缩包路径) [-d dir]</span><br></pre></td></tr></table></figure><ul><li>tar</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--制作 gz 包--&gt;</span><br><span class="line">tar czvf public.tar.gz ./public</span><br><span class="line"></span><br><span class="line">&lt;!--解压 gz 包--&gt;</span><br><span class="line">tar xzvf public.tar.gz</span><br><span class="line"></span><br><span class="line">&lt;!--查看 gz 包--&gt;</span><br><span class="line">tar tf public.tar.gz</span><br><span class="line"></span><br><span class="line">&lt;!--制作 tar 包，仅打包，不压缩！--&gt;</span><br><span class="line">tar cvf wwwroot.tar wwwroot</span><br><span class="line"></span><br><span class="line">&lt;!--减压 tar 包--&gt;</span><br><span class="line">tar xvf wwwroot.tar</span><br><span class="line"></span><br><span class="line">特别注意，在参数的下达中，c/x/t 仅能存在一个！不可同时存在！因为不可能同时压缩与解压缩。</span><br><span class="line">-c：建立一个压缩档案的参数指令(create 的意思)</span><br><span class="line">-x：解开一个压缩档案的参数指令</span><br><span class="line">-t：查看 tarfile 里面的文件</span><br><span class="line"></span><br><span class="line">-z：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩？</span><br><span class="line">-j：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩？</span><br><span class="line">-v：压缩的过程中显示档案！这个常用，但不建议用在背景执行过程！</span><br><span class="line">-f：使用文件名，请留意，在 f 之后要立即接文件名喔！不要再加参数！</span><br></pre></td></tr></table></figure><h3 id="二、vi-vim-快速入门"><a href="#二、vi-vim-快速入门" class="headerlink" title="二、vi/vim 快速入门"></a>二、vi/vim 快速入门</h3><p>vi 是 Unix 和类 Unix 环境下的可用于创建文件的屏幕编辑器。vi 有两种工作模式：命令模式和文本输入模式。vim 是 vi 的升级版本，它不仅兼容 vi 的所有指令，而且还有一些新的特性在里面。</p><p>vi 命令模式：<br>默认编辑一个文件的时候第一次进入的就是命令模式，vi 从命令模式切换到文本输入模式可以在键盘上面按(i 或者 I 或者 a 或者 A 或者 O 或者 o)，按[ESC]键使 vi 从文本输入模式回到命令模式。按 [/] 键并输入文本即可在命令模式下查询该文本出现位置，按 [n] 键表示聚焦下个匹配项。<br><img src="/assets/note/linux/vi1.png"></p><p>退出 vi 命令模式：<br><img src="/assets/note/linux/vi2.png"></p><p>命令模式下面文本修改键：<br><img src="/assets/note/linux/vi3.png"><br><img src="/assets/note/linux/vi4.png"></p><h3 id="三、命名别名设置"><a href="#三、命名别名设置" class="headerlink" title="三、命名别名设置"></a>三、命名别名设置</h3><ul><li>alias（仅在当前终端有效）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- alias 后面加 &#123;&quot;别名&quot;=&apos;命令参数...&apos;&#125;，如： --&gt;</span><br><span class="line">alias ll=&apos;ls -l&apos;</span><br><span class="line"></span><br><span class="line">&lt;!--查看目前所有的命名别名--&gt;</span><br><span class="line">alias</span><br></pre></td></tr></table></figure><ul><li>unalias（仅在当前终端有效）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--取消别名--&gt;</span><br><span class="line">unalias ll</span><br></pre></td></tr></table></figure><h3 id="四、环境变量设置别名"><a href="#四、环境变量设置别名" class="headerlink" title="四、环境变量设置别名"></a>四、环境变量设置别名</h3><ul><li><code>/etc/profile</code> 和 <code>/etc/bashrc</code> 是 系统整体的设置，最好不要修改</li><li><code>~/.bash_history</code> 记录之前输入命令</li><li><code>~/.bash_logout</code> 退出时执行的命令</li><li><code>~/.bash_profile</code> 登入shell时执行</li><li><code>~/.bashrc</code> 非登入shell，一般被显式 <code>~/.bash_profile</code> 调用</li><li>source 读入环境配置文件，使其生效，而不必重启</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--source 配置文件名--&gt;</span><br><span class="line">source ~/.bashrc</span><br><span class="line"></span><br><span class="line">&lt;!-- 比如可在 `~/.bash_profile` 文件编辑添加配置文件使别名永久生效 --&gt;</span><br><span class="line"># User specific aliases and functions</span><br><span class="line">alias ll=&apos;ls -l&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以 Centos 为标准，这章说文件压缩、编辑与别名管理。&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 之用户管理与文件权限</title>
    <link href="http://blog.master-ss.cn/note/linux/auth/"/>
    <id>http://blog.master-ss.cn/note/linux/auth/</id>
    <published>2019-11-03T07:12:05.786Z</published>
    <updated>2019-11-03T07:22:13.332Z</updated>
    
    <content type="html"><![CDATA[<p>以 Centos 为标准，这章说用户管理与文件权限。<br><a id="more"></a></p><h3 id="一、用户管理"><a href="#一、用户管理" class="headerlink" title="一、用户管理"></a>一、用户管理</h3><ul><li>useradd 添加用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd lisi</span><br></pre></td></tr></table></figure><ul><li>passwd 设置密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--后面没有加账号就是改自己的密码--&gt;</span><br><span class="line">passwd lisi</span><br></pre></td></tr></table></figure><ul><li>userdel 删除用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!---r:递归的删除目录下面文件以及子目录下文件--&gt;</span><br><span class="line">userdel -r lisi</span><br></pre></td></tr></table></figure><ul><li>id 查看用户</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id user</span><br></pre></td></tr></table></figure><ul><li>groups 查看用户组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--有效与支持用户组的查看--&gt;</span><br><span class="line">groups</span><br></pre></td></tr></table></figure><ul><li>groupadd 新增用户组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--新建一个用户组，名为 group1--&gt;</span><br><span class="line">groupadd group1</span><br></pre></td></tr></table></figure><ul><li>groupdel 删除用户组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--删除 mygroup 组，不能删除初始用户组--&gt;</span><br><span class="line">groupdel mygroup</span><br></pre></td></tr></table></figure><ul><li>gpasswd 用户组管理</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--把用户 testuser 加入到 root 组，加入组后 testuser 获取到 user 组及 root 组所有权限--&gt;</span><br><span class="line">gpasswd -a testuser root</span><br><span class="line"></span><br><span class="line">&lt;!--移出组--&gt;</span><br><span class="line">gpasswd -d testuser root</span><br></pre></td></tr></table></figure><h3 id="二、用户身份切换"><a href="#二、用户身份切换" class="headerlink" title="二、用户身份切换"></a>二、用户身份切换</h3><ul><li>su 需新切换的用户密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--切换 root 身份--&gt;</span><br><span class="line">su -</span><br><span class="line"></span><br><span class="line">&lt;!--切换 dmtsai 身份--&gt;</span><br><span class="line">su -l dmtsai</span><br></pre></td></tr></table></figure><ul><li>sudo 仅需要自己的密码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--以 sshd 身份在 /tmp 下新建 mysshd 文件，不设置默认为 root--&gt;</span><br><span class="line">sudo -u sshd touch /tmp/mysshd</span><br><span class="line"></span><br><span class="line">&lt;!--查看当前用户可执行的命令--&gt;</span><br><span class="line">sudo -l</span><br></pre></td></tr></table></figure><ul><li>visudo 为用户添加 sudo 权限</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--输入--&gt;</span><br><span class="line">visudo</span><br><span class="line"></span><br><span class="line">&lt;!--编辑--&gt;</span><br><span class="line">%zhangsan ALL=(root) /usr/sbin/useradd</span><br><span class="line">%zhangsan ALL=(root) /usr/sbin/userdel</span><br><span class="line"></span><br><span class="line">&lt;!--用户账号  登陆者来源主机名=（可切换的身份） 可执行的命令--&gt;</span><br><span class="line">&lt;!--在用户账号最左边加上 % 代表后面接的是“用户组”--&gt;</span><br><span class="line">%admin    ALL = (ALL) ALL</span><br></pre></td></tr></table></figure><h3 id="三、文件权限"><a href="#三、文件权限" class="headerlink" title="三、文件权限"></a>三、文件权限</h3><h4 id="3-1、介绍"><a href="#3-1、介绍" class="headerlink" title="3.1、介绍"></a>3.1、介绍</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--显示文件与相关属性--&gt;</span><br><span class="line">ls -al</span><br><span class="line"></span><br><span class="line">-rw-r--r--  1 root root   331 Oct 28  2018 server.js</span><br></pre></td></tr></table></figure><p>第一个字符代表文件类型：</p><ul><li><code>d</code>为目录</li><li><code>-</code>为文件</li><li><p><code>l</code>为连接文件</p></li><li><p>接下来的字符串 3 个为一组，均为<code>rwx</code>组合，<code>r</code>代表可读，<code>w</code>代表可写，<code>x</code>代表可执行</p><ul><li>第一组为‘文件所有者的权限’</li><li>第二组为‘同用户组的权限’</li><li>第三组为‘其他非本用户组的权限’</li></ul></li><li>第二列表示有多少个文件名连接到此节点</li><li>第三列表示这个文件的‘所有者账号’</li><li>第四列表示这个文件的所属用户组</li><li>第五列为这个文件的容量大小，默认为B</li><li>第六列为这个文件的创建或最近修改时间</li><li>第七列为该文件名</li></ul><h4 id="3-2、改变文件属性与权限"><a href="#3-2、改变文件属性与权限" class="headerlink" title="3.2、改变文件属性与权限"></a>3.2、改变文件属性与权限</h4><ul><li>chgrp 改变文件所属用户组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chgrp [-R] dirname/filename</span><br><span class="line">-R：进行递归更改，即连同子目录下的所有文件、目录都更新成为这个用户组，常用于更新某一目录内所有的文件情况</span><br><span class="line"></span><br><span class="line">如修改用户组为 users</span><br><span class="line">chgrp users install.log</span><br></pre></td></tr></table></figure><ul><li>chown 改变文件所有者</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chown [-R] 账号名称 文件或目录</span><br><span class="line">chown [-R] 账号名称:组名 文件或目录</span><br><span class="line"></span><br><span class="line">将 install.log 的拥有者改为 bin 这个账号</span><br><span class="line">chown bin install.log</span><br><span class="line"></span><br><span class="line">将 install.log 的拥有者和群组改回为 root</span><br><span class="line">chown root:root install.log</span><br></pre></td></tr></table></figure><ul><li><p>chmod 改变文件的权限<br>文件权限的改变使用的是 chmod 这个指令，但是权限的设置方法有两种， 分别可以使用数字或者<br>符号来进行权限的变更</p><ul><li><p>数字类型改变档案权限<br>r：4<br>w：2<br>x：1</p></li><li><p>符号类型改变档案权限<br>u：user<br>g：group<br>o：others<br>a：all<br>+：加入<br>-：除去<br>=：设置</p></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chmod [-R] xyz 文件或目录</span><br><span class="line">xyz: 就是刚刚提到的数字类型的权限属性，为 rwx 属性数值的相加</span><br><span class="line"></span><br><span class="line">如：将 .bashrc 文件的权限修改为-rw-r--r--</span><br><span class="line">chmod 644 .bashrc</span><br><span class="line"></span><br><span class="line">如：将 .bashrc 文件的权限修改为-rwxr-xr-x</span><br><span class="line">chmod u=rwx,go=rx .bashrc</span><br><span class="line"></span><br><span class="line">如：不知道原先的文件属性，只想增加.bashrc 这个文件的每个人均可写入的权限</span><br><span class="line">chmod a+w .bashrc</span><br></pre></td></tr></table></figure><h4 id="3-3、目录与文件的权限意义"><a href="#3-3、目录与文件的权限意义" class="headerlink" title="3.3、目录与文件的权限意义"></a>3.3、目录与文件的权限意义</h4><ul><li>权限对文件的重要性<ul><li>r：读取文件的实际内容，如读取文本文件的文字内容等</li><li>w：编辑、新增、修改文件内容（不含删除）</li><li>x：具备被系统执行的权限</li></ul></li><li>权限对目录的重要性<ul><li>r：读取目录结构列表</li><li>w：更新目录结构列表的权限，如：新建文件或目录、删除文件或目录（不论该文件的权限）、重命名文件或目录、转移目录内文件或目录位置</li><li>x：代表用户能否进入该目录成为工作目录，所谓工作目录就是你目前所在的目录</li></ul></li></ul><p>要开放目录给任何人浏览时，应该至少也要给予 r 及 x 的权限，但 w 权限不可随便给</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以 Centos 为标准，这章说用户管理与文件权限。&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux 之文件及目录</title>
    <link href="http://blog.master-ss.cn/note/linux/file/"/>
    <id>http://blog.master-ss.cn/note/linux/file/</id>
    <published>2019-11-03T02:45:26.523Z</published>
    <updated>2019-11-03T08:55:07.685Z</updated>
    
    <content type="html"><![CDATA[<p>这周把 Linux 基础总结了一下，以 Centos 为标准，先说文件和目录这块。<br><a id="more"></a></p><h3 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h3><h4 id="1-1、shell-命令技巧"><a href="#1-1、shell-命令技巧" class="headerlink" title="1.1、shell 命令技巧"></a>1.1、shell 命令技巧</h4><ul><li>tab 补全<ul><li>如果 1 次 tab 且文件或命令唯一存在，则补全代码</li><li>如果 2 次 tab 则列出所有匹配到的文件或命令</li></ul></li><li>上下键盘查看最近的历史命令</li></ul><h4 id="1-2、目录结构介绍"><a href="#1-2、目录结构介绍" class="headerlink" title="1.2、目录结构介绍"></a>1.2、目录结构介绍</h4><p><img src="/assets/note/linux/construct.png"></p><ul><li>root 目录：linxu 超级权限 root 的主目录</li><li>home 目录：系统默认的用户主目录，如果添加用户是不指定用户的主目录，默认在<code>/home</code><br>下创建与用户同名的文件夹</li><li>bin 目录：存放系统所需要的重要命令，比如文件或目录操作的命令 ls、cp、mkdir 等，另外<code>/usr/bin</code>也放了一些系统命令。这些命令对应着文件都是可以执行的</li><li>sbin 目录：存放只有 root 超级管理员才能执行的程序</li><li>boot 目录：存放着 linux 启动时内核及引导系统程序所需要的核心文件，内核文件和 grub 系统引导管理器都位于此目录</li><li>dev 目录：存放这 linux 系统下的设备文件，如光驱等</li></ul><h3 id="二、目录与路径"><a href="#二、目录与路径" class="headerlink" title="二、目录与路径"></a>二、目录与路径</h3><h4 id="2-1、目录相关操作"><a href="#2-1、目录相关操作" class="headerlink" title="2.1、目录相关操作"></a>2.1、目录相关操作</h4><p>所有的目录下面都会存在两个目录，分别是“.”和“..”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.  代表此层目录</span><br><span class="line">.. 代表上一层目录</span><br><span class="line">-  代表前一个工作目录</span><br><span class="line">~  代表“目前用户身份”所在的主文件夹</span><br><span class="line">~account 代表 account 这个用户主文件夹(account 是个账号名称)</span><br></pre></td></tr></table></figure></p><h4 id="2-2、处理目录"><a href="#2-2、处理目录" class="headerlink" title="2.2、处理目录"></a>2.2、处理目录</h4><ul><li>cd: 切换目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cd [相对路径或绝对路径]</span><br><span class="line"></span><br><span class="line">&lt;!--代表去到 vbird 这个用户的主文件夹，即 /home/vbird--&gt;</span><br><span class="line">cd ~vbird</span><br><span class="line"></span><br><span class="line">&lt;!--表示回到自己主文件夹，即 /root 目录--&gt;</span><br><span class="line">cd ~</span><br><span class="line"></span><br><span class="line">&lt;!--没有加上任何路径，也还是代表回到主文件夹--&gt;</span><br><span class="line">cd</span><br><span class="line"></span><br><span class="line">&lt;!--表示去到目前的上层目录，即 /root 的上层目录--&gt;</span><br><span class="line">cd ..</span><br><span class="line"></span><br><span class="line">&lt;!--表示回到刚刚的个目录--&gt;</span><br><span class="line">cd -</span><br><span class="line"></span><br><span class="line">&lt;!--绝对路径--&gt;</span><br><span class="line">cd /var/spool/mail</span><br><span class="line"></span><br><span class="line">&lt;!--相对路径--&gt;</span><br><span class="line">cd ../mqueue</span><br></pre></td></tr></table></figure><ul><li>ls：查看文件与目录<br>当只执行 <code>ls</code> 时，默认显示的是只有非隐藏文件的文件名、以文件名进行排序及文件名代表的颜色显示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls [-adl] 目录名称</span><br><span class="line">a: 全部的档案，连同隐藏文件（开头为 . 的文件）一起列出来</span><br><span class="line">d: 仅列出目录本身，而不是列出目录的文件数据</span><br><span class="line">l: 长数据串，包含文件的属性与权限等数据</span><br></pre></td></tr></table></figure><ul><li>pwd: 显示当前目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pwd</span><br></pre></td></tr></table></figure><ul><li>mkdir: 新建新目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">mkdir [-mp] 目录名称</span><br><span class="line">&lt;!---m: 配置文件目录权限，直接设定，不需要看默认权限 (umask)--&gt;</span><br><span class="line">&lt;!---p: 帮你直接将所需要的目录(包括上层目录)递归建立--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--建立名为 test 新目录--&gt;</span><br><span class="line">mkdir test</span><br><span class="line"></span><br><span class="line">&lt;!--加了 -p 的选项，可自行帮你建立多层目录--&gt;</span><br><span class="line">mkdir -p test1/test2/test3/test4</span><br><span class="line"></span><br><span class="line">&lt;!--建立权限为 rwx--x--x 的目录--&gt;</span><br><span class="line">mkdir -m 711 test2</span><br></pre></td></tr></table></figure><ul><li>rmdir: 删除空目录，被删除的目录里面必定不能存在其他的目录或文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rmdir [-p] 目录名称</span><br><span class="line">&lt;!---p: 连同上层“空的”目录也一起删除--&gt;</span><br></pre></td></tr></table></figure><h4 id="2-3、关于执行文件路径的变量：-PATH"><a href="#2-3、关于执行文件路径的变量：-PATH" class="headerlink" title="2.3、关于执行文件路径的变量：$PATH"></a>2.3、关于执行文件路径的变量：$PATH</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--查询环境变量--&gt;</span><br><span class="line">echo $PATH</span><br><span class="line">/root/.nvm/versions/node/v8.11.2/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br></pre></td></tr></table></figure><h3 id="三、文件与目录管理"><a href="#三、文件与目录管理" class="headerlink" title="三、文件与目录管理"></a>三、文件与目录管理</h3><ul><li>touch：创建新文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">touch 文件</span><br><span class="line"></span><br><span class="line">&lt;!--新建一个空的文件--&gt;</span><br><span class="line">touch testtouch</span><br></pre></td></tr></table></figure><ul><li>cp：复制文件或目录<br>在默认条件中，cp 的源文件与目标文件的权限是不同的，目标文件的所有者通常会是命令操作者本身</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cp [-ir] 源文件(source) 目标文件(destination)</span><br><span class="line">-i: 若目标文件已存在时，在覆盖时会先询问操作的进行</span><br><span class="line">-r: 递归持续复制，用于目录的复制行为</span><br><span class="line"></span><br><span class="line">&lt;!--用 root 身份，将主文件下的 .bashrc 复制到 /tmp 下，并更名为 bashrc--&gt;</span><br><span class="line">cp ~/.bashrc /tmp/bashrc</span><br><span class="line"></span><br><span class="line">&lt;!--复制到当前目录，最后的 . 不要忘--&gt;</span><br><span class="line">cp /var/log/wtmp .</span><br><span class="line"></span><br><span class="line">&lt;!--可以将多个数据一次复制到同一个目录去，最后面一定是目录--&gt;</span><br><span class="line">cp ~/.bashrc ~/.bash_history /tmp</span><br></pre></td></tr></table></figure><ul><li>rm：移除文件或目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">rm [-fr] 档案或目录</span><br><span class="line">-f: 就是 force，忽略不存在的文件，不会出现警告;</span><br><span class="line">-r: 递归删除，常用在目录的删除</span><br><span class="line"></span><br><span class="line">&lt;!--透过通配符*的帮忙，将开头为 bashrc 文件名通通删除:--&gt;</span><br><span class="line">rm -i bashrc*</span><br><span class="line"></span><br><span class="line">&lt;!--将 /tmp/etc/ 这个目录删除掉--&gt;</span><br><span class="line">rm -r /tmp/etc</span><br></pre></td></tr></table></figure><ul><li>mv：移动文件与目录，或更名</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mv [-f] source destination</span><br><span class="line">-f: force 强制的意思，如果目标文件已经存在，不会询问而直接覆盖</span><br><span class="line"></span><br><span class="line">&lt;!--将目录名称更名为 mvtest2--&gt;</span><br><span class="line">mv mvtest mvtest2</span><br><span class="line"></span><br><span class="line">&lt;!--如果有多个源文件或目录，则最后一定是目录，即将所有的数据移动到该目录--&gt;</span><br><span class="line">mv bashrc1 bashrc2 mvtest2</span><br></pre></td></tr></table></figure><h3 id="四、文件内容查阅"><a href="#四、文件内容查阅" class="headerlink" title="四、文件内容查阅"></a>四、文件内容查阅</h3><ul><li>cat: 由第一行开始显示文件内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cat [-n]</span><br><span class="line">-n: 打印出行号，连同空白行也会有行号</span><br><span class="line"></span><br><span class="line">&lt;!--查看 /etc/issue 这个文件的内容，加印行号--&gt;</span><br><span class="line">cat -n /etc/issue</span><br><span class="line">&lt;!--返回结果--&gt;</span><br><span class="line">1 CentOS release 5.3 (Final)</span><br><span class="line">2 Kernel \r on an \m</span><br><span class="line">3</span><br></pre></td></tr></table></figure><ul><li>tac: 从最后一行开始显示</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tac /etc/issue</span><br><span class="line"></span><br><span class="line">&lt;!--返回--&gt;</span><br><span class="line">Kernel \r on an \m</span><br><span class="line">CentOS release 5.3 (Final)</span><br></pre></td></tr></table></figure><ul><li>more: 一页一页地显示文件内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">more master-stdout.log</span><br><span class="line"></span><br><span class="line">Space：向下翻页</span><br><span class="line">Enter：向下滚动一行</span><br><span class="line">/字符串：代表在显示的内容中，向下查询“字符串”这个关键词</span><br><span class="line">:f: 立即显示出文件名以及目前显示的行数</span><br><span class="line">q: 立即离开more，不再显示该文件内容</span><br></pre></td></tr></table></figure><ul><li>less：与 more 类似，可以往前翻页</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Space: 向下翻页</span><br><span class="line">Enter：向下滚动一行</span><br><span class="line">PageDown【fn+上方向】：向下翻页</span><br><span class="line">PageUp【fn+下方向】：向上翻页</span><br><span class="line">/字符串：向下查询“字符串”的功能</span><br><span class="line">?字符串：向上查询“字符串”的功能</span><br><span class="line">q：离开less这个程序</span><br></pre></td></tr></table></figure><ul><li>head：取出前面几行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">head [-n number] 文件</span><br><span class="line">-n: 后面接数字，代表显示几行</span><br><span class="line"></span><br><span class="line">&lt;!--默认的情况显示前十行，若要显示前 20 行，如下所示--&gt;</span><br><span class="line">head -n 20 /etc/man.config</span><br><span class="line"></span><br><span class="line">&lt;!--列出前面的所有行数，但不包括后面100行--&gt;</span><br><span class="line">head -n -100 /etc/man.config</span><br></pre></td></tr></table></figure><ul><li>tail：取出后面几行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">tail [-n number] 档案</span><br><span class="line">-n :后面接数字，代表显示几行</span><br><span class="line">-f :表示持续侦测后面的文件，要等到按下ctrl+c才会结束</span><br><span class="line"></span><br><span class="line">&lt;!--默认显示最后十行，若要显示最后 20 行，就得要这样--&gt;</span><br><span class="line">tail -n 20 /etc/man.config</span><br><span class="line"></span><br><span class="line">&lt;!--不知道/etc/man.config 有几行，只想列出 100 行以后的数据--&gt;</span><br><span class="line">tail -n +100 /etc/man.config</span><br><span class="line"></span><br><span class="line">&lt;!--持续侦测/var/log/messages 的内容--&gt;</span><br><span class="line">tail -f /var/log/messages</span><br></pre></td></tr></table></figure><ul><li><p>|：管道命令<br>数据经过几道手续之后才能得到我们所想要的格式，使用<code>|</code>界定符号。每个管道后面接的必定是“命令”，而且这个命令能接受 standard input，如 less, more, head, tail 等都是可以接受 standard input 的管道命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--使用ls命令输出后的内容能被less读取，并利用less功能翻动相关信息，按字母 ‘q’ 退出--&gt;</span><br><span class="line">ls -al /etc | less</span><br></pre></td></tr></table></figure></li><li><p>grep 选取命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">grep [-inv] [--color=auto] &apos;查找字符串&apos; filename</span><br><span class="line">-i 忽略大小写</span><br><span class="line">-n 输出行号</span><br><span class="line">-v 反向选择</span><br><span class="line">--color=auto 找到关键词部分加上颜色显示</span><br><span class="line"></span><br><span class="line">&lt;!--将 last 当中有 root 的那一行读取出来--&gt;</span><br><span class="line">last | grep &apos;root&apos;</span><br><span class="line"></span><br><span class="line">&lt;!--只有没有 root 就取出来--&gt;</span><br><span class="line">last | grep -v &apos;root&apos;</span><br><span class="line"></span><br><span class="line">&lt;!--取出 /etc/man.config 内行含 MAHPATH 的那几行--&gt;</span><br><span class="line">grep --color=auto &apos;MAHPATH&apos; /etc/man.config</span><br></pre></td></tr></table></figure></li></ul><h3 id="五、文件的查询"><a href="#五、文件的查询" class="headerlink" title="五、文件的查询"></a>五、文件的查询</h3><ul><li>which：寻找“执行文件”</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">which [-a] command</span><br><span class="line">-a :将所有由 PATH 目录中可以找到的命令均列出，而不只第一个被找到的命令名称</span><br><span class="line"></span><br><span class="line">&lt;!--搜寻 ifconfig 指令完整文件名--&gt;</span><br><span class="line">which ifconfig</span><br></pre></td></tr></table></figure><ul><li>whereis: 寻找特定文件<br>Linux 会将系统内的所有文件都记录在一个数据库文件里面，当使用 whereis 或 locate 时，以数据库文件为准。有时还能找到已经被删除的文件，而且找不到最新的刚创建的文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--找出 nginx 这个文件名--&gt;</span><br><span class="line">whereis nginx</span><br><span class="line">nginx: /usr/sbin/nginx /usr/lib64/nginx /etc/nginx /usr/share/nginx /usr/share/man/man8/nginx.8.gz</span><br></pre></td></tr></table></figure><ul><li>locate: 找出关键词文件<br>输入“文件的部分名称”就能够得到结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">locate keyword</span><br></pre></td></tr></table></figure><ul><li>find：磁盘查找文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find [PATH] [option] [action]</span><br><span class="line"></span><br><span class="line">&lt;!--搜寻文件名为 filename 的文件--&gt;</span><br><span class="line">find / -name passwd</span><br></pre></td></tr></table></figure><h3 id="六、文件系统简单操作"><a href="#六、文件系统简单操作" class="headerlink" title="六、文件系统简单操作"></a>六、文件系统简单操作</h3><ul><li>df: 列出文件系统的整体磁盘使用量</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">df [-h] [目录或文件名]</span><br><span class="line">-h: 以人们较易阅读的 GBytes, MBytes, KBytes 等格式自行显示</span><br><span class="line"></span><br><span class="line">&lt;!--在 df 后面加上目录或是档案时，df 会自动分析该目录的文件所在分区 ，并将该 分区的容量显示出来--&gt;</span><br><span class="line">df -h /etc</span><br></pre></td></tr></table></figure><ul><li>du: 评估文件系统的磁盘使用量<br>这个命令其实会直接到文件系统内去查找所有的文件数据，会执行段时间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">du [-skm] 文件或目录名称</span><br><span class="line">-s：列出总量而已，而不列出每个各别的目录占用容量</span><br><span class="line">-k：以 KB 列出容量</span><br><span class="line">-m：以 MB 列出容量</span><br><span class="line"></span><br><span class="line">&lt;!--检查当前目录下所有文件或文件夹所占容量--&gt;</span><br><span class="line">du -sm .</span><br><span class="line">712     ./coupon</span><br><span class="line">3       ./logs</span><br><span class="line">1       ./server.js</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这周把 Linux 基础总结了一下，以 Centos 为标准，先说文件和目录这块。&lt;br&gt;
    
    </summary>
    
      <category term="note" scheme="http://blog.master-ss.cn/categories/note/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建npm私有库</title>
    <link href="http://blog.master-ss.cn/project/verdaccio/"/>
    <id>http://blog.master-ss.cn/project/verdaccio/</id>
    <published>2019-10-27T01:29:03.040Z</published>
    <updated>2019-10-27T02:23:46.651Z</updated>
    
    <content type="html"><![CDATA[<p>最近使用 verdaccio 搭建了一个 npm 私有库，verdaccio 特点如下：</p><ul><li>私有包托管在内部服务器中</li><li>项目中即可使用公用仓库上的公共包，也可使用内部服务器上的私有包</li><li>下载的时候公共包走公共仓库，私有包走内部服务器的私有仓库</li><li>只缓存下载过的包，而不是全部同步</li></ul><p>具体搭建过程如下。<br><a id="more"></a> </p><h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><p>verdaccio 官网地址 <a href="https://verdaccio.org/zh-CN" target="_blank" rel="noopener">https://verdaccio.org/zh-CN</a><br>安装依赖包：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g verdaccio --unsafe-perm=true --allow-root</span><br></pre></td></tr></table></figure></p><p>安装依赖包添加权限是因为直接安装会导致某些权限上的问题，哪怕是用 root 权限去执行</p><h3 id="二、修改配置"><a href="#二、修改配置" class="headerlink" title="二、修改配置"></a>二、修改配置</h3><h4 id="2-1、修改配置文件"><a href="#2-1、修改配置文件" class="headerlink" title="2.1、修改配置文件"></a>2.1、修改配置文件</h4><p>配置文件路径：~/.config/verdaccio/config.yaml（PS：使用系统为 CentOS 7.5）<br>将 <code>auth: htpasswd:</code> 下的 max_users 改为 -1，让用户不能通过 npm adduser 注册账户</p><h4 id="2-2、手动添加账号"><a href="#2-2、手动添加账号" class="headerlink" title="2.2、手动添加账号"></a>2.2、手动添加账号</h4><p>生成 md5 的 htpasswd 密码，有<a href="http://www.htaccesstools.com/htpasswd-generator/" target="_blank" rel="noopener">密码生成的网站</a><br>会生成以下格式的用户名和密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username:$apr1$809o3o2I$.pN83j6srvreYZA4NL8GF0</span><br></pre></td></tr></table></figure></p><p>在<code>~/.config/verdaccio</code>下创建或编辑文件 htpasswd<br>写入上面字符串，每个用户占一行，现在就可以通过上面的用户名和密码访问了</p><h3 id="三、启动服务"><a href="#三、启动服务" class="headerlink" title="三、启动服务"></a>三、启动服务</h3><p>使用 pm2 管理 verdaccio，如果没有安装 pm2，需安装一下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 安装 pm2 全局包 --&gt;</span><br><span class="line">npm install pm2 -g</span><br><span class="line"></span><br><span class="line">&lt;!-- 使用 pm2 启动 verdaccio 服务 --&gt;</span><br><span class="line">pm2 start/stop verdaccio</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看进程启动情况 --&gt;</span><br><span class="line">pm2 ls</span><br></pre></td></tr></table></figure></p><h3 id="四、配置-nginx-反向代理"><a href="#四、配置-nginx-反向代理" class="headerlink" title="四、配置 nginx 反向代理"></a>四、配置 nginx 反向代理</h3><p>由于 verdaccio 默认是启动在 4873 端口，方便起见，配置 nginx 反向代理到该端口<br>如果需要查看 verdaccio 的端口号，可以用 <code>pm2 ls</code> 查看到 verdaccio 的 pid，然后使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep &lt;pid&gt;</span><br></pre></td></tr></table></figure></p><p>查看占用的端口号。<br>然后我们去配置域名解析，然后配置 nginx，配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name npm.master-ss.cn;</span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass              http://127.0.0.1:4873/;</span><br><span class="line">    proxy_set_header        Host $host;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后使用 <code>nginx -s reload</code> 重启 nginx 服务器，等域名解析生效后就能直接访问了。</p><h3 id="五、使用"><a href="#五、使用" class="headerlink" title="五、使用"></a>五、使用</h3><h4 id="5-1、nrm-切换镜像源"><a href="#5-1、nrm-切换镜像源" class="headerlink" title="5.1、nrm 切换镜像源"></a>5.1、nrm 切换镜像源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 全局安装 nrm --&gt;</span><br><span class="line">npm install -g nrm</span><br><span class="line"></span><br><span class="line">&lt;!-- 增加源 --&gt;</span><br><span class="line">nrm add masterss http://npm.master-ss.cn/</span><br><span class="line"></span><br><span class="line">&lt;!-- 查看可选的源 --&gt;</span><br><span class="line">nrm ls</span><br><span class="line"></span><br><span class="line">&lt;!-- 切换源 --&gt;</span><br><span class="line">nrm use masterss</span><br></pre></td></tr></table></figure><h4 id="5-2、发布包"><a href="#5-2、发布包" class="headerlink" title="5.2、发布包"></a>5.2、发布包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 登录 --&gt;</span><br><span class="line">npm login</span><br><span class="line"></span><br><span class="line">&lt;!-- 发布 --&gt;</span><br><span class="line">npm publish</span><br><span class="line"></span><br><span class="line">&lt;!-- 卸载发布 --&gt;</span><br><span class="line">npm unpublish</span><br></pre></td></tr></table></figure><h4 id="5-3、安装包"><a href="#5-3、安装包" class="headerlink" title="5.3、安装包"></a>5.3、安装包</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 方法一：使用 --registry 添加 --&gt;</span><br><span class="line">npm install --save xxx --registry=http://npm.master-ss.cn/</span><br><span class="line"></span><br><span class="line">&lt;!-- 方法二：使用 nrm 切换源 --&gt;</span><br><span class="line">nrm use masterss</span><br><span class="line">npm install --save xxx</span><br></pre></td></tr></table></figure><p>推荐在项目初始化的时候使用方法一，因为使用方法二切换到私有源安装的时候会比较慢。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近使用 verdaccio 搭建了一个 npm 私有库，verdaccio 特点如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;私有包托管在内部服务器中&lt;/li&gt;
&lt;li&gt;项目中即可使用公用仓库上的公共包，也可使用内部服务器上的私有包&lt;/li&gt;
&lt;li&gt;下载的时候公共包走公共仓库，私有包走内部服务器的私有仓库&lt;/li&gt;
&lt;li&gt;只缓存下载过的包，而不是全部同步&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;具体搭建过程如下。&lt;br&gt;
    
    </summary>
    
      <category term="project" scheme="http://blog.master-ss.cn/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb 聚合查询综合实例</title>
    <link href="http://blog.master-ss.cn/database/mongo7/"/>
    <id>http://blog.master-ss.cn/database/mongo7/</id>
    <published>2019-10-22T08:44:24.256Z</published>
    <updated>2019-10-22T09:47:43.214Z</updated>
    
    <content type="html"><![CDATA[<p>mongodb aggregation 综合实例<br><a id="more"></a> </p><h3 id="一、性能优化"><a href="#一、性能优化" class="headerlink" title="一、性能优化"></a>一、性能优化</h3><ul><li>查询结果需少于 16M<ul><li>使用 $limit &amp; $project</li></ul></li><li>每个管道阶段内存占用少于 100M<ul><li>使用索引</li><li>使用 allowDiskUse，减慢查询速度，可规避 100M 限制，不过不适用于 $graphLookup，因为 $graphLookup 不支持</li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      title: /^[aeiou]/i</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      title_size: &#123; $size: &#123; $split: [&quot;$title&quot;, &quot; &quot;] &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &quot;$title_size&quot;,</span><br><span class="line">      count: &#123; $sum: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sort: &#123; count: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line">&lt;!-- 可优化为 --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      title: /^[aeiou]/i</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sortByCount: &#123;</span><br><span class="line">      $size: &#123; $split: [&quot;$title&quot;, &quot; &quot;] &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">db.stocks.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $unwind: &quot;$trades&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &#123;</span><br><span class="line">        time: &quot;$id&quot;,</span><br><span class="line">        action: &quot;$trades.action&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      trades: &#123; $sum: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &quot;$_id.time&quot;,</span><br><span class="line">      actions: &#123;</span><br><span class="line">        $push: &#123;</span><br><span class="line">          type: &quot;$_id.action&quot;,</span><br><span class="line">          count: &quot;$trades&quot;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      total_trades: &#123; $sum: &quot;$trades&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sort: &#123; total_trades: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line">&lt;!-- 可优化为 --&gt;</span><br><span class="line">db.stocks.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      buy_actions: &#123;</span><br><span class="line">        $size: &#123;</span><br><span class="line">          $filter: &#123;</span><br><span class="line">            input: &quot;$trades&quot;,</span><br><span class="line">            cond: &#123; $eq: [&quot;$$this.action&quot;, &quot;buy&quot;] &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      sell_actions: &#123;</span><br><span class="line">        $size: &#123;</span><br><span class="line">          $filter: &#123;</span><br><span class="line">            input: &quot;$trades&quot;,</span><br><span class="line">            cond: &#123; $eq: [&quot;$$this.action&quot;, &quot;sell&quot;] &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      total_trades: &#123; $size: &quot;$trades&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sort: &#123; total_trades: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h3 id="二、综合实例"><a href="#二、综合实例" class="headerlink" title="二、综合实例"></a>二、综合实例</h3><p>使用 air_alliances 和 air_routes 集合，找出哪个 alliance 在 JFK 和 LHR 机场之间双向运作有最多的航空公司<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">db.air_routes.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      src_airport: &#123; $in: [&quot;LHR&quot;, &quot;JFK&quot;] &#125;,</span><br><span class="line">      dst_airport: &#123; $in: [&quot;LHR&quot;, &quot;JFK&quot;] &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $lookup: &#123;</span><br><span class="line">      from: &quot;air_alliances&quot;,</span><br><span class="line">      foreignField: &quot;airlines&quot;,</span><br><span class="line">      localField: &quot;airline.name&quot;,</span><br><span class="line">      as: &quot;alliance&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123; alliance: &#123; $ne: [] &#125; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $addFields: &#123;</span><br><span class="line">      alliance: &#123; $arrayElemAt: [&quot;$alliance.name&quot;, 0] &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &quot;$airline.id&quot;,</span><br><span class="line">      alliance: &#123; $first: &quot;$alliance&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sortByCount: &quot;$alliance&quot;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mongodb aggregation 综合实例&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://blog.master-ss.cn/categories/database/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb 聚合查询之多维分组</title>
    <link href="http://blog.master-ss.cn/database/mongo6/"/>
    <id>http://blog.master-ss.cn/database/mongo6/</id>
    <published>2019-10-22T07:40:21.960Z</published>
    <updated>2019-10-22T08:39:04.992Z</updated>
    
    <content type="html"><![CDATA[<p>mongodb aggregation 分组操作符<br><a id="more"></a> </p><h3 id="一、-sortByCount"><a href="#一、-sortByCount" class="headerlink" title="一、$sortByCount"></a>一、$sortByCount</h3><p>$sortByCount 等效于 $group + $sort<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$group&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: &quot;$imdb.rating&quot;,</span><br><span class="line">      &quot;count&quot;: &#123; &quot;$sum&quot;: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$sort&quot;: &#123; &quot;count&quot;: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line">&lt;!-- 等同于 --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$sortByCount&quot;: &quot;$imdb.rating&quot;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="二、-bucket"><a href="#二、-bucket" class="headerlink" title="二、$bucket"></a>二、$bucket</h3><p>根据边界分段分组，boundaries 表示分段边界数组，default 表示不在边界内显示字段，默认显示 count，使用 output 可以自定义输出字段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">db.companies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$match&quot;: &#123;&quot;founded_year&quot;: &#123;&quot;$gt&quot;: 1980&#125;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$bucket&quot;: &#123;</span><br><span class="line">      &quot;groupBy&quot;: &quot;$number_of_employees&quot;,</span><br><span class="line">      &quot;boundaries&quot;: [ 0, 20, 50, 100, 500, 1000, Infinity  ],</span><br><span class="line">      &quot;default&quot;: &quot;Other&quot;,</span><br><span class="line">      &quot;output&quot;: &#123;</span><br><span class="line">        &quot;total&quot;: &#123;&quot;$sum&quot;:1&#125;,</span><br><span class="line">        &quot;average&quot;: &#123;&quot;$avg&quot;: &quot;$number_of_employees&quot; &#125;,</span><br><span class="line">        &quot;categories&quot;: &#123;&quot;$addToSet&quot;: &quot;$category_code&quot;&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="三、-bucketAuto"><a href="#三、-bucketAuto" class="headerlink" title="三、$bucketAuto"></a>三、$bucketAuto</h3><p>自动分段分组<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$match&quot;: &#123; &quot;imdb.rating&quot;: &#123; &quot;$gte&quot;: 0 &#125; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$bucketAuto&quot;: &#123;</span><br><span class="line">      &quot;groupBy&quot;: &quot;$imdb.rating&quot;,</span><br><span class="line">      &quot;buckets&quot;: 4,</span><br><span class="line">      &quot;output&quot;: &#123;</span><br><span class="line">        &quot;average_per_bucket&quot;: &#123; &quot;$avg&quot;: &quot;$imdb.rating&quot; &#125;,</span><br><span class="line">        &quot;count&quot;: &#123; &quot;$sum&quot;: 1 &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="四、-facet"><a href="#四、-facet" class="headerlink" title="四、$facet"></a>四、$facet</h3><p>将 $bucket、$bucketAuto、$sortByCount 等聚合到同一阶段，每个键都是输出字段，不能包含 $facet、$out、$geoNear、$indexStats 和 $collStats。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line">db.companies.aggregate( [</span><br><span class="line">  &#123; &quot;$match&quot;: &#123; &quot;$text&quot;: &#123;&quot;$search&quot;: &quot;Databases&quot;&#125; &#125; &#125;,</span><br><span class="line">  &#123; &quot;$facet&quot;: &#123;</span><br><span class="line">    &quot;Categories&quot;: [&#123;&quot;$sortByCount&quot;: &quot;$category_code&quot;&#125;],</span><br><span class="line">    &quot;Employees&quot;: [</span><br><span class="line">      &#123; &quot;$match&quot;: &#123;&quot;founded_year&quot;: &#123;&quot;$gt&quot;: 1980&#125;&#125;&#125;,</span><br><span class="line">      &#123;&quot;$bucket&quot;: &#123;</span><br><span class="line">        &quot;groupBy&quot;: &quot;$number_of_employees&quot;,</span><br><span class="line">        &quot;boundaries&quot;: [ 0, 20, 50, 100, 500, 1000, Infinity  ],</span><br><span class="line">        &quot;default&quot;: &quot;Other&quot;</span><br><span class="line">      &#125;&#125;],</span><br><span class="line">    &quot;Founded&quot;: [</span><br><span class="line">      &#123; &quot;$match&quot;: &#123;&quot;offices.city&quot;: &quot;New York&quot; &#125;&#125;,</span><br><span class="line">      &#123;&quot;$bucketAuto&quot;: &#123;</span><br><span class="line">        &quot;groupBy&quot;: &quot;$founded_year&quot;,</span><br><span class="line">        &quot;buckets&quot;: 5   &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;&#125;]).pretty()</span><br><span class="line"></span><br><span class="line">&lt;!-- 应用实例 --&gt;</span><br><span class="line">同时在 imdb.rating 和 metacritic 字段上排前十的有多少部电影？</span><br><span class="line">&lt;!-- 聚合查询 --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      metacritic: &#123; $gte: 0 &#125;,</span><br><span class="line">      &quot;imdb.rating&quot;: &#123; $gte: 0 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      _id: 0,</span><br><span class="line">      metacritic: 1,</span><br><span class="line">      imdb: 1,</span><br><span class="line">      title: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $facet: &#123;</span><br><span class="line">      top_metacritic: [</span><br><span class="line">        &#123;</span><br><span class="line">          $sort: &#123;</span><br><span class="line">            metacritic: -1,</span><br><span class="line">            title: 1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          $limit: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          $project: &#123;</span><br><span class="line">            title: 1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ],</span><br><span class="line">      top_imdb: [</span><br><span class="line">        &#123;</span><br><span class="line">          $sort: &#123;</span><br><span class="line">            &quot;imdb.rating&quot;: -1,</span><br><span class="line">            title: 1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          $limit: 10</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          $project: &#123;</span><br><span class="line">            title: 1</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      movies_in_both: &#123;</span><br><span class="line">        $setIntersection: [&quot;$top_metacritic&quot;, &quot;$top_imdb&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mongodb aggregation 分组操作符&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://blog.master-ss.cn/categories/database/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb 聚合查询组合信息</title>
    <link href="http://blog.master-ss.cn/database/mongo5/"/>
    <id>http://blog.master-ss.cn/database/mongo5/</id>
    <published>2019-10-22T01:22:06.259Z</published>
    <updated>2019-10-22T08:40:36.583Z</updated>
    
    <content type="html"><![CDATA[<p>mongodb aggregation 组合信息操作符<br><a id="more"></a> </p><h3 id="一、-group"><a href="#一、-group" class="headerlink" title="一、$group"></a>一、$group</h3><p>通过指定的 _id 字段对输入文档进行分组（_id 是用来标识分组），并针对每个不同的分组输出文档。每个输出文档的 _id 字段均包含唯一的按值分组，输出文档还可以包含某些 accumulator 表达式值的计算字段，如：$sum、$avg、$min、$max    等。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 先分组统计，再根据 count 倒序排列 --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$group&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: &quot;$year&quot;,</span><br><span class="line">      &quot;count&quot;: &#123; &quot;$sum&quot;: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$sort&quot;: &#123; &quot;count&quot;: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">&lt;!-- $group 的字段可以使用表达式 --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$group&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: &#123;</span><br><span class="line">        &quot;numDirectors&quot;: &#123;</span><br><span class="line">          &quot;$cond&quot;: [&#123; &quot;$isArray&quot;: &quot;$directors&quot; &#125;, &#123; &quot;$size&quot;: &quot;$directors&quot; &#125;, 0]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;numFilms&quot;: &#123; &quot;$sum&quot;: 1 &#125;,</span><br><span class="line">      &quot;averageMetacritic&quot;: &#123; &quot;$avg&quot;: &quot;$metacritic&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$sort&quot;: &#123; &quot;_id.numDirectors&quot;: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">&lt;!-- 先过滤，再对所有数据进行分组，计算平均值 --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$match&quot;: &#123; &quot;metacritic&quot;: &#123; &quot;$gte&quot;: 0 &#125; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$group&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: null,</span><br><span class="line">      &quot;averageMetacritic&quot;: &#123; &quot;$avg&quot;: &quot;$metacritic&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="二、accumulator"><a href="#二、accumulator" class="headerlink" title="二、accumulator"></a>二、accumulator</h3><p>使用 $sum、$avg、$min、$max    等，$map、$reduce 可用于更复杂的计算。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用 $reduce 计算 avg_high_tmp 最大值 --&gt;</span><br><span class="line">db.icecream_data.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$project&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: 0,</span><br><span class="line">      &quot;max_high&quot;: &#123;</span><br><span class="line">        &quot;$reduce&quot;: &#123;</span><br><span class="line">          &quot;input&quot;: &quot;$trends&quot;,</span><br><span class="line">          &quot;initialValue&quot;: -Infinity,</span><br><span class="line">          &quot;in&quot;: &#123;</span><br><span class="line">            &quot;$cond&quot;: [</span><br><span class="line">              &#123; &quot;$gt&quot;: [&quot;$$this.avg_high_tmp&quot;, &quot;$$value&quot;] &#125;,</span><br><span class="line">              &quot;$$this.avg_high_tmp&quot;,</span><br><span class="line">              &quot;$$value&quot;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">&lt;!-- 可使用 $max 简化操作 --&gt;</span><br><span class="line">db.icecream_data.aggregate([&#123;</span><br><span class="line">  &quot;$project&quot;: &#123;</span><br><span class="line">    &quot;_id&quot;: 0,</span><br><span class="line">    &quot;max_high&quot;: &#123;</span><br><span class="line">      &quot;$max&quot;: &quot;$trends.avg_high_tmp&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;])</span><br><span class="line"></span><br><span class="line">&lt;!-- 分组计算总和 --&gt;</span><br><span class="line">db.icecream_data.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$project&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: 0,</span><br><span class="line">      &quot;yearly_sales (millions)&quot;: &#123; &quot;$sum&quot;: &quot;$trends.icecream_sales_in_millions&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">&lt;!-- 应用实例 --&gt;</span><br><span class="line">对所有获得至少 1 项奥斯卡奖的影片，请计算 imdb.rating 的标准偏差，最高，最低和平均值。</span><br><span class="line">提示-该系列中所有获得奥斯卡奖的电影都以类似于以下奖项之一的字符串开头：</span><br><span class="line">比如：</span><br><span class="line">Won 13 Oscars</span><br><span class="line">Won 1 Oscar</span><br><span class="line">数字精确到小数点后 4 位</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      awards: /Won \d&#123;1,2&#125; Oscars?/</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: null,</span><br><span class="line">      highest_rating: &#123; $max: &quot;$imdb.rating&quot; &#125;,</span><br><span class="line">      lowest_rating: &#123; $min: &quot;$imdb.rating&quot; &#125;,</span><br><span class="line">      average_rating: &#123; $avg: &quot;$imdb.rating&quot; &#125;,</span><br><span class="line">      deviation: &#123; $stdDevSamp: &quot;$imdb.rating&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="二、-unwind"><a href="#二、-unwind" class="headerlink" title="二、$unwind"></a>二、$unwind</h3><p>将文档中的某一个数组类型字段拆分成多条，每条包含数组中的一个值。只在数组中使用，在大集合中使用 $unwind 会有性能问题，可能导致内存超出，所以尽早使用 $match 过滤。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 找出 2010 到 2015 电影 imdb.rating 最高的 genres --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$match&quot;: &#123;</span><br><span class="line">      &quot;imdb.rating&quot;: &#123; &quot;$gt&quot;: 0 &#125;,</span><br><span class="line">      &quot;year&quot;: &#123; &quot;$gte&quot;: 2010, &quot;$lte&quot;: 2015 &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$unwind&quot;: &quot;$genres&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$group&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: &#123;</span><br><span class="line">        &quot;year&quot;: &quot;$year&quot;,</span><br><span class="line">        &quot;genre&quot;: &quot;$genres&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;average_rating&quot;: &#123; &quot;$avg&quot;: &quot;$imdb.rating&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$sort&quot;: &#123; &quot;_id.year&quot;: -1, &quot;average_rating&quot;: -1 &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$group&quot;: &#123;</span><br><span class="line">      &quot;_id&quot;: &quot;$_id.year&quot;,</span><br><span class="line">      &quot;genre&quot;: &#123; &quot;$first&quot;: &quot;$_id.genre&quot; &#125;,</span><br><span class="line">      &quot;average_rating&quot;: &#123; &quot;$first&quot;: &quot;$average_rating&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$sort&quot;: &#123; &quot;_id&quot;: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">&lt;!-- 应用实例 --&gt;</span><br><span class="line">计算每个 cast 的参加电影数量，并获取每个 cast 的平均 imdb.rating。</span><br><span class="line">出现在英语作为可用语言的电影次数最多的 cast，电影数量和平均 imdb.rating（精确到小数点后一位）是多少？</span><br><span class="line">按照以下顺序和格式提供输入：</span><br><span class="line">&#123; &quot;_id&quot;: &quot;First Last&quot;, &quot;numFilms&quot;: 1, &quot;average&quot;: 1.1 &#125;</span><br><span class="line">$trunc 将数字截断为整数或指定的小数位：&#123; $trunc : [ &lt;number&gt;, &lt;place&gt; ] &#125;，place 默认为 0</span><br><span class="line">$trunc: [1234.5678, 0] =&gt; 1234</span><br><span class="line">$trunc: [1234.5678, -2] =&gt; 1200</span><br><span class="line">$trunc: [1234.5678, 2] =&gt; 1234.56</span><br><span class="line">&lt;!-- 聚合查询如下： --&gt;</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      languages: &quot;English&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123; _id: 0, cast: 1, &quot;imdb.rating&quot;: 1 &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $unwind: &quot;$cast&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &quot;$cast&quot;,</span><br><span class="line">      numFilms: &#123; $sum: 1 &#125;,</span><br><span class="line">      average: &#123; $avg: &quot;$imdb.rating&quot; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      numFilms: 1,</span><br><span class="line">      average: &#123;</span><br><span class="line">        $divide: [&#123; $trunc: &#123; $multiply: [&quot;$average&quot;, 10] &#125; &#125;, 10]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sort: &#123; numFilms: -1 &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $limit: 1</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="三、-lookup"><a href="#三、-lookup" class="headerlink" title="三、$lookup"></a>三、$lookup</h3><p>对同一数据库中的未分片集合执行左外部联接。在每个输入文档中，$lookup 阶段都会添加一个新的数组字段，其元素是 “joined” 集合中的匹配文档，$lookup 阶段将这些经过重整的文档传递到下一个阶段。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">db.air_alliances.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$lookup&quot;: &#123;</span><br><span class="line">      &quot;from&quot;: &quot;air_airlines&quot;,</span><br><span class="line">      &quot;localField&quot;: &quot;airlines&quot;,</span><br><span class="line">      &quot;foreignField&quot;: &quot;name&quot;,</span><br><span class="line">      &quot;as&quot;: &quot;airlines&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]).pretty()</span><br><span class="line"></span><br><span class="line">&lt;!-- 应用实例 --&gt;</span><br><span class="line">在 air_alliances 中使用 Boeing 747 或 Airbus A380（在 air_routes 中分别为 747 和 380）最多的是哪个 alliance？</span><br><span class="line">&lt;!-- 聚合查询实例 --&gt;</span><br><span class="line">db.air_routes.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      airplane: /747|380/</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $lookup: &#123;</span><br><span class="line">      from: &quot;air_alliances&quot;,</span><br><span class="line">      foreignField: &quot;airlines&quot;,</span><br><span class="line">      localField: &quot;airline.name&quot;,</span><br><span class="line">      as: &quot;alliance&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $unwind: &quot;$alliance&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &quot;$alliance.name&quot;,</span><br><span class="line">      count: &#123; $sum: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $sort: &#123; count: -1 &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></p><h3 id="四、-graphLookup"><a href="#四、-graphLookup" class="headerlink" title="四、$graphLookup"></a>四、$graphLookup</h3><p>对集合执行递归搜索，其中包含用于通过递归深度和查询限制搜索的选项，from 为递归匹配 connectFromField 和 connectToField 字段的集合。<br>注意事项：<br>可能返回过多数据，导致内存溢出，使用 $allowDiskUse 选项；<br>或者给 connectToField 添加索引；<br>不能在分片集合中使用；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 自递归查询出所有下属 --&gt;</span><br><span class="line">db.parent_reference.aggregate([&#123;</span><br><span class="line">  $match: &#123;</span><br><span class="line">    name: &apos;Eliot&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  $graphLookup: &#123;</span><br><span class="line">    from: &apos;parent_reference&apos;,</span><br><span class="line">    startWith: &apos;$_id&apos;,</span><br><span class="line">    connectFromField: &apos;_id&apos;,</span><br><span class="line">    connectToField: &apos;reports_to&apos;,</span><br><span class="line">    as: &apos;all_reports&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;]).pretty()</span><br><span class="line"></span><br><span class="line">&lt;!-- 自递归查询出所有下属，maxDepth 如果为 0 则是直接下属，没有递归查询；depthField  --&gt;</span><br><span class="line">db.child_reference.aggregate([&#123;</span><br><span class="line">  $match: &#123;</span><br><span class="line">    name: &apos;Dev&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  $graphLookup: &#123;</span><br><span class="line">    from: &apos;child_reference&apos;,</span><br><span class="line">    startWith: &apos;$direct_reports&apos;,</span><br><span class="line">    connectFromField: &apos;direct_reports&apos;,</span><br><span class="line">    connectToField: &apos;name&apos;,</span><br><span class="line">    as: &apos;till_2_level_reports&apos;,</span><br><span class="line">    maxDepth: 1,</span><br><span class="line">    depthField: &apos;level&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;]).pretty()</span><br><span class="line"></span><br><span class="line">&lt;!-- 跨表递归查询，restrictSearchWithMatch 用于递归查询过滤 --&gt;</span><br><span class="line">db.air_airlines.aggregate([&#123;</span><br><span class="line">  $match: &#123;</span><br><span class="line">    name: &apos;TAP Portugal&apos;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  $graphLookup: &#123;</span><br><span class="line">    from: &apos;air_routes&apos;,</span><br><span class="line">    startWith: &apos;$base&apos;,</span><br><span class="line">    connectFromField: &apos;dst_airport&apos;,</span><br><span class="line">    connectToField: &apos;src_airport&apos;,</span><br><span class="line">    as: &apos;chain&apos;,</span><br><span class="line">    maxDepth: 1,</span><br><span class="line">    depthField: &apos;level&apos;,</span><br><span class="line">    restrictSearchWithMatch: &#123;</span><br><span class="line">      &apos;airline.name&apos;: &apos;TAP Portugal&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;], &#123;</span><br><span class="line">  allowDiskUse: true</span><br><span class="line">&#125;).pretty()</span><br><span class="line"></span><br><span class="line">&lt;!-- 应用实例 --&gt;</span><br><span class="line">查找最多有一个中转的，属于 &quot;OneWorld&quot; 联盟的航空公司的 base 机场的所有可能目的地的列表。航空公司应是德国，西班牙或加拿大的国家航空公司。包括目的地以及该位置的航空公司。小提示，应该找到158个目的地。</span><br><span class="line">db.air_alliances.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123; name: &quot;OneWorld&quot; &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $graphLookup: &#123;</span><br><span class="line">      startWith: &quot;$airlines&quot;,</span><br><span class="line">      from: &quot;air_airlines&quot;,</span><br><span class="line">      connectFromField: &quot;name&quot;,</span><br><span class="line">      connectToField: &quot;name&quot;,</span><br><span class="line">      as: &quot;airlines&quot;,</span><br><span class="line">      maxDepth: 0,</span><br><span class="line">      restrictSearchWithMatch: &#123;</span><br><span class="line">        country: &#123; $in: [&quot;Germany&quot;, &quot;Spain&quot;, &quot;Canada&quot;] &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $graphLookup: &#123;</span><br><span class="line">      startWith: &quot;$airlines.base&quot;,</span><br><span class="line">      from: &quot;air_routes&quot;,</span><br><span class="line">      connectFromField: &quot;dst_airport&quot;,</span><br><span class="line">      connectToField: &quot;src_airport&quot;,</span><br><span class="line">      as: &quot;connections&quot;,</span><br><span class="line">      maxDepth: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      validAirlines: &quot;$airlines.name&quot;,</span><br><span class="line">      &quot;connections.dst_airport&quot;: 1,</span><br><span class="line">      &quot;connections.airline.name&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; $unwind: &quot;$connections&quot; &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      isValid: &#123;</span><br><span class="line">        $in: [&quot;$connections.airline.name&quot;, &quot;$validAirlines&quot;]</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;connections.dst_airport&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; $match: &#123; isValid: true &#125; &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $group: &#123;</span><br><span class="line">      _id: &quot;$connections.dst_airport&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mongodb aggregation 组合信息操作符&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://blog.master-ss.cn/categories/database/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb 聚合查询基础</title>
    <link href="http://blog.master-ss.cn/database/mongo4/"/>
    <id>http://blog.master-ss.cn/database/mongo4/</id>
    <published>2019-10-21T09:53:04.749Z</published>
    <updated>2019-10-21T14:24:32.844Z</updated>
    
    <content type="html"><![CDATA[<p>mongodb aggregation 基础。<br><a id="more"></a> </p><h3 id="一、基础知识"><a href="#一、基础知识" class="headerlink" title="一、基础知识"></a>一、基础知识</h3><ul><li><p>远程连接<br>mongo “mongodb://cluster0-shard-00-00-jxeqq.mongodb.net:27017,cluster0-shard-00-01-jxeqq.mongodb.net:27017,cluster0-shard-00-02-jxeqq.mongodb.net:27017/test?replicaSet=Cluster0-shard-0” -authenticationDatabase admin -ssl -username m001-student -password m001-mongodb-basics</p></li><li><p>导出<br>mongodump -u m121 -p aggregations -h “Cluster0-shard-0/cluster0-shard-00-00-jxeqq.mongodb.net:27017,cluster0-shard-00-01-jxeqq.mongodb.net:27017,cluster0-shard-00-02-jxeqq.mongodb.net:27017” –db aggregations –authenticationDatabase admin –ssl -o /Users/songsong.zhang/Desktop/mongo</p></li><li><p>导入<br>mongorestore –db aggregations /Users/songsong.zhang/Desktop/mongo/aggregations</p></li><li><p>管道通信<br>$match &gt; $project &gt; $group<br>$match: 用来过滤文档查询<br>$project: 用来格式化输出<br>$group: 用来数组分组</p></li></ul><h3 id="二、基础命令"><a href="#二、基础命令" class="headerlink" title="二、基础命令"></a>二、基础命令</h3><ul><li><p>$match<br>$match 使用 Mongodb 查询语句，应尽可能在前面被调用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">db.solarSystem.aggregate([&#123;</span><br><span class="line">  &quot;$match&quot;: &#123; &quot;type&quot;: &#123; &quot;$ne&quot;: &quot;Star&quot;&#125; &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  &quot;$count&quot;: &quot;planets&quot;</span><br><span class="line">&#125;]);</span><br><span class="line"></span><br><span class="line">应用实例：</span><br><span class="line">在下一个电影之夜帮助 MongoDB 挑选电影，可能的电影必须满足以下条件：</span><br><span class="line">imdb.rating 至少为 7；</span><br><span class="line">genres 不包含 &quot;Crime&quot; 或 &quot;Horror&quot;；</span><br><span class="line">rated 为 &quot;PG&quot; 或 &quot;G&quot;；</span><br><span class="line">languages 包含 &quot;English&quot; 和 &quot;Japanese&quot;；</span><br><span class="line">具体管道通信代码如下：</span><br><span class="line">var pipeline = [</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      &quot;imdb.rating&quot;: &#123; $gte: 7 &#125;,</span><br><span class="line">      genres: &#123; $nin: [ &quot;Crime&quot;, &quot;Horror&quot; ] &#125; ,</span><br><span class="line">      rated: &#123; $in: [&quot;PG&quot;, &quot;G&quot; ] &#125;,</span><br><span class="line">      languages: &#123; $all: [ &quot;English&quot;, &quot;Japanese&quot; ] &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></li><li><p>$project<br>一旦表明某个字段显式返回，则所有返回的字段均需要显式表明，_id 除外；<br>不仅仅可以移除和返回字段，而且可以添加新字段；<br>在聚合管道中可多次使用；<br>可使用已存在字段重新分配新值或创建新字段；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">db.solarSystem.aggregate([&#123;</span><br><span class="line">&quot;$project&quot;: &#123;</span><br><span class="line">&quot;_id&quot;: 0,</span><br><span class="line">&quot;name&quot;: 1,</span><br><span class="line">&quot;myWeight&quot;: &#123;</span><br><span class="line">&quot;$multiply&quot;: [&#123;</span><br><span class="line">&quot;$divide&quot;: [&quot;$gravity.value&quot;, 9.8]</span><br><span class="line">&#125;, 86]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;]);</span><br><span class="line"></span><br><span class="line">应用实例：</span><br><span class="line">我们的电影数据集包含许多不同的文档，其中一些具有比其他更复杂的标题。如果我们想分析集合以查找仅由一个单词组成的电影标题，则可以获取数据集中的所有电影并在客户端应用程序中进行一些处理，但是 aggregation 允许我们在数据库中处理！</span><br><span class="line">查找标题由一个单词组成的电影数量，比如，&quot;Cinderella&quot; 和 &quot;3-25&quot; 应该算在内，而 &quot;Cast Away&quot; 则不算。</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      title: &#123;</span><br><span class="line">        $type: &quot;string&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      title: &#123; $split: [&quot;$title&quot;, &quot; &quot;] &#125;,</span><br><span class="line">      _id: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      title: &#123; $size: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]).itcount()</span><br></pre></td></tr></table></figure></li><li><p>$addFields<br>为查询结果添加字段，如果已存在则覆盖原字段。$project 有同样的效果，但是通常用于显示或移除字段。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">db.solarSystem.aggregate([</span><br><span class="line">&#123;&quot;$project&quot;: &#123;</span><br><span class="line">    &quot;_id&quot;: 0,</span><br><span class="line">    &quot;name&quot;: 1,</span><br><span class="line">    &quot;gravity&quot;: 1,</span><br><span class="line">    &quot;mass&quot;: 1,</span><br><span class="line">    &quot;radius&quot;: 1,</span><br><span class="line">    &quot;sma&quot;: 1&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#123;&quot;$addFields&quot;: &#123;</span><br><span class="line">    &quot;gravity&quot;: &quot;$gravity.value&quot;,</span><br><span class="line">    &quot;mass&quot;: &quot;$mass.value&quot;,</span><br><span class="line">    &quot;radius&quot;: &quot;$radius.value&quot;,</span><br><span class="line">    &quot;sma&quot;: &quot;$sma.value&quot;</span><br><span class="line">&#125;&#125;]);</span><br></pre></td></tr></table></figure></li><li><p>指针类<br>$limit、$skip、$count、$sort</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">db.solarSystem.aggregate([&#123;</span><br><span class="line">  &quot;$match&quot;: &#123;</span><br><span class="line">    &quot;type&quot;: &quot;Terrestrial planet&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  &quot;$count&quot;: &quot;terrestrial planets&quot;</span><br><span class="line">&#125;]).pretty();</span><br><span class="line"></span><br><span class="line">使用实例：</span><br><span class="line">MongoDB安排了另一个电影之夜。这次，我们对员工进行了投票，以找出他们最喜欢的女演员或演员，并获得了这些结果：</span><br><span class="line">favorites = [</span><br><span class="line">  &quot;Sandra Bullock&quot;,</span><br><span class="line">  &quot;Tom Hanks&quot;,</span><br><span class="line">  &quot;Julia Roberts&quot;,</span><br><span class="line">  &quot;Kevin Spacey&quot;,</span><br><span class="line">  &quot;George Clooney&quot;</span><br><span class="line">]</span><br><span class="line">对于在 USA 发行的 Tomatos.viewer.rating 大于或等于 3 的电影，请计算一个名为 num_favs 的新字段，该字段表示在该电影的 cast 字段中出现多少个 favorites。对 num_favs，tomatos.viewer.rating 和 title 进行降序排序，结果中第 25 部电影的标题是什么？</span><br><span class="line">聚合查询如下：</span><br><span class="line">db.movies.aggregate([&#123;</span><br><span class="line">  &quot;$match&quot;: &#123;</span><br><span class="line">    &quot;tomatoes.viewer.rating&quot;: &#123; &quot;$gte&quot;: 3 &#125;,</span><br><span class="line">    &quot;countries&quot;: &quot;USA&quot;,</span><br><span class="line">    &quot;cast&quot;: &#123;</span><br><span class="line">      &quot;$in&quot;: favorites</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  &quot;$project&quot;: &#123;</span><br><span class="line">    &quot;_id&quot;: -1,</span><br><span class="line">    &quot;title&quot;: 1,</span><br><span class="line">    &quot;tomatoes.viewer.rating&quot;: 1,</span><br><span class="line">    &quot;num_favs&quot;: &#123;</span><br><span class="line">      &quot;$size&quot;: &#123;</span><br><span class="line">        &quot;$setIntersection&quot;: [</span><br><span class="line">          &quot;$cast&quot;,</span><br><span class="line">          favorites</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  &quot;$sort&quot;: &#123;</span><br><span class="line">    &quot;num_favs&quot;: -1,</span><br><span class="line">    &quot;tomatoes.viewer.rating&quot;: -1,</span><br><span class="line">    &quot;title&quot;: -1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  &quot;$skip&quot;: 24</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  &quot;$limit&quot;: 1</span><br><span class="line">&#125;])</span><br></pre></td></tr></table></figure></li><li><p>综合实例<br>计算每部可选语言是英语的电影的平均评分，而且 imdb.rating 至少为 1，imdb.votes 至少为 1，并且该电影于 1990 年或之后发行。需要重新规范化 imdb.votes，公式如下：<br>scaled_votes = 1 + 9 * ((x - x_min) / (x_max - x_min))<br>x_max = 1521105<br>x_min = 5<br>x = imdb.votes<br>normalized_rating = average(scaled_votes, imdb.rating)<br>哪部电影的 normalized_rating 最低？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">聚合查询如下：</span><br><span class="line">db.movies.aggregate([</span><br><span class="line">  &#123;</span><br><span class="line">    $match: &#123;</span><br><span class="line">      year: &#123; $gte: 1990 &#125;,</span><br><span class="line">      languages: &#123; $in: [&quot;English&quot;] &#125;,</span><br><span class="line">      &quot;imdb.votes&quot;: &#123; $gte: 1 &#125;,</span><br><span class="line">      &quot;imdb.rating&quot;: &#123; $gte: 1 &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    $project: &#123;</span><br><span class="line">      _id: 0,</span><br><span class="line">      title: 1,</span><br><span class="line">      &quot;imdb.rating&quot;: 1,</span><br><span class="line">      &quot;imdb.votes&quot;: 1,</span><br><span class="line">      normalized_rating: &#123;</span><br><span class="line">        $avg: [</span><br><span class="line">          &quot;$imdb.rating&quot;,</span><br><span class="line">          &#123;</span><br><span class="line">            $add: [</span><br><span class="line">              1,</span><br><span class="line">              &#123;</span><br><span class="line">                $multiply: [</span><br><span class="line">                  9,</span><br><span class="line">                  &#123;</span><br><span class="line">                    $divide: [</span><br><span class="line">                      &#123; $subtract: [&quot;$imdb.votes&quot;, 5] &#125;,</span><br><span class="line">                      &#123; $subtract: [1521105, 5] &#125;</span><br><span class="line">                    ]</span><br><span class="line">                  &#125;</span><br><span class="line">                ]</span><br><span class="line">              &#125;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; $sort: &#123; normalized_rating: 1 &#125; &#125;,</span><br><span class="line">  &#123; $limit: 1 &#125;</span><br><span class="line">])</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mongodb aggregation 基础。&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://blog.master-ss.cn/categories/database/"/>
    
    
  </entry>
  
  <entry>
    <title>chrome 调试小技巧</title>
    <link href="http://blog.master-ss.cn/tools/chrome/"/>
    <id>http://blog.master-ss.cn/tools/chrome/</id>
    <published>2019-10-13T13:02:17.187Z</published>
    <updated>2019-10-13T13:36:03.330Z</updated>
    
    <content type="html"><![CDATA[<p>最近又学到了一些 chrome 调试的小技巧，赶紧记录下来。<br><a id="more"></a> </p><h3 id="一、说明"><a href="#一、说明" class="headerlink" title="一、说明"></a>一、说明</h3><ul><li>快速切换文件</li><li>在源代码中搜索</li><li>强制改变元素状态（方便查看不同状态下元素的样式）</li></ul><h3 id="二、快速切换文件"><a href="#二、快速切换文件" class="headerlink" title="二、快速切换文件"></a>二、快速切换文件</h3><p>如果查找每个文件，一般都是打开控制台，在 source 控制面板里面一个一个去找，看下面的图就应该知道，这么多文件，你都不知道在哪个目录下面，然后就只能一个一个点开看</p><p><img src="/assets/tools/chrome/source.png"></p><p>后来才发现原来按 Ctrl+P（cmd+p on mac）,就能快速搜寻和打开你项目的文件。</p><p><img src="/assets/tools/chrome/search-file.gif"></p><h3 id="三、在源代码中搜索"><a href="#三、在源代码中搜索" class="headerlink" title="三、在源代码中搜索"></a>三、在源代码中搜索</h3><p>大家都知道如果在要在 Elements 查看源码，只要定位到 Elements 面板，然后按 ctrl+f 就可以了</p><p><img src="/assets/tools/chrome/search-code.png"></p><p>可是如果你希望在源代码中搜索要怎么办呢？在页面已经加载的文件中搜寻一个特定的字符串，快捷键是 Ctrl+Shift+F (Cmd+Opt+F)，这种搜寻方式还支持正则表达式哦</p><p><img src="/assets/tools/chrome/search-sourcecode.png"></p><h3 id="四、强制改变元素状态"><a href="#四、强制改变元素状态" class="headerlink" title="四、强制改变元素状态"></a>四、强制改变元素状态</h3><p>chrome 控制台有一个可以模拟 CSS 状态的功能，例如元素的 hover 和 focus，可以很容易的改变元素样式。在 CSS 编辑器中可以利用这个功能查看不同状态下元素的样式，相信这个功能对于模仿别人界面的前端爱好者来说是非常实用的。</p><p><img src="/assets/tools/chrome/dom-status.gif"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近又学到了一些 chrome 调试的小技巧，赶紧记录下来。&lt;br&gt;
    
    </summary>
    
      <category term="tools" scheme="http://blog.master-ss.cn/categories/tools/"/>
    
    
  </entry>
  
  <entry>
    <title>本机字体检测</title>
    <link href="http://blog.master-ss.cn/project/font/"/>
    <id>http://blog.master-ss.cn/project/font/</id>
    <published>2019-09-29T09:26:51.200Z</published>
    <updated>2019-09-29T09:44:21.625Z</updated>
    
    <content type="html"><![CDATA[<p>前端时间做过一个关于字体检测项目，现在做下总结，主要用于在本机检测某字体是否安装。<br><a id="more"></a> </p><h3 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">function isSupportFontFamily(f) &#123;</span><br><span class="line">  if (typeof f !== &apos;string&apos;) &#123;</span><br><span class="line">    return false</span><br><span class="line">  &#125;</span><br><span class="line">  var h = &apos;Arial&apos;</span><br><span class="line">  if (f.toLowerCase() == h.toLowerCase()) &#123;</span><br><span class="line">    return true</span><br><span class="line">  &#125;</span><br><span class="line">  var e = &apos;a&apos;</span><br><span class="line">  var d = 100</span><br><span class="line">  var a = 100; var i = 100</span><br><span class="line">  var c = document.createElement(&apos;canvas&apos;)</span><br><span class="line">  var b = c.getContext(&apos;2d&apos;)</span><br><span class="line">  c.width = a</span><br><span class="line">  c.height = i</span><br><span class="line">  b.textAlign = &apos;center&apos;</span><br><span class="line">  b.fillStyle = &apos;black&apos;</span><br><span class="line">  b.textBaseline = &apos;middle&apos;</span><br><span class="line">  var g = function (j) &#123;</span><br><span class="line">    b.clearRect(0, 0, a, i)</span><br><span class="line">    b.font = d + &apos;px &apos; + j + &apos;, &apos; + h</span><br><span class="line">    b.fillText(e, a / 2, i / 2)</span><br><span class="line">    var k = b.getImageData(0, 0, a, i).data</span><br><span class="line">    return [].slice.call(k).filter(function (l) &#123; return l != 0 &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">  return g(h).join(&apos;&apos;) !== g(f).join(&apos;&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接上代码，很简单一个方法，传入字体名称，判断本机是否已经安装该字体。</p><h3 id="二、说明"><a href="#二、说明" class="headerlink" title="二、说明"></a>二、说明</h3><h4 id="2-1、语法"><a href="#2-1、语法" class="headerlink" title="2.1、语法"></a>2.1、语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isSupportFontFamily(fontFamily)</span><br></pre></td></tr></table></figure><p>其中 fontFamily 参数是必须的，为 CSS 中 font-family 设置的 web 可识别的字体名称，例如宋体 ‘simsun’，微软雅黑 ‘Microsoft Yahei’ 等。<br>例如，我们要判断用户的操作系统是否安装了微软雅黑字体，可以这么处理：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// isSupportMicrosoftYahei 为 true 或者 false</span><br><span class="line">var isSupportMicrosoftYahei = isSupportFontFamily(&apos;Microsoft Yahei&apos;)</span><br></pre></td></tr></table></figure></p><h4 id="2-2、原理"><a href="#2-2、原理" class="headerlink" title="2.2、原理"></a>2.2、原理</h4><p>根据用户设置的字体将某一个字符 ‘a’ 绘制在 canvas 上，并提取像素信息，然后和默认字体 ‘Arial’ 进行比对。如果像素不一致，说明字体生效，反之说明字体不生效。<br>兼容 IE9+，以及其他所有现代浏览器。</p><h4 id="2-3、部分字体中英文名称"><a href="#2-3、部分字体中英文名称" class="headerlink" title="2.3、部分字体中英文名称"></a>2.3、部分字体中英文名称</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Times New Roman&apos;, &apos;en_name&apos;: &apos;Times New Roman&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Zhiyong Elegant&apos;, &apos;en_name&apos;: &apos;Zhiyong Elegant&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;ZhiyongWrite&apos;, &apos;en_name&apos;: &apos;ZhiyongWrite&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;仿宋&apos;, &apos;en_name&apos;: &apos;FangSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪贤二体&apos;, &apos;en_name&apos;: &apos;XianErTi&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;黑体&apos;, &apos;en_name&apos;: &apos;SimHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;楷体&apos;, &apos;en_name&apos;: &apos;KaiTi&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;濑户字体&apos;, &apos;en_name&apos;: &apos;SetoFont&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;隶书&apos;, &apos;en_name&apos;: &apos;LiSu&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;沐瑶软笔手写体&apos;, &apos;en_name&apos;: &apos;Muyao-Softbrush&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;庞门正道标题体&apos;, &apos;en_name&apos;: &apos;PangMenZhengDao&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;锐字真言体&apos;, &apos;en_name&apos;: &apos;ZhenyanGB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;手书体&apos;, &apos;en_name&apos;: &apos;ShouShuti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;思源黑体&apos;, &apos;en_name&apos;: &apos;Source Han Sans CN&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;思源柔黑体&apos;, &apos;en_name&apos;: &apos;Gen Jyuu Gothic&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;思源宋体&apos;, &apos;en_name&apos;: &apos;Source Han Serif CN&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;思源真黑体&apos;, &apos;en_name&apos;: &apos;Gen Shin Gothic&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;宋体&apos;, &apos;en_name&apos;: &apos;SimSun&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;新宋体&apos;, &apos;en_name&apos;: &apos;NSimSun&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;杨任东竹石体&apos;, &apos;en_name&apos;: &apos;YRDZST&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;幼圆&apos;, &apos;en_name&apos;: &apos;YouYuan&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;源流明体&apos;, &apos;en_name&apos;: &apos;GenRynMin TW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;源漾明体&apos;, &apos;en_name&apos;: &apos;GenYoMin TW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;源云明体&apos;, &apos;en_name&apos;: &apos;GenWanMin TW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷高端黑&apos;, &apos;en_name&apos;: &apos;huxiaobo-gdh&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷酷黑&apos;, &apos;en_name&apos;: &apos;HuXiaoBo-KuHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷快乐体&apos;, &apos;en_name&apos;: &apos;HappyZcool&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷快乐体新版&apos;, &apos;en_name&apos;: &apos;HappyZco6&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷庆科黄油体&apos;, &apos;en_name&apos;: &apos;zcoolqingkehuangyouti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷文艺体&apos;, &apos;en_name&apos;: &apos;zcoolwenyiti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;站酷小薇logo体&apos;, &apos;en_name&apos;: &apos;xiaowei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;装甲明朝体&apos;, &apos;en_name&apos;: &apos;SoukouMincho&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Abril&apos;, &apos;en_name&apos;: &apos;Abril&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Abril Titling&apos;, &apos;en_name&apos;: &apos;Abril Titling&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Adelle&apos;, &apos;en_name&apos;: &apos;Adelle&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Adelle Sans&apos;, &apos;en_name&apos;: &apos;Adelle Sans&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Adelle Sans DEV&apos;, &apos;en_name&apos;: &apos;Adelle Sans&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Adobe Gothic Std B&apos;, &apos;en_name&apos;: &apos;Adobe Gothic Std B&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Adobe Myungjo Std M&apos;, &apos;en_name&apos;: &apos;Adobe Myungjo Std M&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Alize&apos;, &apos;en_name&apos;: &apos;Alize&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Arial Unicode MS&apos;, &apos;en_name&apos;: &apos;Arial&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Athelas&apos;, &apos;en_name&apos;: &apos;Athelas&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;AwanZaman&apos;, &apos;en_name&apos;: &apos;AwanZaman&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Bely&apos;, &apos;en_name&apos;: &apos;BELY&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Bree&apos;, &apos;en_name&apos;: &apos;Bree&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Bree Serif&apos;, &apos;en_name&apos;: &apos;Bree Serif&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Capitolium2&apos;, &apos;en_name&apos;: &apos;Capitolium2&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Century Gothic&apos;, &apos;en_name&apos;: &apos;Century Gothic&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Cora&apos;, &apos;en_name&apos;: &apos;Cora&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Coranto 2&apos;, &apos;en_name&apos;: &apos;Coranto 2&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Crete&apos;, &apos;en_name&apos;: &apos;Crete&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Ebony&apos;, &apos;en_name&apos;: &apos;Ebony&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Edita&apos;, &apos;en_name&apos;: &apos;Edita&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Eskapade&apos;, &apos;en_name&apos;: &apos;Eskapade&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Essay&apos;, &apos;en_name&apos;: &apos;Essay Text&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Fino&apos;, &apos;en_name&apos;: &apos;FINO&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Fino Stencil&apos;, &apos;en_name&apos;: &apos;FINO STENCIL&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Garalda&apos;, &apos;en_name&apos;: &apos;Garalda&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Givry&apos;, &apos;en_name&apos;: &apos;Givry&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Helvetica&apos;, &apos;en_name&apos;: &apos;Helvetica&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Iro Sans&apos;, &apos;en_name&apos;: &apos;IRO SANS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Iskra&apos;, &apos;en_name&apos;: &apos;Iskra&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Karmina&apos;, &apos;en_name&apos;: &apos;Karmina&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Karmina Sans&apos;, &apos;en_name&apos;: &apos;Karmina Sans&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;LFT Etica&apos;, &apos;en_name&apos;: &apos;LFT Etica&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Lipa Agate&apos;, &apos;en_name&apos;: &apos;Lipa Agate&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Lisbeth&apos;, &apos;en_name&apos;: &apos;Lisbeth&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Maiola&apos;, &apos;en_name&apos;: &apos;Maiola&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Marco&apos;, &apos;en_name&apos;: &apos;Marco&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Noam&apos;, &apos;en_name&apos;: &apos;NOAM&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Noort&apos;, &apos;en_name&apos;: &apos;NOORT&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Pollen&apos;, &apos;en_name&apos;: &apos;Pollen&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Protipo&apos;, &apos;en_name&apos;: &apos;PROTIPO&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Ronnia&apos;, &apos;en_name&apos;: &apos;Ronnia&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Sanserata&apos;, &apos;en_name&apos;: &apos;Sanserata&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Serifa®&apos;, &apos;en_name&apos;: &apos;Serifa&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Serpentine™&apos;, &apos;en_name&apos;: &apos;Serpentine&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Sirba&apos;, &apos;en_name&apos;: &apos;Sirba&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Soleil&apos;, &apos;en_name&apos;: &apos;Soleil&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Tablet Gothic&apos;, &apos;en_name&apos;: &apos;Tablet Gothic&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;冬青黑体简&apos;, &apos;en_name&apos;: &apos;Hiragino Sans GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正报宋简体&apos;, &apos;en_name&apos;: &apos;FZBaoSong4S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正本墨绪圆体&apos;, &apos;en_name&apos;: &apos;FZBMXY JW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兵马俑体&apos;, &apos;en_name&apos;: &apos;FZBingMaYongTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正博雅宋简体&apos;, &apos;en_name&apos;: &apos;FZBoYaSongS-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正彩云简体&apos;, &apos;en_name&apos;: &apos;FZCaiYun9S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正藏意汉体简体&apos;, &apos;en_name&apos;: &apos;FZZangYiHanTiS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正超粗黑简体&apos;, &apos;en_name&apos;: &apos;FZChaoCuHei-S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正超重要体&apos;, &apos;en_name&apos;: &apos;FzCHAOZYTJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正粗活意简体&apos;, &apos;en_name&apos;: &apos;FZCuHuoYi-M25S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正粗倩简体&apos;, &apos;en_name&apos;: &apos;FZCuQian7S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正粗宋简体&apos;, &apos;en_name&apos;: &apos;FZCuSong9S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正粗谭黑简体&apos;, &apos;en_name&apos;: &apos;FZTanHeiS-B-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正粗雅宋简体&apos;, &apos;en_name&apos;: &apos;FZYaSongS-B-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正粗圆简体&apos;, &apos;en_name&apos;: &apos;FZCuYuan3S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正大标宋简体&apos;, &apos;en_name&apos;: &apos;FZDaBiaoSong6S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正大黑简体&apos;, &apos;en_name&apos;: &apos;FZDaHei2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正大魏体简体&apos;, &apos;en_name&apos;: &apos;FZDaWeiTiS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正邓黑隶&apos;, &apos;en_name&apos;: &apos;FZDengHLJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正方俊黑&apos;, &apos;en_name&apos;: &apos;FZFangJunHeiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正仿宋简体&apos;, &apos;en_name&apos;: &apos;FZFangSong2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正飞跃体&apos;, &apos;en_name&apos;: &apos;FZFeiYueTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正复古粗宋&apos;, &apos;en_name&apos;: &apos;FOUNDERTYPE&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正古隶简体&apos;, &apos;en_name&apos;: &apos;FZGuLi2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正管峻楷书&apos;, &apos;en_name&apos;: &apos;FZGUANJUNKAISHUS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正汉真广标简体&apos;, &apos;en_name&apos;: &apos;FZHanZhenGuangBiaoS-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正行楷简体&apos;, &apos;en_name&apos;: &apos;FZXingKai4S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正黑体简体&apos;, &apos;en_name&apos;: &apos;FZHS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正琥珀简体&apos;, &apos;en_name&apos;: &apos;FZHuPo4S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正华隶简体&apos;, &apos;en_name&apos;: &apos;FZHuaLi4S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正黄草简体&apos;, &apos;en_name&apos;: &apos;FZHuangCao9S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正活龙体&apos;, &apos;en_name&apos;: &apos;FZHuoLTJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正记忆的碎片体&apos;, &apos;en_name&apos;: &apos;FZJiYiDeSuiPianTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正剪纸简体&apos;, &apos;en_name&apos;: &apos;FZJianZhi-M23S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正静蕾简体&apos;, &apos;en_name&apos;: &apos;FZJingLeiS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正卡通简体&apos;, &apos;en_name&apos;: &apos;FZKaTong9S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正楷体简体&apos;, &apos;en_name&apos;: &apos;FZKai3S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正康体简体&apos;, &apos;en_name&apos;: &apos;FZKangTi7S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正克书皇榜体&apos;, &apos;en_name&apos;: &apos;FZKeShuHuangBang&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭超细黑简体&apos;, &apos;en_name&apos;: &apos;FZLanTingHeiS-UL-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭粗黑简体&apos;, &apos;en_name&apos;: &apos;FZLTCHJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭黑简体&apos;, &apos;en_name&apos;: &apos;FZLanTingHeiS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭特黑简体&apos;, &apos;en_name&apos;: &apos;FZLanTingHeiS-H-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭细黑_GBK&apos;, &apos;en_name&apos;: &apos;FZLanTingHei-L-GBK&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭细黑_GBK-M&apos;, &apos;en_name&apos;: &apos;FZLanTingHei-L-GBK-M&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭纤黑繁体&apos;, &apos;en_name&apos;: &apos;FZLanTingHeiT-EL-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭纤黑简体&apos;, &apos;en_name&apos;: &apos;FZLanTingHeiS-EL-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭圆简体&apos;, &apos;en_name&apos;: &apos;FZLanTingYuanS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正兰亭圆简体_纤&apos;, &apos;en_name&apos;: &apos;FZLanTingYuanS-EL-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正隶变简体&apos;, &apos;en_name&apos;: &apos;FZLiBian2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正隶二简体&apos;, &apos;en_name&apos;: &apos;FZLiShu II6S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正隶书简体&apos;, &apos;en_name&apos;: &apos;FZLiSS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正流行体简体&apos;, &apos;en_name&apos;: &apos;FZLiuXingTi-M26S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正美黑简体&apos;, &apos;en_name&apos;: &apos;FZMeiHei7S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正萌软体&apos;, &apos;en_name&apos;: &apos;FZMengRuanTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正萌艺体&apos;, &apos;en_name&apos;: &apos;FZMengYiTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正喵呜简体&apos;, &apos;en_name&apos;: &apos;FZMiaoWuS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正喵呜体&apos;, &apos;en_name&apos;: &apos;FZMiaoWuS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正胖头鱼简体&apos;, &apos;en_name&apos;: &apos;FZPangTouYu-M24S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正胖娃简体&apos;, &apos;en_name&apos;: &apos;FZPangWa8S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正品尚粗黑简体&apos;, &apos;en_name&apos;: &apos;FZPinShangHeiS-B-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正品尚黑简体&apos;, &apos;en_name&apos;: &apos;FZPinShangHeiS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正平和简体&apos;, &apos;en_name&apos;: &apos;FZPingHeS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正奇妙体&apos;, &apos;en_name&apos;: &apos;FZQiMTJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正启笛简体&apos;, &apos;en_name&apos;: &apos;FZQiDiS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正启体简体&apos;, &apos;en_name&apos;: &apos;FZQiTi4S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正清仿宋系列&apos;, &apos;en_name&apos;: &apos;FZQingFangSongS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正晴朗体&apos;, &apos;en_name&apos;: &apos;FZQINGLANGTIS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正趣黑&apos;, &apos;en_name&apos;: &apos;FZQuHJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正锐正圆&apos;, &apos;en_name&apos;: &apos;FZRuiZhengYuanS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正尚酷简体&apos;, &apos;en_name&apos;: &apos;FZShangKuS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正尚艺体&apos;, &apos;en_name&apos;: &apos;FZShangYiTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正少儿简体&apos;, &apos;en_name&apos;: &apos;FZShaoErS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正瘦金书简体&apos;, &apos;en_name&apos;: &apos;FZShouJinShu-S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正书宋&apos;, &apos;en_name&apos;: &apos;FZSS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正书宋简体&apos;, &apos;en_name&apos;: &apos;FZShuSoS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正舒体&apos;, &apos;en_name&apos;: &apos;FZShuTi&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正舒体简体&apos;, &apos;en_name&apos;: &apos;FZShuTi5S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正水黑简体&apos;, &apos;en_name&apos;: &apos;FZShuiHei-S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正水云简体&apos;, &apos;en_name&apos;: &apos;FZShuiYunS-EB-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正水柱简体&apos;, &apos;en_name&apos;: &apos;FZShuiZhu8S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正宋黑简体&apos;, &apos;en_name&apos;: &apos;FZSongHei7S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正宋三简体&apos;, &apos;en_name&apos;: &apos;FZSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正宋一简体&apos;, &apos;en_name&apos;: &apos;FZSongYi3S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正苏新诗小爨&apos;, &apos;en_name&apos;: &apos;FZSuXinShiXiaoCuanS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正孙拥声简体&apos;, &apos;en_name&apos;: &apos;FZSunYongShengS-R-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正淘乐简体&apos;, &apos;en_name&apos;: &apos;FZTLJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正玩伴体系列&apos;, &apos;en_name&apos;: &apos;FZWanBTJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正魏碑简体&apos;, &apos;en_name&apos;: &apos;FZWeiBei3S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正细等线简体&apos;, &apos;en_name&apos;: &apos;FZXiDengXian6S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正细黑一简体&apos;, &apos;en_name&apos;: &apos;FZXiHei I8S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正细倩简体&apos;, &apos;en_name&apos;: &apos;FZXiQian5S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正细珊瑚简体&apos;, &apos;en_name&apos;: &apos;FZXiShanHu3S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正细圆简体&apos;, &apos;en_name&apos;: &apos;FZXiYuS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正仙阵体&apos;, &apos;en_name&apos;: &apos;FZXianZhenTiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正祥隶简体&apos;, &apos;en_name&apos;: &apos;FZXiangLi7S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正小标宋简体&apos;, &apos;en_name&apos;: &apos;FZXiaoBiaoSong5S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正小篆体&apos;, &apos;en_name&apos;: &apos;FZXiaoZhuanTi3T&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正新报宋简体&apos;, &apos;en_name&apos;: &apos;FZNew BaoSong2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正新舒体简体&apos;, &apos;en_name&apos;: &apos;FZNew ShuTi8S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正秀麗&apos;, &apos;en_name&apos;: &apos;FZXiuLiB3&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正雅士黑&apos;, &apos;en_name&apos;: &apos;FZYaShiHeiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正颜宋简体_粗&apos;, &apos;en_name&apos;: &apos;FZYanSongS-B-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正姚体&apos;, &apos;en_name&apos;: &apos;FZYaoti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正姚体简体&apos;, &apos;en_name&apos;: &apos;FZYaoTi6S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正艺黑简体&apos;, &apos;en_name&apos;: &apos;FZYiHei-S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正硬笔行书简体&apos;, &apos;en_name&apos;: &apos;FZYingBiXingShu6S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正硬笔楷书简体&apos;, &apos;en_name&apos;: &apos;FZYingBiKaiShu5S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正悠宋简可变&apos;, &apos;en_name&apos;: &apos;FZYouSJ VF WT&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正幼线简体&apos;, &apos;en_name&apos;: &apos;FZYouXian9S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正韵动特黑简体&apos;, &apos;en_name&apos;: &apos;FZYunDongHeiS-H-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正赞美体&apos;, &apos;en_name&apos;: &apos;FZZANMTJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正毡笔黑简体&apos;, &apos;en_name&apos;: &apos;FZZhanBiHei-M22S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正正粗黑简体&apos;, &apos;en_name&apos;: &apos;FZZhengHeiS-B-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正正大黑简体&apos;, &apos;en_name&apos;: &apos;FZZhengHeiS-EB-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正正纤黑简体&apos;, &apos;en_name&apos;: &apos;FZZhengHeiS-EL-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正正准黑简体&apos;, &apos;en_name&apos;: &apos;FZZhengHeiS-M-GB&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正稚艺简体&apos;, &apos;en_name&apos;: &apos;FZZhiYi2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正中等线简体&apos;, &apos;en_name&apos;: &apos;FZZhongDengXian7S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正中倩简体&apos;, &apos;en_name&apos;: &apos;FZZhongQian6S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正准圆简体&apos;, &apos;en_name&apos;: &apos;FZZhunYuan2S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-曾柏求排笔&apos;, &apos;en_name&apos;: &apos;FZZJ-ZBQPBJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-陈光池楷书&apos;, &apos;en_name&apos;: &apos;FZZJ-CGCKSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-顾建平楷书&apos;, &apos;en_name&apos;: &apos;FZZJ-GJPKSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-顾建平隶书&apos;, &apos;en_name&apos;: &apos;FZZJ-GJPLSJF&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-顧建平篆書&apos;, &apos;en_name&apos;: &apos;FZZJ-GJPZSFU&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-豪放行书简体&apos;, &apos;en_name&apos;: &apos;FZZJ-HFXSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-李凤武行书&apos;, &apos;en_name&apos;: &apos;FZZJ-LFWXSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-刘宏楷书&apos;, &apos;en_name&apos;: &apos;FZZJ-LHKSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-刘毅硬笔行书&apos;, &apos;en_name&apos;: &apos;FZZJ-LYYBXSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-刘毅硬笔楷书&apos;, &apos;en_name&apos;: &apos;FZZJ-LYYBKSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-柳正枢行楷&apos;, &apos;en_name&apos;: &apos;FZZJ-LZSXKJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-清代碑体&apos;, &apos;en_name&apos;: &apos;FZZJ-QDBTJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-陶建华魏碑&apos;, &apos;en_name&apos;: &apos;FZZJ-TJHWBJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-童体硬笔字体&apos;, &apos;en_name&apos;: &apos;FZZJ-TTYBFONT&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-吴进行书&apos;, &apos;en_name&apos;: &apos;FZZJ-WJXSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-严祖喜行楷&apos;, &apos;en_name&apos;: &apos;FZZJ-YZXXKJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-颜振东楷&apos;, &apos;en_name&apos;: &apos;FZZJ-YZDKJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-叶根友特楷&apos;, &apos;en_name&apos;: &apos;YEGENYOUTEKAI&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-张二魁硬楷&apos;, &apos;en_name&apos;: &apos;FZZJ-ZEKYKJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-张亮硬笔行书&apos;, &apos;en_name&apos;: &apos;FZZJ-ZLYBXSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-长江行书&apos;, &apos;en_name&apos;: &apos;FZZJ-CJXSJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-周密行楷&apos;, &apos;en_name&apos;: &apos;FZZJ-ZMXKJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-禚效锋行草&apos;, &apos;en_name&apos;: &apos;FZZJ-ZXFXCJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正字迹-自强魏楷体&apos;, &apos;en_name&apos;: &apos;FZZJ-ZQWKJW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;方正综艺简体&apos;, &apos;en_name&apos;: &apos;FZZongYi5S&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪PP体简&apos;, &apos;en_name&apos;: &apos;HYPPTiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪程行简&apos;, &apos;en_name&apos;: &apos;HYChengXingJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪大黑简&apos;, &apos;en_name&apos;: &apos;HYDaHeiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪大宋简&apos;, &apos;en_name&apos;: &apos;HYDaSongJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪蝶语简体&apos;, &apos;en_name&apos;: &apos;HYDieYuJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪方叠体检&apos;, &apos;en_name&apos;: &apos;HYFangDieJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪仿宋简&apos;, &apos;en_name&apos;: &apos;HYFangSongJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪刚艺体&apos;, &apos;en_name&apos;: &apos;HYGangYiTi&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪行楷简&apos;, &apos;en_name&apos;: &apos;HYXingKaiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪黑荔枝&apos;, &apos;en_name&apos;: &apos;HYHeiLiZhiTiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪家书简&apos;, &apos;en_name&apos;: &apos;HYJiaShuJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪楷体&apos;, &apos;en_name&apos;: &apos;HYKaiti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪楷体简&apos;, &apos;en_name&apos;: &apos;HYKaiTiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪乐喵体简&apos;, &apos;en_name&apos;: &apos;HYLeMiaoTi&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪立黑简&apos;, &apos;en_name&apos;: &apos;HYLiHeiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪菱心体简&apos;, &apos;en_name&apos;: &apos;HYLingXinJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪漫步体间&apos;, &apos;en_name&apos;: &apos;HYManBuJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪旗黑&apos;, &apos;en_name&apos;: &apos;HYQiheiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪旗黑&apos;, &apos;en_name&apos;: &apos;HYQiheiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪旗黑&apos;, &apos;en_name&apos;: &apos;HYQiheiS&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪尚巍手书W&apos;, &apos;en_name&apos;: &apos;HYShangWeiShouShuW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪书魂体检&apos;, &apos;en_name&apos;: &apos;HYShuHunJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪娃娃纂简&apos;, &apos;en_name&apos;: &apos;HYWaWaZhuanJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪小麦体&apos;, &apos;en_name&apos;: &apos;HYXiaoMaiTiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪醒示体简&apos;, &apos;en_name&apos;: &apos;HYXingShiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪秀英体简&apos;, &apos;en_name&apos;: &apos;HYXiuYingJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪雪峰体简&apos;, &apos;en_name&apos;: &apos;HYXueFengJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪雪君体简&apos;, &apos;en_name&apos;: &apos;HYXueJunJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪丫丫体简&apos;, &apos;en_name&apos;: &apos;HYYaYaJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪雅酷黑W&apos;, &apos;en_name&apos;: &apos;HYYaKuHeiW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪长美黑简&apos;, &apos;en_name&apos;: &apos;HYChangMeiHeiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪中等线简&apos;, &apos;en_name&apos;: &apos;HYZhongDengXianJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪中黑简&apos;, &apos;en_name&apos;: &apos;HYZhongHeiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪中隶书简&apos;, &apos;en_name&apos;: &apos;HYZhongLiShuJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪中宋简&apos;, &apos;en_name&apos;: &apos;HYZhongSongJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;汉仪综艺体简&apos;, &apos;en_name&apos;: &apos;HYZongYiJ&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华康翩翩体&apos;, &apos;en_name&apos;: &apos;Hanzipen SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华康手札体&apos;, &apos;en_name&apos;: &apos;Hannotate SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文彩云&apos;, &apos;en_name&apos;: &apos;STCaiyun&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文仿宋&apos;, &apos;en_name&apos;: &apos;STFangsong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文行楷&apos;, &apos;en_name&apos;: &apos;STXingkai&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文黑体&apos;, &apos;en_name&apos;: &apos;STHeiti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文琥珀&apos;, &apos;en_name&apos;: &apos;STHupo&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文楷体&apos;, &apos;en_name&apos;: &apos;STKaiti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文隶书&apos;, &apos;en_name&apos;: &apos;STLiti&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文宋体&apos;, &apos;en_name&apos;: &apos;STSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文细黑&apos;, &apos;en_name&apos;: &apos;STXihei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文新魏&apos;, &apos;en_name&apos;: &apos;STXinwei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;华文中宋&apos;, &apos;en_name&apos;: &apos;STZhongsong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;兰亭黑-简&apos;, &apos;en_name&apos;: &apos;Lantinghei SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;苹方&apos;, &apos;en_name&apos;: &apos;PingFang SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;微软雅黑&apos;, &apos;en_name&apos;: &apos;Microsoft Yahei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;微软正黑体&apos;, &apos;en_name&apos;: &apos;Microsoft JhengHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;小美体&apos;, &apos;en_name&apos;: &apos;XIAOMEI JW&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房版&apos;, &apos;en_name&apos;: &apos;RTWS BanHe&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房博黑&apos;, &apos;en_name&apos;: &apos;MF BoHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房典黑&apos;, &apos;en_name&apos;: &apos;MF DianHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房鼎黑体&apos;, &apos;en_name&apos;: &apos;MF DingHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房黄金时代&apos;, &apos;en_name&apos;: &apos;MF TheGoldenEra&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房佳黑&apos;, &apos;en_name&apos;: &apos;MF JiaHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房坚黑&apos;, &apos;en_name&apos;: &apos;MF JianHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房锦宋体&apos;, &apos;en_name&apos;: &apos;MF JinSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房劲&apos;, &apos;en_name&apos;: &apos;RTWS JinHe&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房郎&apos;, &apos;en_name&apos;: &apos;RTWS LangSon&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房力黑&apos;, &apos;en_name&apos;: &apos;MF LiHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房力黑体&apos;, &apos;en_name&apos;: &apos;MF LiHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房凌黑&apos;, &apos;en_name&apos;: &apos;MF LingHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房明黑&apos;, &apos;en_name&apos;: &apos;MF MingHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房品宋&apos;, &apos;en_name&apos;: &apos;MF PinSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房启黑体&apos;, &apos;en_name&apos;: &apos;MF QiHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房形黑&apos;, &apos;en_name&apos;: &apos;MF XingHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房形黑体&apos;, &apos;en_name&apos;: &apos;MF XingHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房雅&apos;, &apos;en_name&apos;: &apos;RTWS YaYua&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房元黑体&apos;, &apos;en_name&apos;: &apos;MF YuanHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房云宋体&apos;, &apos;en_name&apos;: &apos;MF YunSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房哲黑&apos;, &apos;en_name&apos;: &apos;MF ZheHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房臻宋体&apos;, &apos;en_name&apos;: &apos;MF ZhenSong&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;造字工房卓黑体&apos;, &apos;en_name&apos;: &apos;MF ZhuoHei&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;Tahoma&apos;, &apos;en_name&apos;: &apos;tahoma&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;行楷-简&apos;, &apos;en_name&apos;: &apos;Xingkai SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;宋体-简&apos;, &apos;en_name&apos;: &apos;Songti SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;娃娃体-简&apos;, &apos;en_name&apos;: &apos;Wawati SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;魏碑-简&apos;, &apos;en_name&apos;: &apos;Weibei SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;雅痞-简&apos;, &apos;en_name&apos;: &apos;Yapi SC&apos; &#125;,</span><br><span class="line">  &#123; &apos;cn_name&apos;: &apos;圆体-简&apos;, &apos;en_name&apos;: &apos;Yuanti SC&apos; &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端时间做过一个关于字体检测项目，现在做下总结，主要用于在本机检测某字体是否安装。&lt;br&gt;
    
    </summary>
    
      <category term="project" scheme="http://blog.master-ss.cn/categories/project/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb 之查询操作符</title>
    <link href="http://blog.master-ss.cn/database/mongo3/"/>
    <id>http://blog.master-ss.cn/database/mongo3/</id>
    <published>2019-08-12T10:03:01.520Z</published>
    <updated>2019-08-15T07:34:41.577Z</updated>
    
    <content type="html"><![CDATA[<p>介绍 mongodb 查询时常用的操作符。<br><a id="more"></a> </p><h3 id="一、比较操作符"><a href="#一、比较操作符" class="headerlink" title="一、比较操作符"></a>一、比较操作符</h3><ul><li><p>$in<br>包含在数组中<br>db.movieDetails.find({rated: {$in: [“G”, “PG”, “PG-13”]}}, {_id: 0, title: 1, rated: 1}).pretty()</p></li><li><p>$gte &amp; $lt<br>$gte 大于等于（greater than or equal to）；$lt 小于（less than）<br>db.movieDetails.find({runtime: {$gte: 90, $lt: 120}}, {_id: 0, title: 1, runtime: 1})</p></li><li><p>$ne<br>不等于，包括完全不包含这个字段的情况<br>db.movieDetails.find({rated: {$ne: “UNRATED”}}, {_id: 0, title: 1, rated: 1})</p></li></ul><h3 id="二、元素操作符"><a href="#二、元素操作符" class="headerlink" title="二、元素操作符"></a>二、元素操作符</h3><ul><li><p>$exists<br>查找某个字段是否存在<br>db.moviesDetails.find({mpaaRating: {$exists: true}})<br>null 会查找值为 null 或不存在该字段的文档<br>db.movieDetails.find({mpaaRating: null})</p></li><li><p>$type<br>查看符合类型的文档<br>db.movies.find({viewerRating: {$type: “int”}}).pretty()</p></li></ul><h3 id="三、逻辑操作符"><a href="#三、逻辑操作符" class="headerlink" title="三、逻辑操作符"></a>三、逻辑操作符</h3><ul><li><p>$or<br>查看满足单个条件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.movieDetails.find(&#123;$or: [&#123;&quot;tomato.meter&quot;: &#123;$gt: 95&#125;&#125;,                               </span><br><span class="line">                            &#123;&quot;metacritic&quot;: &#123;$gt: 88&#125;&#125;]&#125;,</span><br><span class="line">                     &#123;_id: 0, title: 1, &quot;tomato.meter&quot;: 1, &quot;metacritic&quot;: 1&#125;)</span><br></pre></td></tr></table></figure></li><li><p>$and<br>查看同时满足多个条件，一般情况不需要，跟默认查询情况效果相同。但是可应用于多个条件限制在同一个字段上时，默认查询情况不能用重复的 key</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">db.movieDetails.find(&#123;$and: [&#123;&quot;metacritic&quot;: &#123;$ne: null&#125;&#125;,</span><br><span class="line">                             &#123;&quot;metacritic&quot;: &#123;$exists: true&#125;&#125;]&#125;,</span><br><span class="line">                          &#123;_id: 0, title: 1, &quot;metacritic&quot;: 1&#125;)</span><br><span class="line"></span><br><span class="line">// 能很好的查询值为 null 的情况，因为查询 null 包括值为 null 和键值对不存在的情况</span><br><span class="line">db.movieDetails.find(&#123;$and: [&#123;&quot;metacritic&quot;: null&#125;,</span><br><span class="line">                             &#123;&quot;metacritic&quot;: &#123;$exists: true&#125;&#125;]&#125;,</span><br><span class="line">                     &#123;_id: 0, title: 1, &quot;metacritic&quot;: 1&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="四、数组操作符"><a href="#四、数组操作符" class="headerlink" title="四、数组操作符"></a>四、数组操作符</h3><ul><li><p>$all<br>数组中的所有元素均出现文档值中，被包含关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.movieDetails.find(&#123;genres: &#123;$all: [&quot;Comedy&quot;, &quot;Crime&quot;, &quot;Drama&quot;]&#125;&#125;, </span><br><span class="line">                     &#123;_id: 0, title: 1, genres: 1&#125;).pretty()</span><br></pre></td></tr></table></figure></li><li><p>$size<br>查询符合指定长度数组的文档<br>db.movieDetails.find({countries: {$size: 1}}).pretty()</p></li><li><p>$elemMatch<br>遍历对象数组或二维数组中至少有一个对象或数组符合的文档；如果不使用 $elemMatch，则完全遍历，不考虑对象或数组为整体</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 二维数组 --&gt;</span><br><span class="line">&#123; _id: 1, results: [ 82, 85, 88 ] &#125;</span><br><span class="line">&#123; _id: 2, results: [ 75, 88, 89 ] &#125;</span><br><span class="line">&lt;!-- 数据查询 --&gt;</span><br><span class="line">db.scores.find(</span><br><span class="line">   &#123; results: &#123; $elemMatch: &#123; $gte: 80, $lt: 85 &#125; &#125; &#125;</span><br><span class="line">)</span><br><span class="line">&lt;!-- 返回结果：因为 82 既大于等于 80 又小于 85 --&gt;</span><br><span class="line">&#123; &quot;_id&quot; : 1, &quot;results&quot; : [ 82, 85, 88 ] &#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- 对象数组 --&gt;</span><br><span class="line">boxOffice: [ &#123; &quot;country&quot;: &quot;USA&quot;, &quot;revenue&quot;: 228.4 &#125;,</span><br><span class="line">             &#123; &quot;country&quot;: &quot;Australia&quot;, &quot;revenue&quot;: 19.6 &#125;,</span><br><span class="line">             &#123; &quot;country&quot;: &quot;UK&quot;, &quot;revenue&quot;: 33.9 &#125;,</span><br><span class="line">             &#123; &quot;country&quot;: &quot;Germany&quot;, &quot;revenue&quot;: 16.2 &#125;,</span><br><span class="line">             &#123; &quot;country&quot;: &quot;France&quot;, &quot;revenue&quot;: 19.8 &#125; ]</span><br><span class="line">db.movieDetails.find(&#123;boxOffice: &#123;$elemMatch: &#123;&quot;country&quot;: &quot;Germany&quot;, &quot;revenue&quot;: &#123;$gt: 16&#125;&#125;&#125;&#125;)</span><br></pre></td></tr></table></figure></li></ul><h3 id="五、评估操作符"><a href="#五、评估操作符" class="headerlink" title="五、评估操作符"></a>五、评估操作符</h3><ul><li><p>$regex<br>正则表达式匹配文档<br>db.movieDetails.find({“awards.text”: {$regex: /^Won.* /}}, {_id: 0, title: 1, “awards.text”: 1}).pretty()</p></li><li><p>$text<br>文本搜索匹配文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  $text:</span><br><span class="line">    &#123;</span><br><span class="line">      $search: &lt;string&gt;,</span><br><span class="line">      $language: &lt;string&gt;,</span><br><span class="line">      $caseSensitive: &lt;boolean&gt;,</span><br><span class="line">      $diacriticSensitive: &lt;boolean&gt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">db.articles.find( &#123; $text: &#123; $search: &quot;coffee&quot; &#125; &#125; )</span><br><span class="line">&lt;!-- 查询包含 bake、coffee、cake 的语句，甚至这些词的动词格式 --&gt;</span><br><span class="line">db.articles.find( &#123; $text: &#123; $search: &quot;bake coffee cake&quot; &#125; &#125; )</span><br><span class="line">&lt;!-- 查询确切 coffee shop 字符串 --&gt;</span><br><span class="line">db.articles.find( &#123; $text: &#123; $search: &quot;\&quot;coffee shop\&quot;&quot; &#125; &#125; )</span><br><span class="line">&lt;!-- 查询包含 bake，不包含 shop 的语句，甚至这些词的动词格式 --&gt;</span><br><span class="line">db.articles.find( &#123; $text: &#123; $search: &quot;coffee -shop&quot; &#125; &#125; )</span><br><span class="line">&lt;!-- $language 用来表达特定语言下的动词格式，标识为 none 为不识别动词 --&gt;</span><br><span class="line">&lt;!-- $caseSensitive 是否大小写敏感 --&gt;</span><br><span class="line">db.articles.find( &#123; $text: &#123; $search: &quot;Coffee&quot;, $caseSensitive: true &#125; &#125; )</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;介绍 mongodb 查询时常用的操作符。&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://blog.master-ss.cn/categories/database/"/>
    
    
  </entry>
  
  <entry>
    <title>mongodb 基础</title>
    <link href="http://blog.master-ss.cn/database/mongo2/"/>
    <id>http://blog.master-ss.cn/database/mongo2/</id>
    <published>2019-08-12T07:06:43.723Z</published>
    <updated>2019-10-21T09:43:00.608Z</updated>
    
    <content type="html"><![CDATA[<p>mongodb shell 安装和基础操作。<br><a id="more"></a> </p><h3 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h3><ul><li><p>安装 homebrew<br><code>/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;</code></p></li><li><p>安装 mongodb<br>brew install mongodb</p></li><li><p>开机自启动<br>brew services start mongodb</p></li></ul><h3 id="二、更新"><a href="#二、更新" class="headerlink" title="二、更新"></a>二、更新</h3><ul><li><p>更新 homebrew<br>brew update</p></li><li><p>更新 mongodb<br>brew upgrade mongodb</p></li><li><p>查询 mongodb 相关软件<br>brew search mongodb</p></li><li><p>查询 mongodb 相关信息<br>brew info mongodb</p></li><li><p>卸载 mongodb<br>brew uninstall mongodb</p></li></ul><h3 id="三、基础命令"><a href="#三、基础命令" class="headerlink" title="三、基础命令"></a>三、基础命令</h3><ul><li><p>进入命令行<br>mongo</p></li><li><p>连接远程数据库<br>mongo “mongodb://cluster0-shard-00-00-jxeqq.mongodb.net:27017,cluster0-shard-00-01-jxeqq.mongodb.net:27017,cluster0-shard-00-02-jxeqq.mongodb.net:27017/test?replicaSet=Cluster0-shard-0” –authenticationDatabase admin –ssl –username m001-student –password m001-mongodb-basics</p></li><li><p>退出命令行<br>quit()</p></li><li><p>查看数据库列表<br>show databases</p></li><li><p>使用数据库、创建数据库<br>use databases</p></li><li><p>查看当前数据库<br>db</p></li><li><p>删除当前数据库<br>db.dropDatabase()</p></li><li><p>不切换当前数据库访问其他的数据库<br>db.getSiblingDB(‘name’)</p></li><li><p>删除集合<br>db.collection.drop()</p></li><li><p>查看集合数据数量<br>db.collection.count()</p></li><li><p>插入单条数据<br>db.collection.insertOne(doc)</p></li><li><p>批量插入<br>db.collection.insertMany([doc…], { “ordered”: false })<br>ordered 为 false 即遇到出错继续执行插入操作，默认为 true，遇错停止</p></li><li><p>数据查询<br>db.collection.find({a: b, “c.d”: e, “f.0”: g, h: [i, j]}).pretty()<br>查询同时满足多个条件的数据；<br>pretty() 格式化输出；<br>如果 “a” 对应的值是数组类型，则查找文档中 “a” 数组含有 b 元素；<br>“c.d” 是嵌套文档；<br>查找文档中 “f” 数组第一个是 g 元素；<br>查找文档中 “h” 数组含 [i, j] 且数组元素顺序固定；</p></li><li><p>查询下一页<br>it<br>命令行查找默认显示20条数据，如果查看更多输入 it（iterate）遍历下个20条数据</p></li><li><p>分页查询<br>sort: 1 升序；-1 降序<br>skip: 查询 5 条之后的数据<br>limit: 总计返回 10 条件数据<br>db.userInfo.find().sort({age: -1}).skip(5).limit(10)</p></li><li><p>格式化输出字段<br>db.collection.find({a: b}, {c: 1})<br>查找默认显示全部字段，如果 project 特别指定返回某些字段，如 c: 1，则显示 c 和 _id，其他字段隐藏，_id 需明确指定（_id : 0）不返回才不会显示；如果设定一些字段为 0，则隐藏这些字段，其他字段显示</p></li><li><p>查找集合中某个字段所有不同的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 数据对象 --&gt;</span><br><span class="line">&#123; &quot;_id&quot;: 1, &quot;dept&quot;: &quot;A&quot;, &quot;item&quot;: &#123; &quot;sku&quot;: &quot;111&quot;, &quot;color&quot;: &quot;red&quot; &#125;, &quot;sizes&quot;: [ &quot;S&quot;, &quot;M&quot; ] &#125;</span><br><span class="line">&#123; &quot;_id&quot;: 2, &quot;dept&quot;: &quot;A&quot;, &quot;item&quot;: &#123; &quot;sku&quot;: &quot;111&quot;, &quot;color&quot;: &quot;blue&quot; &#125;, &quot;sizes&quot;: [ &quot;M&quot;, &quot;L&quot; ] &#125;</span><br><span class="line">&#123; &quot;_id&quot;: 3, &quot;dept&quot;: &quot;B&quot;, &quot;item&quot;: &#123; &quot;sku&quot;: &quot;222&quot;, &quot;color&quot;: &quot;blue&quot; &#125;, &quot;sizes&quot;: &quot;S&quot; &#125;</span><br><span class="line">&#123; &quot;_id&quot;: 4, &quot;dept&quot;: &quot;A&quot;, &quot;item&quot;: &#123; &quot;sku&quot;: &quot;333&quot;, &quot;color&quot;: &quot;black&quot; &#125;, &quot;sizes&quot;: [ &quot;S&quot; ] &#125;</span><br><span class="line">&lt;!-- 字段返回 --&gt;</span><br><span class="line">db.inventory.distinct( &quot;dept&quot; )</span><br><span class="line">[ &quot;A&quot;, &quot;B&quot; ]</span><br><span class="line">&lt;!-- 嵌套字段返回 --&gt;</span><br><span class="line">db.inventory.distinct( &quot;item.sku&quot; )</span><br><span class="line">[ &quot;111&quot;, &quot;222&quot;, &quot;333&quot; ]</span><br><span class="line">&lt;!-- 数组返回 --&gt;</span><br><span class="line">db.inventory.distinct( &quot;sizes&quot; )</span><br><span class="line">[ &quot;M&quot;, &quot;S&quot;, &quot;L&quot; ]</span><br><span class="line">&lt;!-- 加查询条件 --&gt;</span><br><span class="line">db.inventory.distinct( &quot;item.sku&quot;, &#123; dept: &quot;A&quot; &#125; )</span><br><span class="line">[ &quot;111&quot;, &quot;333&quot; ]</span><br></pre></td></tr></table></figure></li><li><p>替换某条数据<br>updateOne 是更新文档中某个字段，replaceOne 则是替换整个文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let filter = &#123;title: &quot;House, M.D., Season Four: New Beginnings&quot;&#125;</span><br><span class="line">let doc = db.movieDetails.findOne(filter);</span><br><span class="line">doc.poster;</span><br><span class="line">doc.poster = &quot;https://www.imdb.com/title/tt1329164/mediaviewer/rm2619416576&quot;;</span><br><span class="line">doc.genres;</span><br><span class="line">doc.genres.push(&quot;TV Series&quot;);</span><br><span class="line">db.movieDetails.replaceOne(filter, doc);</span><br></pre></td></tr></table></figure></li><li><p>删除某条数据<br>db.orders.deleteOne( { “_id” : ObjectId(“563237a41a4d68582c2509da”) } )<br>deleteOne 删除单文档，deleteMany 删除多文档</p></li><li><p>执行 js 文件<br>load(‘filePath.js’)</p></li></ul><h3 id="四、更新操作符"><a href="#四、更新操作符" class="headerlink" title="四、更新操作符"></a>四、更新操作符</h3><ul><li><p>$set<br>db.collection.updateOne({a: b}, {$set: {c: d}})<br>更新单条数据，c 的值将被更新为 d，updateMany 更新所有匹配到的数据</p></li><li><p>$push &amp; $each<br>$push 将元素添加到数组中；$each 遍历数组，添加到 reviews 数组中；upsert 选项为若没有查询到匹配的文档，则插入该文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">db.movieDetails.updateOne(&#123;</span><br><span class="line">  title: &quot;The Martian&quot;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  $push: &#123;</span><br><span class="line">    reviews: &#123;</span><br><span class="line">      $each: [&#123;</span><br><span class="line">         rating: 0.5,</span><br><span class="line">         reviewer: &quot;Yabo A.&quot;</span><br><span class="line">      &#125;, &#123;</span><br><span class="line">         rating: 5,</span><br><span class="line">         reviewer: &quot;Kristina Z.&quot;</span><br><span class="line">      &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  upsert: true</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>$unset<br>删除相应字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">db.movieDetails.updateMany(&#123;</span><br><span class="line">  rated: null</span><br><span class="line">&#125;, &#123;</span><br><span class="line">  $unset: &#123;</span><br><span class="line">    rated: &quot;&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>$rename<br>db.students.updateMany( {}, { $rename: { “nmae”: “name” } } )<br>更新字段名</p></li><li><p>$inc<br>$inc 字段增加值，接受正负数，如果字段不存在则为设置值，如果值为 null 则报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.products.update(</span><br><span class="line">   &#123; sku: &quot;abc123&quot; &#125;,</span><br><span class="line">   &#123; $inc: &#123; quantity: -2, &quot;metrics.orders&quot;: 1 &#125; &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>$addToSet<br>添加值到数组中，含去重，即相同元素不添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.inventory.update(</span><br><span class="line">   &#123; _id: 2 &#125;,</span><br><span class="line">   &#123; $addToSet: &#123; tags: &#123; $each: [ &quot;camera&quot;, &quot;electronics&quot;, &quot;accessories&quot; ] &#125; &#125; &#125;</span><br><span class="line"> )</span><br></pre></td></tr></table></figure></li><li><p>$pop<br>从数组中移除第一个或最后一个元素，其中 -1 为第一个，1 为最后一个<br>db.students.update( { _id: 1 }, { $pop: { scores: -1 } } )</p></li><li><p>$pull<br>从数组中移除满足条件的元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.stores.update(</span><br><span class="line">    &#123; &#125;,</span><br><span class="line">    &#123; $pull: &#123; fruits: &#123; $in: [ &quot;apples&quot;, &quot;oranges&quot; ] &#125;, vegetables: &quot;carrots&quot; &#125; &#125;,</span><br><span class="line">    &#123; multi: true &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure></li><li><p>$pullAll<br>从数组中移除匹配到的值<br>db.survey.update( { _id: 1 }, { $pullAll: { scores: [ 0, 5 ] } } )</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mongodb shell 安装和基础操作。&lt;br&gt;
    
    </summary>
    
      <category term="database" scheme="http://blog.master-ss.cn/categories/database/"/>
    
    
  </entry>
  
</feed>
